### YamlMime:PowershellCmdlet
summary: |-
  Applies a dynamic deployment or user configuration file to a package.
module: AppVServer
notes: |-
  * If the cmdlet cannot find a package cannot be found, the cmdlet returns the following error: The specified package could not be found on the system. The cmdlet fails the operation.
  * If you specify an invalid group, the cmdlet returns the following error: The provided entitlements are not valid. The cmdlet fails the operation.
  * If you do not specify version information, the cmdlet acts on all available versions of the package.
  * Do not specify Active Directory entitlements when supplying a deployment configuration. If so, the cmdlet returns an error.
  * Do not set both deployment configuration and user configuration at the same time.
inputs:
- name: <xref href="AppvServer.AppvServerPackage" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-AppvServerPackage
  href: ./Get-AppvServerPackage.yml
- text: Grant-AppvServerPackage
  href: ./Grant-AppvServerPackage.yml
- text: Import-AppvServerPackage
  href: ./Import-AppvServerPackage.yml
- text: Publish-AppvServerPackage
  href: ./Publish-AppvServerPackage.yml
- text: Remove-AppvServerPackage
  href: ./Remove-AppvServerPackage.yml
- text: Unpublish-AppvServerPackage
  href: ./Unpublish-AppvServerPackage.yml
syntaxes:
- >-
  Set-AppvServerPackage [-AppvServerPackage] <PackageVersion> [[-Groups] <String[]>]

   [[-DynamicDeploymentConfigurationPath] <String>] [[-DynamicUserConfigurationPath] <String>] [-WhatIf]

   [-Confirm] [<CommonParameters>]
- >-
  Set-AppvServerPackage [[-Groups] <String[]>] [-Name] <String> [[-Version] <String>]

   [[-DynamicDeploymentConfigurationPath] <String>] [[-DynamicUserConfigurationPath] <String>] [-WhatIf]

   [-Confirm] [<CommonParameters>]
- >-
  Set-AppvServerPackage [[-Groups] <String[]>] [-PackageID] <Guid> [[-VersionID] <Guid>]

   [[-DynamicDeploymentConfigurationPath] <String>] [[-DynamicUserConfigurationPath] <String>] [-WhatIf]

   [-Confirm] [<CommonParameters>]
examples:
- title: '1:'
  code: ""
  description: ""
  summary: ""
parameters:
- type: <xref href="PackageVersion" data-throw-if-not-resolved="False" />
  name: AppvServerPackage
  isRequired: true
  description: |+
    Specifies an array of **AppVServerPackage** objects.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: DynamicDeploymentConfigurationPath
  description: |+
    Specifies the path to a dynamic deployment configuration file for the specified Microsoft Application Virtualization (App-V) package.
    The cmdlet uses the dynamic deployment configuration file to override the default behavior provided in the package's manifest.

    If you do not specify this parameter, the App-V agent assign the Default Machine Policy to the App-V package to be added.

  defaultValue: None
  position: "3"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: DynamicUserConfigurationPath
  description: |+
    Specifies the path to a dynamic user configuration file for the specified App-V package.
    The cmdlet uses the user policy file to override the default behavior provided in the package manifest.
    If you do not specify this parameter, the default user policy will be applied to the package.

  defaultValue: None
  position: "4"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Groups
  description: |+
    Specifies an array of names of Active Directory groups.

  defaultValue: None
  position: "2"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    Specifies the friendly name of the package given when the package was created.
    This value is obtained from the package manifest.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Guid" data-throw-if-not-resolved="False" />
  name: PackageID
  isRequired: true
  description: |+
    Specifies the GUID that uniquely identifies the package.
    It can be found in the package manifest or by opening the package in the App-V sequencer.
    The package GUID is shared by all versions of a specific package.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Version
  description: |+
    Specifies the version of an App-V package in one specific lineage.
    If you do not specify a version, the cmdlet acts on all versions saved on the computer.

  defaultValue: None
  pipelineInput: true
  position: "2"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Guid" data-throw-if-not-resolved="False" />
  name: VersionID
  description: |+
    Specifies a GUID that differentiates a package version from other versions, whether older, newer, or of a completely different lineage.
    If you do not specify a GUID, the cmdlet operates on all versions of the package.

  defaultValue: None
  pipelineInput: true
  position: "2"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: AppVServer.Set-AppvServerPackage
name: Set-AppvServerPackage
description: |-
  The **Set-AppvServerPackage** cmdlet applies a dynamic deployment or user configuration file to a package.

  Only one deployment configuration can be entitled to a package.

  Multiple user configuration files can be applied to a package to specific Active Directory group entitlements.
metadata:
  description: Use this topic to help manage MDOP technologies with Windows PowerShell.
  external help file: AppVServerCmdlets.dll-Help.xml
  ms.date: 12/05/2016
  ms.devlang: powershell
  schema: 2.0.0
  title: Set-AppvServerPackage
