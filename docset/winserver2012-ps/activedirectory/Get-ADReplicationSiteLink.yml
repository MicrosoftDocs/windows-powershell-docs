### YamlMime:PowershellCmdlet
summary: |-
  Returns a specific Active Directory site link or a set of site links based on a specified filter.
module: ActiveDirectory
notes: ""
inputs:
- name: <xref href="None or Microsoft.ActiveDirectory.Management.ADReplicationSiteLink" data-throw-if-not-resolved="False" />
  description: |-
    A site link object is received by the Identity parameter.
outputs:
- name: <xref href="Microsoft.ActiveDirectory.Management.ADReplicationSiteLink" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: New-ADReplicationSiteLink
  href: ./New-ADReplicationSiteLink.yml
- text: Remove-ADReplicationSiteLink
  href: ./Remove-ADReplicationSiteLink.yml
- text: Set-ADReplicationSiteLink
  href: ./Set-ADReplicationSiteLink.yml
syntaxes:
- >-
  Get-ADReplicationSiteLink [-AuthType <ADAuthType>] [-Credential <PSCredential>] -Filter <String>

   [-Properties <String[]>] [-Server <String>] [<CommonParameters>]
- >-
  Get-ADReplicationSiteLink [-AuthType <ADAuthType>] [-Credential <PSCredential>]

   [-Identity] <ADReplicationSiteLink> [-Properties <String[]>] [-Server <String>] [<CommonParameters>]
examples:
- title: '-------------------------- EXAMPLE 1 --------------------------'
  code: |-
    C:\PS>Get-ADReplicationSiteLink -Filter *
  description: |-
    Description

    -----------

    Get all the site links.
  summary: ""
- title: '-------------------------- EXAMPLE 2 --------------------------'
  code: |-
    C:\PS>Get-ADReplicationSiteLink -Filter "SitesIncluded -eq 'NorthAmerica'" | FT Name,SitesIncluded -A
  description: |-
    Description

    -----------

    Get all site links that include 'NorthAmerica'.
  summary: ""
- title: '-------------------------- EXAMPLE 3 --------------------------'
  code: |-
    C:\PS>Get-ADReplicationSiteLink -Filter "Cost -gt 100 -and ReplicationFrequencyInMinutes -lt 15"
  description: |-
    Description

    -----------

    Get all site links that have a cost greater than 100 and a replication frequency less than 15 minutes.
  summary: ""
- title: '-------------------------- EXAMPLE 4 --------------------------'
  code: |-
    C:\PS>Get-ADReplicationSiteLink "Europe-Asia"
  description: |-
    Description

    -----------

    Get the site link with name 'Europe-Asia'.
  summary: ""
- title: '-------------------------- EXAMPLE 5 --------------------------'
  code: |-
    C:\PS>Get-ADReplicationSiteLink "Europe-Asia" -Properties ReplicationSchedule
  description: |-
    Description

    -----------

    Get the ReplicationSchedule property of the site link with name 'Europe-Asia'.
  summary: ""
parameters:
- type: <xref href="ADAuthType" data-throw-if-not-resolved="False" />
  name: AuthType
  description: |+
    Specifies the authentication method to use.
    Possible values for this parameter include:

    Negotiate or 0

    Basic or 1

    The default authentication method is Negotiate.

    A Secure Sockets Layer (SSL) connection is required for the Basic authentication method.

    The following example shows how to set this parameter to Basic.

    -AuthType Basic

  defaultValue: Microsoft.ActiveDirectory.Management.AuthType.Negotiate
  position: Named
  aliases: ""
  parameterValueGroup: Negotiate, Basic
- type: <xref href="PSCredential" data-throw-if-not-resolved="False" />
  name: Credential
  description: |+
    Specifies the user account credentials to use to perform this task.
    The default credentials are the credentials of the currently logged on user unless the cmdlet is run from an Active Directory PowerShell provider drive.
    If the cmdlet is run from such a provider drive, the account associated with the drive is the default.

    To specify this parameter, you can type a user name, such as "User1" or "Domain01\User01" or you can specify a PSCredential object.
    If you specify a user name for this parameter, the cmdlet prompts for a password.

    You can also create a PSCredential object by using a script or by using the Get-Credential cmdlet.
    You can then set the Credential parameter to the PSCredential object The following example shows how to create credentials.

    $AdminCredentials = Get-Credential "Domain01\User01"

    The following shows how to set the Credential parameter to these credentials.

    -Credential $AdminCredentials

    If the acting credentials do not have directory-level permission to perform the task, Active Directory PowerShell returns a terminating error.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Filter
  isRequired: true
  description: |+
    Specifies a query string that retrieves Active Directory objects.
    This string uses the PowerShell Expression Language syntax.
    The PowerShell Expression Language syntax provides rich type-conversion support for value types received by the Filter parameter.
    The syntax uses an in-order representation, which means that the operator is placed between the operand and the value.
    For more information about the Filter parameter, see about_ActiveDirectory_Filter.

    Syntax:

    The following syntax uses Backus-Naur form to show how to use the PowerShell Expression Language for this parameter.

    \<filter\>  ::= "{" \<FilterComponentList\> "}"

    \<FilterComponentList\> ::= \<FilterComponent\> | \<FilterComponent\> \<JoinOperator\> \<FilterComponent\> | \<NotOperator\>  \<FilterComponent\>

    \<FilterComponent\> ::= \<attr\> \<FilterOperator\> \<value\> | "(" \<FilterComponent\> ")"

    \<FilterOperator\> ::= "-eq" | "-le" | "-ge" | "-ne" | "-lt" | "-gt"| "-approx" | "-bor" | "-band" | "-recursivematch" | "-like" | "-notlike"

    \<JoinOperator\> ::= "-and" | "-or"

    \<NotOperator\> ::= "-not"

    \<attr\> ::= \<PropertyName\> | \<LDAPDisplayName of the attribute\>

    \<value\>::= \<compare this value with an \<attr\> by using the specified \<FilterOperator\>\>

    For a list of supported types for \<value\>, see about_ActiveDirectory_ObjectModel.

    Note: To query using LDAP query strings, use the LDAPFilter parameter.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ADReplicationSiteLink" data-throw-if-not-resolved="False" />
  name: Identity
  isRequired: true
  description: |+
    Specifies an Active Directory object by providing one of the following property values.
    The identifier in parentheses is the LDAP display name for the attribute.

    Distinguished Name

    Example: CN=NorthAmerica-SouthAmerica,CN=IP,CN=Inter-Site Transports,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com

    GUID (objectGUID)

    Example: 599c3d2e-f72d-4d20-8a88-030d99495f20

    The cmdlet searches the default naming context or partition to find the object.
    If two or more objects are found, the cmdlet returns a non-terminating error.

    This parameter can also get this object through the pipeline or you can set this parameter to an object instance.

    This example shows how to set this parameter to an ADObject object instance named "ADObjectInstance".

    -Identity   $ADObjectInstance

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Properties
  description: |+
    Specifies the properties of the output object to retrieve from the server.
    Use this parameter to retrieve properties that are not included in the default set.

    Specify properties for this parameter as a comma-separated list of names.
    To display all of the attributes that are set on the object, specify * (asterisk).

    To specify an individual extended property, use the name of the property.
    For properties that are not default or extended properties, you must specify the LDAP display name of the attribute.

    To retrieve properties and display them for an object, you can use the Get-* cmdlet associated with the object and pass the output to the Get-Member cmdlet.
    The following examples show how to retrieve properties for a group where the Administrator's group is used as the sample group object.

    Get-ADGroup -Identity Administrators | Get-Member

    To retrieve and display the list of all the properties for an ADGroup object, use the following command:

    Get-ADGroup -Identity Administrators -Properties *| Get-Member

    The following examples show how to use the Properties parameter to retrieve individual properties as well as the default, extended or complete set of properties.

    To retrieve the extended properties "OfficePhone" and "Organization" and the default properties of an ADUser object named "SaraDavis", use the following command:

    GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

    To retrieve the properties with LDAP display names of "otherTelephone" and "otherMobile", in addition to the default properties for the same user, use the following command:

    GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member

  defaultValue: None
  position: Named
  aliases: Property
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Server
  description: |+
    Specifies the Active Directory Domain Services instance to connect to, by providing one of the following values for a corresponding domain name or directory server.
    The service may be any of the following:  Active Directory Lightweight Domain Services, Active Directory Domain Services or Active Directory Snapshot instance.

    Domain name values:

    Fully qualified domain name

    Examples: corp.contoso.com

    NetBIOS name

    Example: CORP

    Directory server values:

    Fully qualified directory server name

    Example: corp-DC12.corp.contoso.com

    NetBIOS name

    Example: corp-DC12

    Fully qualified directory server name and port

    Example: corp-DC12.corp.contoso.com:3268

    The default value for the Server parameter is determined by one of the following methods in the order that they are listed:

    -By using Server value from objects passed through the pipeline.

    -By using the server information associated with the Active Directory PowerShell provider drive, when running under that drive.

    -By using the domain of the computer running Windows PowerShell.

    The following example shows how to specify a full qualified domain name as the parameter value.

    -Server "corp.contoso.com"

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: ActiveDirectory.Get-ADReplicationSiteLink
name: Get-ADReplicationSiteLink
description: |-
  The Get-ADReplicationSiteLink cmdlet can be used to return a specific Active Directory site link or a set of site links based on a specified filter. 
  A site link connects two or more sites.
  Site links reflect the administrative policy for how sites are to be interconnected and the methods used to transfer replication traffic.
  You must connect sites with site links so that domain controllers at each site can replicate Active Directory changes.
metadata:
  external help file: Microsoft.ActiveDirectory.Management.dll-Help.xml
  Module Name: ActiveDirectory
  online version: https://docs.microsoft.com/powershell/module/activedirectory/get-adreplicationsitelink?view=windowsserver2012-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
