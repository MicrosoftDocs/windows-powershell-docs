### YamlMime:PowershellCmdlet
summary: |-
  Creates a new Active Directory replication subnet object.
module: ActiveDirectory
notes: ""
inputs:
- name: <xref href="None or Microsoft.ActiveDirectory.Management.ADReplicationSubnet" data-throw-if-not-resolved="False" />
  description: |-
    A subnet object that is a template for the new subnet object is received by the Instance parameter.
outputs:
- name: <xref href="None or Microsoft.ActiveDirectory.Management.ADReplicationSubnet" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-ADReplicationSubnet
  href: ./Get-ADReplicationSubnet.yml
- text: Remove-ADReplicationSubnet
  href: ./Remove-ADReplicationSubnet.yml
- text: Set-ADReplicationSubnet
  href: ./Set-ADReplicationSubnet.yml
syntaxes:
- >-
  New-ADReplicationSubnet [-WhatIf] [-Confirm] [-AuthType <ADAuthType>] [-Credential <PSCredential>]

   [-Description <String>] [-Instance <ADReplicationSubnet>] [-Location <String>] [-Name] <String>

   [-OtherAttributes <Hashtable>] [-PassThru] [-Server <String>] [[-Site] <ADReplicationSite>]

   [<CommonParameters>]
examples:
- title: '-------------------------- EXAMPLE 1 --------------------------'
  code: |-
    C:\PS>New-ADReplicationSubnet -Name "10.0.0.0/25"
  description: |-
    Description

    -----------

    Create a new subnet named '10.0.0.0/25'.
  summary: ""
- title: '-------------------------- EXAMPLE 2 --------------------------'
  code: |-
    C:\PS>New-ADReplicationSubnet -Name "10.10.0.0/22" -Site Asia -Location "Tokyo,Japan"
  description: |-
    Description

    -----------

    Create a new subnet named '10.10.0.0/22' with 'Asia' as its associated site, and set the Location property to "Tokyo,Japan".
  summary: ""
parameters:
- type: <xref href="ADAuthType" data-throw-if-not-resolved="False" />
  name: AuthType
  description: |+
    Specifies the authentication method to use.
    Possible values for this parameter include:

    Negotiate or 0

    Basic or 1

    The default authentication method is Negotiate.

    A Secure Sockets Layer (SSL) connection is required for the Basic authentication method.

    The following example shows how to set this parameter to Basic.

    -AuthType Basic

  defaultValue: Microsoft.ActiveDirectory.Management.AuthType.Negotiate
  position: Named
  aliases: ""
  parameterValueGroup: Negotiate, Basic
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="PSCredential" data-throw-if-not-resolved="False" />
  name: Credential
  description: |+
    Specifies a user account that has permission to perform this action.
    The default is the current user.

    Type a user name, such as "User01" or "Domain01\User01", or enter a PSCredential object, such as one generated by the Get-Credential cmdlet.
    If you type a user name, you will be prompted for a password.

    This parameter is not supported by any providers installed with Windows PowerShell.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Description
  description: |+
    Specifies a description of the object.
    This parameter sets the value of the Description property for the object.
    The LDAP Display Name (ldapDisplayName) for this property is "description".

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ADReplicationSubnet" data-throw-if-not-resolved="False" />
  name: Instance
  description: |+
    Specifies an instance of a subnet object to use as a template for a new subnet object.

    You can use an instance of an existing subnet object as a template or you can construct a new subnet object by using the Windows PowerShell command line or by using a script.
    The following examples show how to use these two methods to create a new subnet object.

    Method 1: Use an existing subnet object as a template for a new subnet object.
    To retrieve an instance of an existing subnet object, use the Get-ADReplicationSubnet cmdlet.
    Then provide this object to the Instance parameter of the New-ADReplicationSubnet cmdlet to create a new subnet object.
    You can override property values of the new object by setting the appropriate parameters.

    $objectInstance = Get-ADReplicationSubnet -Identity "10.0.0.0/25"

    New-ADReplicationSubnet -Name "12.0.0.0/25"  -Instance $ObjectInstance

    Method 2: Create a new ADReplicationSubnet and set the property values by using the Windows PowerShell command line interface.
    Then pass this object to the Instance parameter of the New-ADReplicationSubnet cmdlet to create the new subnet object.

    $objectInstance = new-object Microsoft.ActiveDirectory.Management.ADReplicationSubnet

    $objectInstance.Description = "Branch office subnet."

    New-ADReplicationSubnet -Name "10.0.0.0/25" -Instance $ObjectInstance

    Note: Specified attributes are not validated, so attempting to set attributes that do not exist or cannot be set will raise an error.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Location
  description: |+
    A description of the physical location of this subnet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    Specifies the name of the subnet.
    This parameter sets the Name property of the Active Directory object.
    The LDAP Display Name (ldapDisplayName) of this property is "name".

    Subnet names in Active Directory take the form "network/bits masked" (for example, the subnet object 172.16.72.0/22 has a subnet of 172.16.72.0 and a 22-bit subnet mask).

    The following example shows how to set this parameter to a name string.

    -Name "172.16.72.0/22"

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: OtherAttributes
  description: |+
    Specifies object attribute values for attributes that are not represented by cmdlet parameters.
    You can set one or more parameters at the same time with this parameter.
    If an attribute takes more than one value, you can assign multiple values.
    To identify an attribute, specify the LDAPDisplayName (ldapDisplayName) defined for it in the Active Directory schema.

    Syntax:

    To specify a single value for an attribute:

    -OtherAttributes @{'AttributeLDAPDisplayName'=value}

    To specify multiple values for an attribute

    -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

    You can specify values for more than one attribute by using semicolons to separate attributes. 
    The following syntax shows how to set values for multiple attributes:

    -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

    The following examples show how to use this parameter.

    To set the value of a custom attribute called favColors that takes a set of Unicode strings, use the following syntax:

    -OtherAttributes @{'favColors'="pink","purple"}

    To set values for favColors and dateOfBirth simultaneously, use the following syntax:

    -OtherAttributes @{'favColors'="pink","purple"; 'dateOfBirth'=" 01/01/1960"}

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns the new or modified object.
    By default (i.e.
    if -PassThru is not specified), this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Server
  description: |+
    Specifies the Active Directory Domain Services instance to connect to, by providing one of the following values for a corresponding domain name or directory server.
    The service may be any of the following:  Active Directory Lightweight Domain Services, Active Directory Domain Services or Active Directory Snapshot instance.

    Domain name values:

    Fully qualified domain name

    Examples: corp.contoso.com

    NetBIOS name

    Example: CORP

    Directory server values:

    Fully qualified directory server name

    Example: corp-DC12.corp.contoso.com

    NetBIOS name

    Example: corp-DC12

    Fully qualified directory server name and port

    Example: corp-DC12.corp.contoso.com:3268

    The default value for the Server parameter is determined by one of the following methods in the order that they are listed:

    -By using Server value from objects passed through the pipeline.

    -By using the server information associated with the Active Directory PowerShell provider drive, when running under that drive.

    -By using the domain of the computer running Powershell.

    The following example shows how to specify a full qualified domain name as the parameter value.

    -Server "corp.contoso.com"

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ADReplicationSite" data-throw-if-not-resolved="False" />
  name: Site
  description: |+
    The site associated with this subnet.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: ActiveDirectory.New-ADReplicationSubnet
name: New-ADReplicationSubnet
description: |-
  The New-ADReplicationSubnet cmdlet creates a new Active Directory subnet object.
  Subnet objects (class subnet) define network subnets in Active Directory.
  A network subnet is a segment of a TCP/IP network to which a set of logical IP addresses is assigned.
  Subnets group computers in a way that identifies their physical proximity on the network.
  Subnet objects in Active Directory are used to map computers to sites.
metadata:
  external help file: Microsoft.ActiveDirectory.Management.dll-Help.xml
  Module Name: ActiveDirectory
  online version: https://docs.microsoft.com/powershell/module/activedirectory/new-adreplicationsubnet?view=windowsserver2012-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
