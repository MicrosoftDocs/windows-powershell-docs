### YamlMime:PowershellCmdlet
summary: |-
  Changes the name of an Active Directory object.
module: ActiveDirectory
notes: |-
  * This cmdlet does not work with an Active Directory Snapshot.

    This cmdlet does not work with a read-only domain controller.
inputs:
- name: <xref href="None or Microsoft.ActiveDirectory.Management.ADObject" data-throw-if-not-resolved="False" />
  description: |-
    An Active Directory object is received by the Identity parameter.

    Derived types, such as the following are also accepted:

    Microsoft.ActiveDirectory.Management.ADGroup

    Microsoft.ActiveDirectory.Management.ADUser

    Microsoft.ActiveDirectory.Management.ADComputer

    Microsoft.ActiveDirectory.Management.ADServiceAccount

    Microsoft.ActiveDirectory.Management.ADOrganizationalUnit

    Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
outputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-ADObject
  href: ./Get-ADObject.yml
- text: Move-ADObject
  href: ./Move-ADObject.yml
- text: New-ADObject
  href: ./New-ADObject.yml
- text: Remove-ADObject
  href: ./Remove-ADObject.yml
- text: Restore-ADObject
  href: ./Restore-ADObject.yml
- text: Set-ADObject
  href: ./Set-ADObject.yml
syntaxes:
- >-
  Rename-ADObject [-WhatIf] [-Confirm] [-AuthType <ADAuthType>] [-Credential <PSCredential>]

   [-Identity] <ADObject> [-NewName] <String> [-Partition <String>] [-PassThru] [-Server <String>]

   [<CommonParameters>]
examples:
- title: '-------------------------- EXAMPLE 1 --------------------------'
  code: |-
    C:\PS>Rename-ADObject -Identity "CN=HQ,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM" -NewName UnitedKingdomHQ
  description: |-
    Description

    -----------

    Rename the name of an existing site 'HQ' to the new name 'UnitedKingdomHQ'.
    If the distinguished name is provided in the -Identity parameter, then the -Partition parameter is not required.
  summary: ""
- title: '-------------------------- EXAMPLE 2 --------------------------'
  code: |-
    C:\PS>Rename-ADObject -Identity "4777c8e8-cd29-4699-91e8-c507705a0966" -NewName "AmsterdamHQ" -Partition "CN=Configuration,DC=FABRIKAM,DC=COM"
  description: |-
    Description

    -----------

    Rename the object with objectGUID '4777c8e8-cd29-4699-91e8-c507705a096'6 to 'SiteNewName'.
    Note -Partition parameter is required because the Naming Context of the site object is not known from the GUID provided to the -Identity parameter.
  summary: ""
- title: '-------------------------- EXAMPLE 3 --------------------------'
  code: |-
    C:\PS>Rename-ADObject "OU=ManagedGroups,OU=Managed,DC=Fabrikam,DC=Com" -NewName Groups
  description: |-
    Description

    -----------

    Rename the object with the DistinguishedName 'OU=ManagedGroups,OU=Managed,DC=Fabrikam,DC=Com' to 'Groups'.
  summary: ""
- title: '-------------------------- EXAMPLE 4 --------------------------'
  code: |-
    C:\PS>Rename-ADObject -Identity "4777c8e8-cd29-4699-91e8-c507705a0966" -NewName "DavidAhs"
  description: |-
    Description

    -----------

    Rename the object with objectGUID '4777c8e8-cd29-4699-91e8-c507705a0966' to 'DavidAhs'.
    Note that the -Partition parameter is not specified because the object is in the Default Naming Context of the domain.
  summary: ""
- title: '-------------------------- EXAMPLE 5 --------------------------'
  code: |-
    C:\PS>Rename-ADObject "CN=Apps,DC=AppNC" -NewName "InternalApps" -server "FABRIKAM-SRV1:60000"
  description: |-
    Description

    -----------

    Rename the container 'CN=Apps,DC=AppNC' to 'InternalApps' in an LDS instance.
  summary: ""
parameters:
- type: <xref href="ADAuthType" data-throw-if-not-resolved="False" />
  name: AuthType
  description: |+
    Specifies the authentication method to use.
    Possible values for this parameter include:

    Negotiate or 0

    Basic or 1

    The default authentication method is Negotiate.

    A Secure Sockets Layer (SSL) connection is required for the Basic authentication method.

    The following example shows how to set this parameter to Basic.

    -AuthType Basic

  defaultValue: Microsoft.ActiveDirectory.Management.AuthType.Negotiate
  position: Named
  aliases: ""
  parameterValueGroup: Negotiate, Basic
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="PSCredential" data-throw-if-not-resolved="False" />
  name: Credential
  description: |+
    Specifies the user account credentials to use to perform this task.
    The default credentials are the credentials of the currently logged on user unless the cmdlet is run from an Active Directory PowerShell provider drive.
    If the cmdlet is run from such a provider drive, the account associated with the drive is the default.

    To specify this parameter, you can type a user name, such as "User1" or "Domain01\User01" or you can specify a PSCredential object.
    If you specify a user name for this parameter, the cmdlet prompts for a password.

    You can also create a PSCredential object by using a script or by using the Get-Credential cmdlet.
    You can then set the Credential parameter to the PSCredential object The following example shows how to create credentials.

    $AdminCredentials = Get-Credential "Domain01\User01"

    The following shows how to set the Credential parameter to these credentials.

    -Credential $AdminCredentials

    If the acting credentials do not have directory-level permission to perform the task, Active Directory PowerShell returns a terminating error.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ADObject" data-throw-if-not-resolved="False" />
  name: Identity
  isRequired: true
  description: |+
    Specifies an Active Directory object by providing one of the following property values.
    The identifier in parentheses is the LDAP display name for the attribute.

    Distinguished Name

    Example: CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com

    GUID (objectGUID)

    Example: 599c3d2e-f72d-4d20-8a88-030d99495f20

    The cmdlet searches the default naming context or partition to find the object.
    If two or more objects are found, the cmdlet returns a non-terminating error.

    This parameter can also get this object through the pipeline or you can set this parameter to an object instance.

    Derived types, such as the following are also accepted:

    Microsoft.ActiveDirectory.Management.ADGroup

    Microsoft.ActiveDirectory.Management.ADUser

    Microsoft.ActiveDirectory.Management.ADComputer

    Microsoft.ActiveDirectory.Management.ADServiceAccount

    Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy

    Microsoft.ActiveDirectory.Management.ADDomain

    This example shows how to set this parameter to an ADObject object instance named "ADObjectInstance".

    -Identity   $ADObjectInstance

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: NewName
  isRequired: true
  description: |+
    Specifies the new name of the object.
    This parameter sets the Name property of the Active Directory object.
    The LDAP Display Name (ldapDisplayName) of this property is "name".

    The following example shows how to set this parameter to a name string.

    -NewName "SaraDavis"

  defaultValue: None
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Partition
  description: |+
    Specifies the distinguished name of an Active Directory partition.
    The distinguished name must be one of the naming contexts on the current directory server.
    The cmdlet searches this partition to find the object defined by the Identity parameter.

    The following two examples show how to specify a value for this parameter.

    -Partition "CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM"

    -Partition "CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM"

    In many cases, a default value will be used for the Partition parameter if no value is specified. 
    The rules for determining the default value are given below. 
    Note that rules listed first are evaluated first and once a default value can be determined, no further rules will be evaluated.

    In AD DS environments, a default value for Partition will be set in the following cases:  - If the Identity parameter is set to a distinguished name, the default value of Partition is automatically generated from this distinguished name.

    - If running cmdlets from an Active Directory provider drive, the default value of Partition is automatically generated from the current path in the drive.
    - If none of the previous cases apply, the default value of Partition will be set to the default partition or naming context of the target domain.

    In AD LDS environments, a default value for Partition will be set in the following cases:

    - If the Identity parameter is set to a distinguished name, the default value of Partition is automatically generated from this distinguished name.
    - If running cmdlets from an Active Directory provider drive, the default value of Partition is automatically generated from the current path in the drive.
    - If the target AD LDS instance has a default naming context, the default value of Partition will be set to the default naming context.  To specify a default naming context for an AD LDS environment, set the msDS-defaultNamingContext property of the Active Directory directory service agent (DSA) object (nTDSDSA) for the AD LDS instance.
    - If none of the previous cases apply, the Partition parameter will not take any default value.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns the new or modified object.
    By default (i.e.
    if -PassThru is not specified), this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Server
  description: |+
    Specifies the Active Directory Domain Services instance to connect to, by providing one of the following values for a corresponding domain name or directory server.
    The service may be any of the following:  Active Directory Lightweight Domain Services, Active Directory Domain Services or Active Directory Snapshot instance.

    Domain name values:

    Fully qualified domain name

    Examples: corp.contoso.com

    NetBIOS name

    Example: CORP

    Directory server values:

    Fully qualified directory server name

    Example: corp-DC12.corp.contoso.com

    NetBIOS name

    Example: corp-DC12

    Fully qualified directory server name and port

    Example: corp-DC12.corp.contoso.com:3268

    The default value for the Server parameter is determined by one of the following methods in the order that they are listed:

    -By using Server value from objects passed through the pipeline.

    -By using the server information associated with the Active Directory PowerShell provider drive, when running under that drive.

    -By using the domain of the computer running Powershell.

    The following example shows how to specify a full qualified domain name as the parameter value.

    -Server "corp.contoso.com"

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: ActiveDirectory.Rename-ADObject
name: Rename-ADObject
description: |-
  The Rename-ADObject cmdlet renames an Active Directory object.
  This cmdlet sets the Name property of an Active Directory object that has an LDAP Display Name (ldapDisplayName) of "name".
  To modify the given name, surname and other name of a user, use the Set-ADUser cmdlet.
  To modify the Security Accounts Manager (SAM) account name of a user, computer, or group, use the Set-ADUser, Set-ADComputer or Set-ADGroup cmdlet.

  The Identity parameter specifies the object to rename.
  You can identify an object or container by its distinguished name (DN) or GUID.
  You can also set the Identity parameter to an object variable such as $\<localObject\>, or you can pass an object through the pipeline to the Identity parameter.
  For example, you can use the Get-ADObject cmdlet to retrieve an object and then pass the object through the pipeline to the Rename-ADObject cmdlet.
  You can also use the Get-ADGroup, Get-ADUser, Get-ADComputer, Get-ADServiceAccount, Get-ADOrganizationalUnit and Get-ADFineGrainedPasswordPolicy cmdlets to get an object that you can pass through the pipeline to this cmdlet.

  The NewName parameter defines the new name for the object and must be specified.
metadata:
  external help file: Microsoft.ActiveDirectory.Management.dll-Help.xml
  Module Name: ActiveDirectory
  online version: https://docs.microsoft.com/powershell/module/activedirectory/rename-adobject?view=windowsserver2012-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
