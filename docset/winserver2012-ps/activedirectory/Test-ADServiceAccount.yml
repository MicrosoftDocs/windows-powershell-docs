### YamlMime:PowershellCmdlet
summary: |-
  Tests a managed service account from a computer.
module: ActiveDirectory
notes: ""
inputs:
- name: <xref href="None or Microsoft.ActiveDirectory.Management.ADServiceAccount" data-throw-if-not-resolved="False" />
  description: |-
    A managed service account object is received by the Identity parameter.
outputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: ""
syntaxes:
- Test-ADServiceAccount [-AuthType <ADAuthType>] [-Identity] <ADServiceAccount> [<CommonParameters>]
examples:
- title: '-------------------------- EXAMPLE 1 --------------------------'
  code: |-
    C:\PS>Test-ADServiceAccount -Identity MSA1


    True
  description: |-
    Description

    -----------

    Tests that the specified service account ("MSA1") is ready for use (it is able be authenticated and access the domain using its currently configured credentials) from the local computer.
  summary: ""
- title: '-------------------------- EXAMPLE 2 --------------------------'
  code: |-
    C:\PS>Test-ADServiceAccount -Identity MSA1


    False

    WARNING: Test failed for Managed Service Account MSA. If standalone Managed Service Account, the account is linked to another computer object in the Active Directory. If group Managed Service Account, either this computer does not have permission to use the group MSA or this computer does not support all the Kerberos encryption types required for the gMSA. See the MSA operational log for more information.
  description: |-
    Description

    -----------

    Test results returned if MsaInfoCannotInstall
  summary: ""
- title: '-------------------------- EXAMPLE 3 --------------------------'
  code: |-
    C:\PS>Test-ADServiceAccount -Identity MSA1


    False

    WARNING: The Managed Service Account MSA is not linked with any computer object in the directory.
  description: |-
    Description

    -----------

    Test returns MsaInfoCanInstall
  summary: ""
parameters:
- type: <xref href="ADAuthType" data-throw-if-not-resolved="False" />
  name: AuthType
  description: |+
    Specifies the authentication method to use.
    Possible values for this parameter include:

    Negotiate or 0

    Basic or 1

    The default authentication method is Negotiate.

    A Secure Sockets Layer (SSL) connection is required for the Basic authentication method.

    The following example shows how to set this parameter to Basic.

    -AuthType Basic

  defaultValue: Microsoft.ActiveDirectory.Management.AuthType.Negotiate
  position: Named
  aliases: ""
  parameterValueGroup: Negotiate, Basic
- type: <xref href="ADServiceAccount" data-throw-if-not-resolved="False" />
  name: Identity
  isRequired: true
  description: |+
    Specifies an Active Directory managed service account object by providing one of the following property values.
    The identifier in parentheses is the LDAP display name for the attribute.

    Distinguished Name

    Example:  CN=MyServiceMSA,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com

    GUID (objectGUID)

    Example: 599c3d2e-f72d-4d20-8a88-030d99495f20

    Security Identifier (objectSid)

    Example: S-1-5-21-3165297888-301567370-576410423-1103

    SAM account name  (sAMAccountName)

    Example: MyServiceMSA

    The cmdlet searches the default naming context or partition to find the object.
    If two or more objects are found, the cmdlet returns a non-terminating error.

    This parameter can also get this object through the pipeline or you can set this parameter to an object instance.

    This example shows how to set the parameter to a distinguished name.

    -Identity  "CN=MyServiceMSA,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com"

    This example shows how to set this parameter to a user object instance named "userInstance".

    -Identity   $userInstance

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
uid: ActiveDirectory.Test-ADServiceAccount
name: Test-ADServiceAccount
description: |-
  The Test-ADServiceAccount cmdlet tests a managed service account (MSA) from a local computer.

  The Identity parameter specifies the Active Directory MSA account to test.
  You can identify a MSA by its distinguished name (DN), GUID, security identifier (SID), or Security Accounts Manager (SAM) account name.
  You can also set the parameter to a MSA object variable, such as $\<localMSA\> or pass a MSA object through the pipeline to the Identity parameter.
  For example, you can use the Get-ADServiceAccount to get a MSA object and then pass that object through the pipeline to the Test-ADServiceAccount cmdlet.
metadata:
  external help file: Microsoft.ActiveDirectory.Management.dll-Help.xml
  Module Name: ActiveDirectory
  online version: https://docs.microsoft.com/powershell/module/activedirectory/test-adserviceaccount?view=windowsserver2012-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
