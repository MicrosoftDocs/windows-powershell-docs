### YamlMime:PowershellCmdlet
summary: |-
  Uninstalls an Active Directory managed service account from a computer or removes a cached group managed service account from a computer.
module: ActiveDirectory
notes: |-
  * This cmdlet does not work with AD LDS.

    This cmdlet does not work with an Active Directory Snapshot.

    This cmdlet does not work with a read-only domain controller.
inputs:
- name: <xref href="None or Microsoft.ActiveDirectory.Management.ADServiceAccount" data-throw-if-not-resolved="False" />
  description: |-
    A managed service account object is received by the Identity parameter.
    A switch parameter with name ForceRemoveLocal is provided to un-install standalone MSAs on a RODC only site.
outputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-ADServiceAccount
  href: ./Get-ADServiceAccount.yml
- text: Install-ADServiceAccount
  href: ./Install-ADServiceAccount.yml
- text: New-ADServiceAccount
  href: ./New-ADServiceAccount.yml
- text: Remove-ADServiceAccount
  href: ./Remove-ADServiceAccount.yml
- text: Set-ADServiceAccount
  href: ./Set-ADServiceAccount.yml
syntaxes:
- >-
  Uninstall-ADServiceAccount [-WhatIf] [-Confirm] [-AuthType <ADAuthType>] [-ForceRemoveLocal]

   [-Identity] <ADServiceAccount> [<CommonParameters>]
examples:
- title: '-------------------------- EXAMPLE 1 --------------------------'
  code: |-
    C:\PS>Uninstall-ADServiceAccount -Identity SQL-SRV1
  description: |-
    Description

    -----------

    Uninstall the managed service account SQL-SRV1 from the local machine.
  summary: ""
- title: '-------------------------- EXAMPLE 2 --------------------------'
  code: |-
    C:\PS>Uninstall-ADServiceAccount sql-hr-01 -ForceRemoveLocal
  description: |-
    Description

    -----------

    Uninstall a standalone Managed Service Account from a server located in a RODC-only site with no access to writable DCs such as a perimeter network.
  summary: ""
parameters:
- type: <xref href="ADAuthType" data-throw-if-not-resolved="False" />
  name: AuthType
  description: |+
    Specifies the authentication method to use.
    Possible values for this parameter include:

    Negotiate or 0

    Basic or 1

    The default authentication method is Negotiate.

    A Secure Sockets Layer (SSL) connection is required for the Basic authentication method.

    The following example shows how to set this parameter to Basic.

    -AuthType Basic

  defaultValue: Microsoft.ActiveDirectory.Management.AuthType.Negotiate
  position: Named
  aliases: ""
  parameterValueGroup: Negotiate, Basic
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: ForceRemoveLocal
  description: |+
    The ForceRemoveLocal switch parameter will allow you to remove the account from the local LSA without failing the command if an access to a writable DC is not possible.
    This is required if you are uninstalling the MSA from a server that is placed in a segmented network (i.e.
    perimeter network) with access only to an RODC.
    If you pass this parameter and the server has access to a writable DC the account will be un-linked from the computer account in the directory as well.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ADServiceAccount" data-throw-if-not-resolved="False" />
  name: Identity
  isRequired: true
  description: |+
    Specifies an Active Directory account object by providing one of the following property values.
    The identifier in parentheses is the LDAP display name for the attribute.

    Distinguished Name

    Example:  CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com

    GUID (objectGUID)

    Example: 599c3d2e-f72d-4d20-8a88-030d99495f20

    Security Identifier (objectSid)

    Example: S-1-5-21-3165297888-301567370-576410423-1103

    SAM Account Name (sAMAccountName)

    Example: WebAccount$

    The cmdlet searches the default naming context or partition to find the object.
    If two or more objects are found, the cmdlet returns a non-terminating error.

    This parameter can also get this object through the pipeline or you can set this parameter to an object instance.

    This example shows how to set the parameter to a distinguished name.

    -Identity  "CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com"

    This example shows how to set this parameter to an account object instance named "AccountInstance".

    -Identity   $AccountInstance

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: ActiveDirectory.Uninstall-ADServiceAccount
name: Uninstall-ADServiceAccount
description: |-
  The Uninstall-ADServiceAccount cmdlet removes an Active Directory standalone managed service account (MSA) on the computer on which the cmdlet is run.
  For group MSAs, the cmdlet removes the group MSA from the cache, however, if a service is still using the group MSA and the host has permission to retrieve the password a new cache entry will be created.
  The specified MSA must be installed on the computer.

  The Identity parameter specifies the Active Directory MSA to uninstall.
  You can identify a MSA by its distinguished name (DN), GUID, security identifier (SID), or Security Accounts Manager (SAM) account name.
  You can also set the parameter to a MSA object variable, such as $\<localServiceAccountObject\> or pass a MSA object through the pipeline to the Identity parameter.
  For example, you can use the Get-ADServiceAccount to get a MSA object and then pass that object through the pipeline to the Uninstall-ADServiceAccount cmdlet.

  For standalone MSA, the ForceRemoveLocal switch parameter will allow you to remove the account from the local LSA without failing the command if an access to a writable DC is not possible.
  This is required if you are uninstalling the standalone MSA from a server that is placed in a segmented network (i.e.
  perimeter network) with access only to an RODC.
  If you pass this parameter and the server has access to a writable DC the standalone MSA will be un-linked from the computer account in the directory as well.
metadata:
  external help file: Microsoft.ActiveDirectory.Management.dll-Help.xml
  Module Name: ActiveDirectory
  online version: https://docs.microsoft.com/powershell/module/activedirectory/uninstall-adserviceaccount?view=windowsserver2012-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
