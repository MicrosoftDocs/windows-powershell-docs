### YamlMime:PowershellCmdlet
summary: |-
  Reserves the specified IPv4 address in the scope for a client.
module: DhcpServer
notes: ""
inputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root/Microsoft/Windows/DHCP/DhcpServerv4Lease" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root/Microsoft/Windows/DHCP/DhcpServerv4Reservation" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root/Microsoft/Windows/DHCP/DhcpServerv4Scope" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root/Microsoft/Windows/DHCP/DhcpServerv4Reservation" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
links:
- text: Import-Csv
  href: https://go.microsoft.com/fwlink/p/?LinkId=113341
- text: Get-DhcpServerv4FreeIPAddress
  href: ./Get-DhcpServerv4FreeIPAddress.yml
- text: Get-DhcpServerv4Lease
  href: ./Get-DhcpServerv4Lease.yml
- text: Get-DhcpServerv4Reservation
  href: ./Get-DhcpServerv4Reservation.yml
- text: Remove-DhcpServerv4Reservation
  href: ./Remove-DhcpServerv4Reservation.yml
- text: Set-DhcpServerv4Reservation
  href: ./Set-DhcpServerv4Reservation.yml
syntaxes:
- >-
  Add-DhcpServerv4Reservation [-ScopeId] <IPAddress> [-IPAddress] <IPAddress> [-ClientId] <String> [-AsJob]

   [-CimSession <CimSession[]>] [-ComputerName <String>] [-Description <String>] [-Name <String>] [-PassThru]

   [-ThrottleLimit <Int32>] [-Type <String>] [-Confirm] [-WhatIf]
examples:
- title: EXAMPLE 1
  code: |-
    PS C:\>Add-DhcpServerv4Reservation -ScopeId 10.10.10.0 -IPAddress 10.10.10.8 -ClientId F0-DE-F1-7A-00-5E -Description "Reservation for Printer"
  description: |-
    This example adds a reserved IP address for the client identified by the specified client ID.
  summary: ""
- title: EXAMPLE 2
  code: |-
    PS C:\>Import-Csv -Path Reservations.csv | Add-DhcpServerv4Reservation -ComputerName dhcpserver.contoso.com
  description: |-
    This example adds all of the reservations in the file named Reservations.csv to the DHCP server service running on the computer named dhcpserver.contoso.com.
    The Import-Csvhttp://go.microsoft.com/fwlink/p/?LinkId=113341 cmdlet returns the objects with reservation fields and pipes the objects to this cmdlet, which adds these reservations to the DHCP server services.
    The file named Reservations.csv should contain the reservations in the following comma-separated values (CSV) format: 

    ScopeId,IPAddress,Name,ClientId,Description 

    10.10.10.0,10.10.10.10,Computer1,1a-1b-1c-1d-1e-1f,Reserved for Computer1 

    20.20.20.0,20.20.20.11,Computer2,2a-2b-2c-2d-2e-2f,Reserved for Computer2 

    30.30.30.0,30.30.30.12,Computer3,3a-3b-3c-3d-3e-3f,Reserved for Computer3
  summary: ""
- title: EXAMPLE 3
  code: |-
    PS C:\>Get-DhcpServerv4Lease -ComputerName dhcpserver.contoso.com -IPAddress 10.10.10.11 | Add-DhcpServerv4Reservation -ComputerName dhcpserver.contoso.com
  description: |-
    This example converts one of the leases into a reservation.
    The Get-DhcpServerv4Lease cmdlet returns the IP address lease object and pipes the object to this cmdlet, which creates the reservation with the IP address and client ID in the lease object.
  summary: ""
- title: EXAMPLE 4
  code: |-
    PS C:\>$freeip = Get-DhcpServerv4FreeIPAddress -ComputerName dhcpserver.contoso.com -ScopeId 10.10.10.0



    PS C:\>Add-DhcpServerv4Reservation -ComputerName dhcpserver.contoso.com -ScopeId 10.10.10.0 -IPAddress $freeip -ClientId F0-DE-F1-7A-00-5E -Description "Reservation for Printer"
  description: |-
    This example creates a reservation for the client identified by the specified client ID from any of the free IP addresses in the scope 10.10.10.0.
    The Get-DhcpServerv4FreeIPAddress cmdlet fetches a free IP address in the scope, then this cmdlet reserves an address for the specified client ID.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    ps_cimcommon_asjob

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a New-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227967 or Get-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227966 cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ClientId
  isRequired: true
  description: |+
    Specifies the unique identifier (ID) for the client.
    For Windows clients, the MAC address is used as the client ID.

  defaultValue: None
  pipelineInput: true
  position: "3"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ComputerName
  description: |+
    Specifies the DNS name, or IPv4 or IPv6 address, of the target computer running the Dynamic Host Configuration Protocol (DHCP) server service.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Description
  description: |+
    Specifies the description for the reservation being created.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IPAddress" data-throw-if-not-resolved="False" />
  name: IPAddress
  isRequired: true
  description: |+
    Specifies the IPv4 address to be reserved for the client.

  defaultValue: None
  pipelineInput: true
  position: "2"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Name
  description: |+
    Specifies the name of the reservation being created.
    This parameter value can be the host name of the client or a name to be used to identify the reservation on the DHCP server service.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns an object representing the item with which you are working.
    By default, this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IPAddress" data-throw-if-not-resolved="False" />
  name: ScopeId
  isRequired: true
  description: |+
    Specifies the identifier (ID) of the scope in which the reservation is being created.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShellÂ® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Type
  description: |+
    Specifies the type of client request for which this IP address is reserved.
    The acceptable values for this parameter are: DHCP, BootP, or Both.
    The default value is Both.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: DhcpServer.Add-DhcpServerv4Reservation
name: Add-DhcpServerv4Reservation
description: |-
  The **Add-DhcpServerv4Reservation** cmdlet reserves the specified IPv4 address in the scope for a client.
  Once reserved, the IP address will be leased only to the client identified by the specific client identifier (ID).
metadata:
  external help file: DhcpServer_Cmdlets.xml
  Module Name: DhcpServer
  online version: https://docs.microsoft.com/powershell/module/dhcpserver/add-dhcpserverv4reservation?view=windowsserver2012-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
