### YamlMime:PowershellCmdlet
summary: |-
  Waits for a period of time or until classification is finished running.
module: FileServerResourceManager
notes: ""
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#MSFT_FSRMClassification" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-FsrmClassification
  href: ./Get-FsrmClassification.yml
- text: Set-FsrmClassification
  href: ./Set-FsrmClassification.yml
- text: Start-FsrmClassification
  href: ./Start-FsrmClassification.yml
- text: Stop-FsrmClassification
  href: ./Stop-FsrmClassification.yml
syntaxes:
- >-
  Wait-FsrmClassification [-AsJob] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-Timeout <Int32>]

   [-Confirm] [-WhatIf]
examples:
- title: 'Example 1: Wait for a classification'
  code: |-
    PS C:\>Start-FsrmClassification PS C:\>Wait-FsrmClassification
  description: |-
    The first command starts the classification.

    The second command waits for the classification to finish running.
  summary: ""
- title: 'Example 2: Wait for and stop the classification'
  code: |-
    The first command starts the classification process.
    PS C:\>Start-FsrmClassification

    The second command waits for the classification to finish running. If the classification is not completed in 10 minutes, the server ends the classification process and the cmdlet returns.
    PS C:\>Wait-FsrmClassification -Timeout 600

    The third command ensures that the classification has stopped running.
    PS C:\>Stop-FsrmClassification
  description: |-
    This example waits for the classification to finish running and then stops the classification.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    ps_cimcommon_asjob

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a New-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227967 or Get-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227966 cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShellÂ® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: Timeout
  description: |+
    Specifies the number of seconds to wait for classification and the reports to complete.
    The cmdlet returns when the period expires or classification completes.
    To wait indefinitely, set the value to -1.
    The value must be in the range from -1 through 2,147,483.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: FileServerResourceManager.Wait-FsrmClassification
name: Wait-FsrmClassification
description: |-
  The **Wait-FsrmClassification** cmdlet waits for a period of time or until classification is finished running.
  The cmdlet returns when the server finishes running the classification process or when the time that you specify in the **Timeout** parameter has elapsed.
metadata:
  external help file: FSRM_Cmdlets.xml
  Module Name: FileServerResourceManager
  online version: https://docs.microsoft.com/powershell/module/fileserverresourcemanager/wait-fsrmclassification?view=windowsserver2012-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
