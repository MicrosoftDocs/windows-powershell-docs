### YamlMime:PowershellCmdlet
summary: |-
  Configures a virtual switch.
module: Hyper-V
notes: ""
outputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: |-
    Default
- name: <xref href="Microsoft.Virtualization.Powershell.EthernetSwitch" data-throw-if-not-resolved="False" />
  description: |-
    If **-PassThru** is specified.
syntaxes:
- >-
  Set-VMSwitch [-Name] <String[]> [-AllowManagementOS <Boolean>] [-ComputerName <String[]>]

   [-DefaultFlowMinimumBandwidthAbsolute <Int64>] [-DefaultFlowMinimumBandwidthWeight <Int64>]

   [-Extensions <VMSwitchExtension[]>] [-Notes <String>] [-Passthru] [-SwitchType <VMSwitchType>] [-Confirm]

   [-WhatIf]
- >-
  Set-VMSwitch [-Name] <String[]> [-NetAdapterInterfaceDescription] <String> [-AllowManagementOS <Boolean>]

   [-ComputerName <String[]>] [-DefaultFlowMinimumBandwidthAbsolute <Int64>]

   [-DefaultFlowMinimumBandwidthWeight <Int64>] [-Extensions <VMSwitchExtension[]>] [-Notes <String>] [-Passthru]

   [-Confirm] [-WhatIf]
- >-
  Set-VMSwitch [-VMSwitch] <VMSwitch[]> [-NetAdapterInterfaceDescription] <String> [-AllowManagementOS <Boolean>]

   [-ComputerName <String[]>] [-DefaultFlowMinimumBandwidthAbsolute <Int64>]

   [-DefaultFlowMinimumBandwidthWeight <Int64>] [-Extensions <VMSwitchExtension[]>] [-Notes <String>] [-Passthru]

   [-Confirm] [-WhatIf]
- >-
  Set-VMSwitch [-VMSwitch] <VMSwitch[]> [-AllowManagementOS <Boolean>] [-ComputerName <String[]>]

   [-DefaultFlowMinimumBandwidthAbsolute <Int64>] [-DefaultFlowMinimumBandwidthWeight <Int64>]

   [-Extensions <VMSwitchExtension[]>] [-Notes <String>] [-Passthru] [-SwitchType <VMSwitchType>] [-Confirm]

   [-WhatIf]
- >-
  Set-VMSwitch [-Name] <String[]> [-NetAdapterName] <String> [-AllowManagementOS <Boolean>]

   [-ComputerName <String[]>] [-DefaultFlowMinimumBandwidthAbsolute <Int64>]

   [-DefaultFlowMinimumBandwidthWeight <Int64>] [-Extensions <VMSwitchExtension[]>] [-Notes <String>] [-Passthru]

   [-Confirm] [-WhatIf]
- >-
  Set-VMSwitch [-VMSwitch] <VMSwitch[]> [-NetAdapterName] <String> [-AllowManagementOS <Boolean>]

   [-ComputerName <String[]>] [-DefaultFlowMinimumBandwidthAbsolute <Int64>]

   [-DefaultFlowMinimumBandwidthWeight <Int64>] [-Extensions <VMSwitchExtension[]>] [-Notes <String>] [-Passthru]

   [-Confirm] [-WhatIf]
examples:
- title: Example 1
  code: |-
    PS C:\> Set-VMSwitch WA -SwitchType Internal
  description: |-
    This example converts a virtual switch named WA to an Internal switch.
  summary: ""
- title: Example 2
  code: |-
    PS C:\> Set-VMSwitch CA -DefaultFlowMinimumBandwidthAbsolute 500000000
  description: |-
    This example sets the minimum bandwidth allocation to 500Mbps on a virtual switch named CA for all virtual machines without explicit minimum bandwidth configuration.
  summary: ""
parameters:
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: AllowManagementOS
  description: |+
    Specifies whether the management operating system can use the physical network adapter that is bound to the external virtual switch.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: ComputerName
  description: |+
    Specifies one or more Hyper-V hosts on which the virtual switch is to be configured.
    NetBIOS names, IP addresses, and fully-qualified domain names are allowable.
    The default is the local computer - use "localhost" or a dot (".") to specify the local computer explicitly.

  defaultValue: .
  pipelineInput: true
  position: Named
  aliases: PSComputerName
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int64" data-throw-if-not-resolved="False" />
  name: DefaultFlowMinimumBandwidthAbsolute
  description: |+
    Specifies the minimum bandwidth, in bits per second, that is allocated to a special category called "default flow." Any traffic sent by a virtual network adapter that is connected to this virtual switch and does not have minimum bandwidth allocated is filtered into this category.
    Specify a value for this parameter only if the minimum bandwidth mode on this virtual switch is absolute (See the New-VMSwitch cmdlet).
    By default, the virtual switch allocates 10% of the total bandwidth, which depends on the physical network adapter it binds to, to this category.
    For example, if a virtual switch binds to a 1 GbE network adapter, this special category can use at least 100 Mbps.
    If the value is not a multiple of 8, the value is rounded down to the nearest number that is a multiple of 8.
    For example, a value input as 1234567 is converted to 1234560.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int64" data-throw-if-not-resolved="False" />
  name: DefaultFlowMinimumBandwidthWeight
  description: |+
    Specifies the minimum bandwidth, in relative weight, that is allocated to a special category called "default flow".
    Any traffic sent by a virtual network adapter that is connected to this virtual switch and doesn't have minimum bandwidth allocated is filtered into this category.
    Specify a value for this parameter only if the minimum bandwidth mode on this virtual switch is weight (See the New-VMSwitch cmdlet).
    By default, this special category has a weight of 1.

  defaultValue: "10"
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="VMSwitchExtension" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Extensions
  description: |+
    Specifies an ordered list of network extensions used to reorder the bindings on the virtual switch.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Name
  isRequired: true
  description: |+
    Specifies the name of the virtual switch to be configured.

  defaultValue: None
  position: "1"
  aliases: SwitchName
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: NetAdapterInterfaceDescription
  isRequired: true
  description: |+
    Specifies the interface description of the physical network adapter to which an external virtual switch should be bound.
    If you specify this parameter to convert a virtual switch, the external virtual switch is configured to allow the management operating system to share access to the physical network adapter.
    To override this behavior, include AllowManagementOs $false in the command

  defaultValue: None
  position: "2"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: NetAdapterName
  isRequired: true
  description: |+
    Specifies the name of the physical network adapter to which an external virtual switch should be bound.
    If you specify this parameter to convert a virtual switch, the external virtual switch is configured to allow the management operating system to share access to the physical network adapter.
    To override this behavior, include AllowManagementOs $false in the command

  defaultValue: None
  pipelineInput: true
  position: "2"
  aliases: InterfaceAlias
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Notes
  description: |+
    Specifies notes to be associated with the virtual switch.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Passthru
  description: |+
    Specifies that a **Microsoft.Virtualization.Powershell.EthernetSwitch** object is to be passed through to the pipeline representing the virtual switch to be configured.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="VMSwitchType" data-throw-if-not-resolved="False" />
  name: SwitchType
  description: |+
    Converts a virtual switch from one type to another.
    Allowed values are **Internal** or **Private**.
    You can convert an internal or private virtual switch to an external virtual switch, by including either the **NetAdapterInterfaceDescription** or **NetAdapterName** parameter in the command.
    If you do this, the external virtual switch is configured to allow the management operating system to share access to the physical network adapter.
    To override this behavior, include AllowManagementOs $false in the command.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="VMSwitch" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: VMSwitch
  isRequired: true
  description: |+
    Specifies the virtual switch to be configured.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: Hyper-V.Set-VMSwitch
name: Set-VMSwitch
description: |-
  The **Set-VMSwitch** cmdlet configures a virtual switch.
metadata:
  external help file: Hyper-V_Cmdlets.xml
  Module Name: Hyper-V
  online version: https://docs.microsoft.com/powershell/module/hyper-v/set-vmswitch?view=windowsserver2012-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
