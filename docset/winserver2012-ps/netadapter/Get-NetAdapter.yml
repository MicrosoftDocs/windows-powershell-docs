### YamlMime:PowershellCmdlet
summary: |-
  Gets the basic network adapter properties.
module: NetAdapter
notes: ""
inputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/NetAdapter" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.

    [CIM_NetworkAdapter class](https://docs.microsoft.com/windows/win32/cimwin32prov/cim-networkadapter)
links:
- text: Format-List
  href: https://go.microsoft.com/fwlink/p/?LinkID=113302
- text: Format-Table
  href: https://go.microsoft.com/fwlink/p/?LinkID=113303
- text: Disable-NetAdapter
  href: ./Disable-NetAdapter.yml
- text: Enable-NetAdapter
  href: ./Enable-NetAdapter.yml
- text: Rename-NetAdapter
  href: ./Rename-NetAdapter.yml
- text: Restart-NetAdapter
  href: ./Restart-NetAdapter.yml
- text: Set-NetAdapter
  href: ./Set-NetAdapter.yml
syntaxes:
- >-
  Get-NetAdapter [[-Name] <String[]>] [-AsJob] [-CimSession <CimSession[]>] [-IncludeHidden] [-Physical]

   [-ThrottleLimit <Int32>]
- >-
  Get-NetAdapter [-AsJob] [-CimSession <CimSession[]>] [-IncludeHidden] [-Physical] [-ThrottleLimit <Int32>]

   -InterfaceDescription <String[]>
- >-
  Get-NetAdapter [-AsJob] [-CimSession <CimSession[]>] [-IncludeHidden] [-Physical] [-ThrottleLimit <Int32>]

   -InterfaceIndex <UInt32[]>
examples:
- title: 'Example 1: Get all visible network adapters'
  code: |-
    PS C:\> Get-NetAdapter -Name *
  description: |-
    This command gets all of the visible network adapters.
  summary: ""
- title: 'Example 2: Get all visible and hidden network adapters'
  code: |-
    PS C:\> Get-NetAdapter -Name * -IncludeHidden
  description: |-
    This command gets all of the network adapters.
  summary: ""
- title: 'Example 3: Get all physical network adapters'
  code: |-
    PS C:\> Get-NetAdapter -Name * -Physical
  description: |-
    This command gets all of the physical network adapters.
  summary: ""
- title: 'Example 4: Get a network adapter by the specified name'
  code: |-
    PS C:\> Get-NetAdapter -Name "Ethernet 2"
  description: |-
    This command gets the network adapter named Ethernet 2.
  summary: ""
- title: 'Example 5: Get a network adapter by the specified name'
  code: |-
    PS C:\> Get-NetAdapter -Name "E*2"
  description: |-
    This command gets adapters starting with "E" and ending in "2" using wildcard characters.
  summary: ""
- title: 'Example 6: Display the common properties for the specified network adapter'
  code: |-
    PS C:\> Get-NetAdapter -Name "Ethernet 3" | Format-List -Property *
  description: |-
    This command displays the common properties for the network adapter named Ethernet 3 and formats the list using the **Format-List** cmdlet.
  summary: ""
- title: 'Example 7: Display all properties for the specified network adapter'
  code: |-
    PS C:\> Get-NetAdapter -Name "Ethernet 6" | Format-List -Property *
  description: |-
    This command displays all of the properties for the network adapter named Ethernet 6.
  summary: ""
- title: 'Example 8: Get all network adapters using the interface description that matches a prefix pattern'
  code: |-
    PS C:\> Get-NetAdapter -Name * -InterfaceDescription "VendorAdapter*"
  description: |-
    This command gets all of the network adapters using the interface description that matches the prefix pattern VendorAdapter.
  summary: ""
- title: 'Example 9: Display parameter values for all network adapters'
  code: |-
    PS C:\> Get-NetAdapter -Name "*" -IncludeHidden | Format-List -Property "Name", "InterfaceDescription", "InterfaceName"
  description: |-
    This command displays the *Name*, *InterfaceDescription*, and *InterfaceName* parameter values for all network adapters.
  summary: ""
- title: 'Example 10: Get the visible network adapters on the specified server'
  code: |-
    PS C:\> Get-NetAdapter -Name * -CimSession "Server5"
  description: |-
    This command gets the visible network adapters on the server named Server5.
    The server named Server5 can be a remote computer.
  summary: ""
- title: 'Example 11: Get the visible network adapters and format the output'
  code: |-
    PS C:\> Get-NetAdapter -Name * | Format-Table -View Driver
  description: |-
    This command gets the visible network adapters and formats the output to present driver information.
  summary: ""
- title: 'Example 12: Gets visible network adapters and format the output'
  code: |-
    PS C:\> Get-NetAdapter -Name * | Format-Table -View Name
  description: |-
    This command gets the visible network adapters and formats the output to present various names by which a network adapter can be identified such as the *Name*, *InterfaceDescription*, and *InterfaceName* parameter values.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    Runs the cmdlet as a background job.
    Use this parameter to run commands that take a long time to complete. 
     The cmdlet immediately returns an object that represents the job and then displays the command prompt.
    You can continue to work in the session while the job completes.
    To manage the job, use the `*-Job` cmdlets.
    To get the job results, use the [Receive-Job](https://go.microsoft.com/fwlink/?LinkID=113372) cmdlet. 
     For more information about Windows PowerShell® background jobs, see [about_Jobs](https://go.microsoft.com/fwlink/?LinkID=113251).

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a [New-CimSession](https://docs.microsoft.com/powershell/module/cimcmdlets/new-cimsession) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966) cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: IncludeHidden
  description: |+
    Specifies both visible and hidden network adapters should be included.
    By default only visible network adapters are included.
    If a wildcard character is used in identifying a network adapter and this parameter has been specified, then the wildcard string is matched against both hidden and visible network adapters.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InterfaceDescription
  isRequired: true
  description: |+
    Specifies the network adapter interface description.
    For a physical network adapter this is typically the name of the vendor of the network adapter followed by a part number and description, such as `Contoso 12345 Gigabit Network Device`.

  defaultValue: None
  acceptWildcardCharacters: true
  pipelineInput: true
  position: Named
  aliases: ifDesc
  parameterValueGroup: ""
- type: <xref href="UInt32" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InterfaceIndex
  isRequired: true
  description: |+
    Specifies the network adapter interface index number.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Name
  description: |+
    Specifies the name of the network adapter.

  defaultValue: None
  acceptWildcardCharacters: true
  position: "1"
  aliases: ifAlias, InterfaceAlias
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Physical
  description: |+
    Returns all physical network adapters.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: NetAdapter.Get-NetAdapter
name: Get-NetAdapter
description: |-
  The **Get-NetAdapter** cmdlet gets the basic network adapter properties.
  By default only visible adapters are returned.
  To see the common network adapter properties, pipe the output into the **Format-List** cmdlet.
  To see all the properties, pipe the output to the **Format-List** cmdlet with the *Property* parameter specified as the wildcard character "*".
  This cmdlet supports multiple views.
  The default view is as a table.
  To see more information regarding various network adapter identifiers use the **names** view using the **Format-Table** cmdlet with the *View* parameter specified as **name**.
  To see more information regarding the miniport, device driver, such as driver date or version use the **driver** view using the **Format-Table** cmdlet with the *View* parameter specified as **driver**.
metadata:
  external help file: NetAdapter_Cmdlets.xml
  Module Name: NetAdapter
  online version: https://docs.microsoft.com/powershell/module/netadapter/get-netadapter?view=windowsserver2012-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
