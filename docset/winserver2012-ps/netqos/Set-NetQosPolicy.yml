### YamlMime:PowershellCmdlet
summary: |-
  Updates the Quality of Service (QoS) policy settings.
module: NetQoS
notes: ""
inputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/MSFT_NetQosPolicySettingData" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.

    The MSFT_NetQosPolicySettingData object contains a QoS policy.
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/MSFT_NetQosPolicySettingData" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.

    The MSFT_NetQosPolicySettingData object contains a QoS policy.
    Only when the **PassThru** parameter is specified will this cmdlet return the MSFT_NetQosPolicySettingData object.
links:
- text: Get-NetQosPolicy
  href: ./Get-NetQosPolicy.yml
- text: New-NetQosPolicy
  href: ./New-NetQosPolicy.yml
- text: Remove-NetQosPolicy
  href: ./Remove-NetQosPolicy.yml
syntaxes:
- >-
  Set-NetQosPolicy [[-Name] <String[]>] [-AppPathNameMatchCondition <String>] [-AsJob]

   [-CimSession <CimSession[]>] [-DSCPAction <SByte>] [-IPDstPortEndMatchCondition <UInt16>]

   [-IPDstPortMatchCondition <UInt16>] [-IPDstPortStartMatchCondition <UInt16>]

   [-IPDstPrefixMatchCondition <String>] [-IPPortMatchCondition <UInt16>] [-IPProtocolMatchCondition <Protocol>]

   [-IPSrcPortEndMatchCondition <UInt16>] [-IPSrcPortMatchCondition <UInt16>]

   [-IPSrcPortStartMatchCondition <UInt16>] [-IPSrcPrefixMatchCondition <String>]

   [-MinBandwidthWeightAction <Byte>] [-NetDirectPortMatchCondition <UInt16>] [-NetworkProfile <NetworkProfile>]

   [-PassThru] [-PolicyStore <String>] [-Precedence <UInt32>] [-PriorityValue8021Action <SByte>]

   [-TemplateMatchCondition <Template>] [-ThrottleLimit <Int32>] [-ThrottleRateActionBytesPerSecond <UInt64>]

   [-URIMatchCondition <String>] [-URIRecursiveMatchCondition <Boolean>] [-UserMatchCondition <String>]

   [-Confirm] [-WhatIf]
- >-
  Set-NetQosPolicy [-AppPathNameMatchCondition <String>] [-AsJob] [-CimSession <CimSession[]>]

   [-DSCPAction <SByte>] [-IPDstPortEndMatchCondition <UInt16>] [-IPDstPortMatchCondition <UInt16>]

   [-IPDstPortStartMatchCondition <UInt16>] [-IPDstPrefixMatchCondition <String>]

   [-IPPortMatchCondition <UInt16>] [-IPProtocolMatchCondition <Protocol>] [-IPSrcPortEndMatchCondition <UInt16>]

   [-IPSrcPortMatchCondition <UInt16>] [-IPSrcPortStartMatchCondition <UInt16>]

   [-IPSrcPrefixMatchCondition <String>] [-MinBandwidthWeightAction <Byte>]

   [-NetDirectPortMatchCondition <UInt16>] [-NetworkProfile <NetworkProfile>] [-PassThru] [-Precedence <UInt32>]

   [-PriorityValue8021Action <SByte>] [-TemplateMatchCondition <Template>] [-ThrottleLimit <Int32>]

   [-ThrottleRateActionBytesPerSecond <UInt64>] [-URIMatchCondition <String>]

   [-URIRecursiveMatchCondition <Boolean>] [-UserMatchCondition <String>] -InputObject <CimInstance[]> [-Confirm]

   [-WhatIf]
examples:
- title: EXAMPLE 1
  code: |-
    PS C:\> Set-NetQosPolicy -Name "SMB Policy" -NetworkProfile Domain
  description: |-
    This example updates the QoS policy named SMB Policy so that it only applies to traffic that is outgoing from a domain-joined network adapter.
  summary: ""
- title: EXAMPLE 2
  code: |-
    PS C:\> Get-NetQosPolicy -Name "wildcard" | Set-NetQosPolicy -Precedence 250
  description: |-
    This example gets the QoS policy named wildcard and updates the precedence of the policy to 250.
  summary: ""
- title: EXAMPLE 3
  code: |-
    PS C:\> Set-NetQosPolicy -Name "Backup" -IPDstPortStart 3501 -IPDstPortEnd 3510
  description: |-
    This example updates the QoS policy named Backup with additional matching conditions.
  summary: ""
- title: EXAMPLE 4
  code: |-
    PS C:\> Set-NetQosPolicy -Name "IIS" -Recursive $true -ThrottleRateActionBytesPerSecond 3000KB
  description: |-
    This example updates the QoS policy named IIS, so that it applies to the return traffic for both the specified URI and subdirectories and files under the URI.
    This cmdlet also sets a new throttling rate at 3,000,000 bytes per second.
    Note: An alias for the **ThrottleRateActionBytesPerSecond** parameter is `ThrottleRateAction`.
    Another alias is `MaxBw`.
  summary: ""
parameters:
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: AppPathNameMatchCondition
  description: |+
    Specifies the name by which an application is run in Windows ServerÂ® 2012, such as `application.exe` or `%ProgramFiles%\application.exeapplication`.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: App, ApplicationName, AppPathName
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    ps_cimcommon_asjob

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a New-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227967 or Get-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227966 cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SByte" data-throw-if-not-resolved="False" />
  name: DSCPAction
  description: |+
    Specifies the differentiated services code point (DSCP) value.
    A valid DSCP value is in the range between `0` and `63`.
    In addition, users can enter `-1` to remove the DSCP setting from the policy.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: DSCP, DSCPValue
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InputObject
  isRequired: true
  description: |+
    Specified the object which will be modified by this cmdlet.
    The object must be piped to the cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="UInt16" data-throw-if-not-resolved="False" />
  name: IPDstPortEndMatchCondition
  description: |+
    Specifies the last port in a range of destination ports to be used to match the network traffic.
    This parameter must be used in conjunction with the **IPDstPortStartMatchCondition** parameter.
    The value of this parameter also must be larger than the value of the **IPDstPortStartMatchCondition** parameter.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: IPDstPortEnd
  parameterValueGroup: ""
- type: <xref href="UInt16" data-throw-if-not-resolved="False" />
  name: IPDstPortMatchCondition
  description: |+
    Specifies the exact destination port to be used to match the network traffic.
    The filter of a QoS policy can be based on either a single port or a range of ports.
    To specify a single destination port, use this parameter.
    To specify a range of destination ports, use both the **IPDstPortStartMatchCondition** and the **IPDstPortEndMatchCondition** parameters.

  defaultValue: None
  position: Named
  aliases: DestinationPort, Destport, Dp, Dstport, IPDstPort
  parameterValueGroup: ""
- type: <xref href="UInt16" data-throw-if-not-resolved="False" />
  name: IPDstPortStartMatchCondition
  description: |+
    Specifies the first port in a range of destination ports to be used to match the network traffic.
    This parameter must be used in conjunction with the **IPDstPortEndMatchCondition** parameter.
    The value of this parameter also must be smaller than the value of the **IPDstPortEndMatchCondition** parameter.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: IPDstPortStart
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: IPDstPrefixMatchCondition
  description: |+
    Specifies the destination IP address, optionally with a network prefix, such as `1.2.3.4`, `3ffe:ffff::1`, `192.168.1.0/24`, or `fe80::1234/48`.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: Da, Dest, Destaddr, DestinationAddress, Destip, Dst, Dstaddr, Dstip, IPDstPrefix
  parameterValueGroup: ""
- type: <xref href="UInt16" data-throw-if-not-resolved="False" />
  name: IPPortMatchCondition
  description: |+
    Specifies the port to be used to match the network traffic, it can be either source port or destination port.
    If either the source port or the destination port in a packet matches the value of this parameter, then the QoS policy will apply to the packet.
    Usually this is a well-known port that a client uses to communicate with a server.
    With this parameter specified, the same QoS policy can be configured on both the clients and the servers and apply to the traffic in both directions.
    For example, specifying this parameter value to `80` matches HTTP traffic sent by both HTTP clients and HTTP servers.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: IPPort, Port
  parameterValueGroup: ""
- type: <xref href="Protocol" data-throw-if-not-resolved="False" />
  name: IPProtocolMatchCondition
  description: |+
    Specifies the IP protocol to be used to match the network traffic.
    The acceptable values for this parameter are: TCP, UDP, or Both.
    If this parameter is unspecified, then Both is the default value.
    The QoS policy will apply to both TCP and UDP traffic.

  defaultValue: Both
  pipelineInput: true
  position: Named
  aliases: IPProtocol, Protocol
  parameterValueGroup: ""
- type: <xref href="UInt16" data-throw-if-not-resolved="False" />
  name: IPSrcPortEndMatchCondition
  description: |+
    Specifies the last port in a range of source ports to be used to match the network traffic.
    This parameter must be used in conjunction with the **IPSrcPortStartMatchCondition** parameter.
    The value of this parameter also must be larger than the value of the **IPSrcPortStartMatchCondition** parameter.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: IPSrcPortEnd
  parameterValueGroup: ""
- type: <xref href="UInt16" data-throw-if-not-resolved="False" />
  name: IPSrcPortMatchCondition
  description: |+
    Specifies the exact source port to be used to match the network traffic.
    The filter of a QoS policy can be based on either a single port or a range of ports.
    To specify a single source port, use this parameter.
    To specify a range of source ports, use both the **IPSrcPortStartMatchCondition** and the **IPSrcPortEndMatchCondition** parameters.

  defaultValue: None
  position: Named
  aliases: IPSrcPort, SourcePort, Sp, Srcport
  parameterValueGroup: ""
- type: <xref href="UInt16" data-throw-if-not-resolved="False" />
  name: IPSrcPortStartMatchCondition
  description: |+
    Specifies the first port in a range of source ports to be used to match the network traffic.
    This parameter must be used in conjunction with the **IPSrcPortEndMatchCondition** parameter.
    The value of this parameter also must be smaller than the value of the **IPSrcPortEndMatchCondition** parameter.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: IPSrcPortStart
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: IPSrcPrefixMatchCondition
  description: |+
    Specifies the source IP address, optionally with a network prefix, such as `1.2.3.4`, `3ffe:ffff::1`, `192.168.1.0/24`, or `fe80::1234/48`.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: IPSrcPrefix, Sa, SourceAddress, Src, Srcaddr, Srcip
  parameterValueGroup: ""
- type: <xref href="Byte" data-throw-if-not-resolved="False" />
  name: MinBandwidthWeightAction
  description: |+
    Specifies a numerical value for minimum bandwidth that a flow should get relatively.
    The actual bandwidth a flow gets will depend on the weights assigned to other flows in the computer.
    The acceptable values for this parameter are: 1 through 100.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: MinBandwidthWeight, Minbww, Weight
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Name
  description: |+
    Specifies the QoS policy name.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="UInt16" data-throw-if-not-resolved="False" />
  name: NetDirectPortMatchCondition
  description: |+
    Specifies the network direct port to be used to match the network traffic.
    Network Direct uses an independent port space from the TCP or UDP port space.
    Windows Server 2012 will send a Network Direct policy to a network adapter only if the network adapter supports Network Direct.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: Ndport, NetDirectPort, Networkdirectport
  parameterValueGroup: ""
- type: <xref href="NetworkProfile" data-throw-if-not-resolved="False" />
  name: NetworkProfile
  description: |+
    Specifies the profile, or connection type, of a network.
    The acceptable values for this parameter are: Domain, Public, Private, or All.
    If this parameter is not specified, then the QoS policy will be effective when a computer is connected on any type of connection.

  defaultValue: All
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns an object representing the item with which you are working.
    By default, this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: PolicyStore
  description: |+
    Specifies the location of the policy that is stored.
    The acceptable values for this parameter are:

     - ActiveStore 

     - COMPUTERNAME

     - GPO:COMPUTERNAME

     - GPO:DOMAIN\GPONAME

     - LDAP://LDAP-URL

  defaultValue: Localhost
  position: Named
  aliases: Store
  parameterValueGroup: ""
- type: <xref href="UInt32" data-throw-if-not-resolved="False" />
  name: Precedence
  description: |+
    Specifies the priority of a QoS policy.
    A higher priority policy will override a lower priority policy in case the priorities are conflicting.
    The acceptable values for this parameter are: 0 through 255.
    255 specifies the highest priority and 0 specifies the lowest.
    If not specified, then the default value is 127.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SByte" data-throw-if-not-resolved="False" />
  name: PriorityValue8021Action
  description: |+
    Specifies the IEEE 802.1p value.
    A valid 802.1p value is in the range between `0` and `7`.
    In addition, users can enter `-1` to remove the 802.1p priority setting from the policy.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: Dot1p, Pri, PriorityValue, PriorityValue8021
  parameterValueGroup: ""
- type: <xref href="Template" data-throw-if-not-resolved="False" />
  name: TemplateMatchCondition
  description: |+
    Specifies a number of filters built in Windows ServerÂ® 2012.
    The acceptable values for this parameter are: FCoE, iSCSI, LiveMigration, NFS, SMB, or.
    Note: Refer to the corresponding parameter descriptions for the New-NetQosPolicy cmdlet.

  defaultValue: "0"
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShellÂ® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="UInt64" data-throw-if-not-resolved="False" />
  name: ThrottleRateActionBytesPerSecond
  description: |+
    Specifies a throttle rate, in bytes per second.
    This value is also known as maximum bandwidth.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: Maxbw, Throttle, ThrottleRate, ThrottleRateAction
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: URIMatchCondition
  description: |+
    Specifies the URI to match.
    Only a HTTP URL is currently supported, such as `http://myhost`, `https://*/training`, `http://myhost:8080/training`, or `https://myhost:*/training`.
    The QoS policy will only apply to the traffic sent from HTTP server applications to HTTP clients in response to the requests from the client for the specified URI.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: Uri, Url
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: URIRecursiveMatchCondition
  description: |+
    Specifies that all subdirectories and files following the URI specified in the **URIMatchCondition** parameter are to be included.
    This parameter can be specified only if the **URIMatchCondition** parameter is specified.

  defaultValue: $false
  pipelineInput: true
  position: Named
  aliases: Recursive, URIRecursive, Urlrecursive
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: UserMatchCondition
  description: |+
    Specifies the user or group name in Active Directory, such as `contoso\johnj99`.
    This parameter is usually specified with other filtering parameter such as the **AppPathNameMatchCondition** parameter.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: Sid, User
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: NetQoS.Set-NetQosPolicy
name: Set-NetQosPolicy
description: |-
  The **Set-NetQosPolicy** cmdlet modifies an existing Quality of Service (QoS) policy.
  Match conditions or actions or general parameters of the policy such as **NetworkProfile** or **Precedence** can be changed.

  Users cannot change the location of where an existing QoS policy is stored.
  Changing the **PolicyStore** parameter value will fail.

  If a policy was created to be in ActiveStore and a user attempts to make it persistent, such as storing the policy on the local computer, the user has to create a new policy and place it on the local computer (localhost).

  If the **PolicyStore** parameter is not specified, then the cmdlet will search for and update the policy on the local computer (localhost).
metadata:
  external help file: NetQos_Cmdlets.xml
  Module Name: NetQoS
  online version: https://docs.microsoft.com/powershell/module/netqos/set-netqospolicy?view=windowsserver2012-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
