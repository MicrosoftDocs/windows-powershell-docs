### YamlMime:PowershellCmdlet
summary: |-
  Enables a previously disabled firewall rule.
module: NetSecurity
notes: ""
inputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetAddressFilter" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetApplicationFilter" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetFirewallProfile" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetFirewallRule" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetInterfaceFilter" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetInterfaceTypeFilter" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetNetworkLayerSecurityFilter" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetProtocolPortFilter" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetServiceFilter" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetFirewallRule" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
links:
- text: Copy-NetFirewallRule
  href: ./Copy-NetFirewallRule.yml
- text: Disable-NetFirewallRule
  href: ./Disable-NetFirewallRule.yml
- text: Get-NetFirewallAddressFilter
  href: ./Get-NetFirewallAddressFilter.yml
- text: Get-NetFirewallApplicationFilter
  href: ./Get-NetFirewallApplicationFilter.yml
- text: Get-NetFirewallInterfaceFilter
  href: ./Get-NetFirewallInterfaceFilter.yml
- text: Get-NetFirewallInterfaceTypeFilter
  href: ./Get-NetFirewallInterfaceTypeFilter.yml
- text: Get-NetFirewallPortFilter
  href: ./Get-NetFirewallPortFilter.yml
- text: Get-NetFirewallProfile
  href: ./Get-NetFirewallProfile.yml
- text: Get-NetFirewallRule
  href: ./Get-NetFirewallRule.yml
- text: Get-NetFirewallSecurityFilter
  href: ./Get-NetFirewallSecurityFilter.yml
- text: Get-NetFirewallServiceFilter
  href: ./Get-NetFirewallServiceFilter.yml
- text: New-NetFirewallRule
  href: ./New-NetFirewallRule.yml
- text: Open-NetGPO
  href: ./Open-NetGPO.yml
- text: Remove-NetFirewallRule
  href: ./Remove-NetFirewallRule.yml
- text: Rename-NetFirewallRule
  href: ./Rename-NetFirewallRule.yml
- text: Save-NetGPO
  href: ./Save-NetGPO.yml
- text: Set-NetFirewallRule
  href: ./Set-NetFirewallRule.yml
- text: Show-NetFirewallRule
  href: ./Show-NetFirewallRule.yml
- text: New-GPO
  href: ../grouppolicy/New-GPO.yml
syntaxes:
- >-
  Enable-NetFirewallRule [-Action <Action[]>] [-AsJob] [-CimSession <CimSession[]>] [-Description <String[]>]

   [-Direction <Direction[]>] [-DisplayGroup <String[]>] [-EdgeTraversalPolicy <EdgeTraversal[]>]

   [-Enabled <Enabled[]>] [-GPOSession <String>] [-Group <String[]>] [-LocalOnlyMapping <Boolean[]>]

   [-LooseSourceMapping <Boolean[]>] [-Owner <String[]>] [-PassThru] [-PolicyStore <String>]

   [-PolicyStoreSource <String[]>] [-PolicyStoreSourceType <PolicyStoreType[]>]

   [-PrimaryStatus <PrimaryStatus[]>] [-Status <String[]>] [-ThrottleLimit <Int32>] [-TracePolicyStore]

   [-Confirm] [-WhatIf]
- >-
  Enable-NetFirewallRule [-All] [-AsJob] [-CimSession <CimSession[]>] [-GPOSession <String>] [-PassThru]

   [-PolicyStore <String>] [-ThrottleLimit <Int32>] [-TracePolicyStore] [-Confirm] [-WhatIf]
- >-
  Enable-NetFirewallRule [-AsJob] [-CimSession <CimSession[]>] [-GPOSession <String>] [-PassThru]

   [-PolicyStore <String>] [-ThrottleLimit <Int32>] [-TracePolicyStore]

   -AssociatedNetFirewallInterfaceFilter <CimInstance> [-Confirm] [-WhatIf]
- >-
  Enable-NetFirewallRule [-AsJob] [-CimSession <CimSession[]>] [-GPOSession <String>] [-PassThru]

   [-PolicyStore <String>] [-ThrottleLimit <Int32>] [-TracePolicyStore]

   -AssociatedNetFirewallSecurityFilter <CimInstance> [-Confirm] [-WhatIf]
- >-
  Enable-NetFirewallRule [-AsJob] [-CimSession <CimSession[]>] [-GPOSession <String>] [-PassThru]

   [-PolicyStore <String>] [-ThrottleLimit <Int32>] [-TracePolicyStore]

   -AssociatedNetFirewallPortFilter <CimInstance> [-Confirm] [-WhatIf]
- >-
  Enable-NetFirewallRule [-AsJob] [-CimSession <CimSession[]>] [-GPOSession <String>] [-PassThru]

   [-PolicyStore <String>] [-ThrottleLimit <Int32>] [-TracePolicyStore]

   -AssociatedNetFirewallInterfaceTypeFilter <CimInstance> [-Confirm] [-WhatIf]
- >-
  Enable-NetFirewallRule [-AsJob] [-CimSession <CimSession[]>] [-GPOSession <String>] [-PassThru]

   [-PolicyStore <String>] [-ThrottleLimit <Int32>] [-TracePolicyStore]

   -AssociatedNetFirewallApplicationFilter <CimInstance> [-Confirm] [-WhatIf]
- >-
  Enable-NetFirewallRule [-AsJob] [-CimSession <CimSession[]>] [-GPOSession <String>] [-PassThru]

   [-PolicyStore <String>] [-ThrottleLimit <Int32>] [-TracePolicyStore]

   -AssociatedNetFirewallAddressFilter <CimInstance> [-Confirm] [-WhatIf]
- >-
  Enable-NetFirewallRule [-AsJob] [-CimSession <CimSession[]>] [-GPOSession <String>] [-PassThru]

   [-PolicyStore <String>] [-ThrottleLimit <Int32>] [-TracePolicyStore]

   -AssociatedNetFirewallServiceFilter <CimInstance> [-Confirm] [-WhatIf]
- >-
  Enable-NetFirewallRule [-AsJob] [-CimSession <CimSession[]>] [-GPOSession <String>] [-PassThru]

   [-PolicyStore <String>] [-ThrottleLimit <Int32>] [-TracePolicyStore]

   -AssociatedNetFirewallProfile <CimInstance> [-Confirm] [-WhatIf]
- >-
  Enable-NetFirewallRule [-Name] <String[]> [-AsJob] [-CimSession <CimSession[]>] [-GPOSession <String>]

   [-PassThru] [-PolicyStore <String>] [-ThrottleLimit <Int32>] [-TracePolicyStore] [-Confirm] [-WhatIf]
- >-
  Enable-NetFirewallRule [-AsJob] [-CimSession <CimSession[]>] [-GPOSession <String>] [-PassThru]

   [-PolicyStore <String>] [-ThrottleLimit <Int32>] [-TracePolicyStore] -DisplayName <String[]> [-Confirm]

   [-WhatIf]
- >-
  Enable-NetFirewallRule [-AsJob] [-CimSession <CimSession[]>] [-PassThru] [-ThrottleLimit <Int32>]

   -InputObject <CimInstance[]> [-Confirm] [-WhatIf]
examples:
- title: EXAMPLE 1
  code: |-
    PS C:\>Enable-NetFirewallRule -Group "@FirewallAPI.dll,-28502"
  description: |-
    This example enables all of the File and Printer Sharing rules.
    Use the universal and world-ready indirect string @FirewallAPI to specify the group.
  summary: ""
- title: EXAMPLE 2
  code: |-
    PS C:\>Enable-NetFirewallRule -DisplayName "Network Discovery"
  description: |-
    This example enables a firewall rule by specifying the localized name.
  summary: ""
- title: EXAMPLE 3
  code: |-
    PS C:\>Enable-NetFirewallRule -Direction Outbound -PolicyStore contoso.com\gpo_name
  description: |-
    This example enables all of the previously enabled outbound firewall rules in a specified GPO.
  summary: ""
- title: EXAMPLE 4
  code: |-
    PS C:\>$nfwRule = Get-NetFirewallRule -PolicyStore ActiveStore -PolicyStoreSourceType Dynamic



    PS C:\>Enable-NetFirewallRule -InputObject $nfwRule


    This is an alternate way to perform the same using only the pipeline.
    PS C:\>Get-NetFirewallRule -PolicyStore ActiveStore -PolicyStoreSourceType Dynamic | Enable-NetFirewallRule
  description: |-
    This example enables the dynamic firewall rules on the computer.
  summary: ""
parameters:
- type: <xref href="Action" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Action
  description: |+
    Specifies that matching firewall rules of the indicated action are enabled. 

    This parameter specifies the action to take on traffic that matches this rule. 
    The acceptable values for this parameter are: Allow or Block. 

     -- Allow: Network packets that match all criteria specified in this rule are permitted through the firewall.
    This is the default value. 

     -- Block: Network packets that match all criteria specified in this rule are dropped by the firewall. 

    The default value is Allow. 
    Note: The OverrideBlockRules field changes an allow rule into an allow bypass rule.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: All
  description: |+
    Indicates that all of the firewall rules within the specified policy store are enabled.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    ps_cimcommon_asjob

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: AssociatedNetFirewallAddressFilter
  isRequired: true
  description: |+
    Gets the firewall rules that are associated with the given address filter to be enabled. 

    A NetFirewallAddressFilter object represents the address conditions associated with a rule.
    See the Get-NetFirewallAddressFilter cmdlet for more information.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: AssociatedNetFirewallApplicationFilter
  isRequired: true
  description: |+
    Gets the firewall rules that are associated with the given application filter to be enabled. 

    A NetFirewallApplicationFilter object represents the applications associated with a rule.
    See the Get-NetFirewallApplicationFilter cmdlet for more information.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: AssociatedNetFirewallInterfaceFilter
  isRequired: true
  description: |+
    Gets the firewall rules that are associated with the given interface filter to be enabled. 

    A NetFirewallInterfaceFilter object represents the interface conditions associated with a rule.
    See the Get-NetFirewallInterfaceFilter cmdlet for more information.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: AssociatedNetFirewallInterfaceTypeFilter
  isRequired: true
  description: |+
    Gets the firewall rules that are associated with the given interface type filter to be enabled. 

    A NetFirewallInterfaceTypeFilter object represents the interface conditions associated with a rule.
    See the Get-NetFirewallInterfaceTypeFilter cmdlet for more information.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: AssociatedNetFirewallPortFilter
  isRequired: true
  description: |+
    Gets the firewall rules that are associated with the given port filter to be enabled. 

    A NetFirewallPortFilter object represents the port conditions associated with a rule.
    See the Get-NetFirewallPortFilter cmdlet for more information.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: AssociatedNetFirewallProfile
  isRequired: true
  description: |+
    Gets the firewall rules that are associated with the given firewall profile type to be enabled. 

    A NetFirewallProfile object represents the profile conditions associated with a rule.
    See the Get-NetFirewallProfile cmdlet for more information.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: AssociatedNetFirewallSecurityFilter
  isRequired: true
  description: |+
    Gets the firewall rules that are associated with the given security filter to be enabled. 

    A NetFirewallSecurityFilter object represents the security conditions associated with a rule.
    See the Get-NetFirewallSecurityFilter cmdlet for more information.
    The security conditions include the **Authentication**, **Encryption**, **LocalUser**, **RemoteUser**, and **RemoteMachine** parameters.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: AssociatedNetFirewallServiceFilter
  isRequired: true
  description: |+
    Gets the firewall rules that are associated with the given service filter to be enabled. 

    A NetFirewallServiceFilter object represents the profile conditions associated with a rule.
    See the Get-NetFirewallServiceFilter cmdlet for more information.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a New-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227967 or Get-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227966 cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Description
  description: |+
    Specifies that matching firewall rules of the indicated description are enabled.
    Wildcard characters are accepted. 

    This parameter provides information about the firewall rule.
    This parameter specifies the localized, user-facing description of the IPsec rule.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Direction" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Direction
  description: |+
    Specifies that matching firewall rules of the indicated direction are enabled. 

    This parameter specifies which direction of traffic to match with this rule. 
    The acceptable values for this parameter are: Inbound or Outbound. 

    The default value is Inbound.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: DisplayGroup
  description: |+
    Specifies that only matching firewall rules of the indicated group association are enabled.
    Wildcard characters are accepted. 

    The **Group** parameter specifies the source string for this parameter.
    If the value for this parameter is a localizable string, then the **Group** parameter contains an indirect string.
    Rule groups can be used to organize rules by influence and allows batch rule modifications.
    Using the Set-NetFirewallRule cmdlet, if the group name is specified for a set of rules or sets, then all of the rules or sets in that group receive the same set of modifications.
    It is good practice to specify the **Group** parameter value with a universal and world-ready indirect @FirewallAPI name. 
    Note: This parameter cannot be specified upon object creation using the New-NetFirewallRule cmdlet, but can be modified using dot-notation and the Set-NetFirewallRule cmdlet.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: DisplayName
  isRequired: true
  description: |+
    Specifies that only matching firewall rules of the indicated display name are enabled.
    Wildcard characters are accepted. 

    Specifies the localized, user-facing name of the firewall rule being created.
    When creating a rule this parameter is required.
    This parameter value is locale-dependent.
    If the object is not modified, this parameter value may change in certain circumstances.
    When writing scripts in multi-lingual environments, the **Name** parameter should be used instead, where the default value is a randomly assigned value. 
    Note: This parameter cannot be set to All.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="EdgeTraversal" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: EdgeTraversalPolicy
  description: |+
    Specifies that matching firewall rules of the indicated edge traversal policy are enabled. 

    This parameter specifies how this firewall rule will handle edge traversal cases.
    Edge traversal allows the computer to accept unsolicited inbound packets that have passed through an edge device, such as a network address translation (NAT) router or firewall.
    This option applies to inbound rules only. 
    The acceptable values for this parameter are: Block, Allow, DeferToUser, or DeferToApp. 

     -- Block: Prevents applications from receiving unsolicited traffic from the Internet through a NAT edge device. 

     -- Allow: Allows applications to receive unsolicited traffic directly from the Internet through a NAT edge device. 

     -- DeferToUser: Allows the user to decide whether to allow unsolicited traffic from the Internet through a NAT edge device when an application requests it. 

     -- DeferToApp: Allows each application to determine whether to allow unsolicited traffic from the Internet through a NAT edge device. 

    The default value is Block. 
    Note: The DeferToApp and DeferToUser options are only valid for computers running firstref_client_7, firstref_server_7, and Windows Server® 2012.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Enabled" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Enabled
  description: |+
    Specifies that matching firewall rules of the indicated state are enabled. 

    This parameter specifies that the rule object is administratively enabled or administratively enabled.
    The acceptable values for this parameter are:

     -- True: Specifies the rule is currently enabled. 

     -- False: Specifies the rule is currently disabled.
    A disabled rule will not actively modify computer behavior, but the management construct still exists on the computer so disabled rule can be re-enabled.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: GPOSession
  description: |+
    Specifies the network GPO from which to retrieve the rules to be enabled. 

    This parameter is used in the same way as the **PolicyStore** parameter.
    When modifying GPOs in Windows PowerShell®, each change to a GPO requires the entire GPO to be loaded, modified, and saved back.
    On a busy Domain Controller (DC), this can be a slow and resource-heavy operation.
    A GPO Session loads a domain GPO onto the local computer and makes all changes in a batch, before saving it back.
    This reduces the load on the DC and speeds up the Windows PowerShell cmdlets.
    To load a GPO Session, use the Open-NetGPO cmdlet.
    To save a GPO Session, use the Save-NetGPO cmdlet.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Group
  description: |+
    Specifies that only matching firewall rules of the indicated group association are enabled.
    Wildcard characters are accepted. 

    This parameter specifies the source string for the **DisplayGroup** parameter.
    If the **DisplayGroup** parameter value is a localizable string, then this parameter contains an indirect string.
    Rule groups can be used to organize rules by influence and allows batch rule modifications.
    Using the Set-NetFirewallRule cmdlets, if the group name is specified for a set of rules or sets, then all of the rules or sets in that group receive the same set of modifications.
    It is good practice to specify this parameter value with a universal and world-ready indirect @FirewallAPI name. 
    Note: The **DisplayGroup** parameter cannot be specified upon object creation using the New-NetFirewallRule cmdlet, but can be modified using dot-notation and the Set-NetFirewallRule cmdlet.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InputObject
  isRequired: true
  description: |+
    Specifies the input to this cmdlet.
    You can use this parameter, or you can pipe the input to this cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: LocalOnlyMapping
  description: |+
    Indicates that matching firewall rules of the indicated value are enabled. 

    This parameter specifies the firewall rules for local only mapping, which describes whether a packet must pass through a local address on the way to the destination. 

    Non-TCP traffic is session-less.
    Windows Firewall authorizes traffic per session, not per packet, for performance reasons.
    Generally, non-TCP sessions are inferred by checking the following fields: local address, remote address, protocol, local port, and remote port. 

    If this parameter is set to True, then the remote address and port will be ignored when inferring remote sessions.
    Sessions will be grouped based on local address, protocol, and local port. 

    This is similar to the **LooseSourceMapping** parameter, but performs better in cases where the traffic does not need to be filtered by remote address.
    This could improve performance on heavy server workloads where UDP requests come from dynamic client ports.
    For instance, Teredo relay servers.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: LooseSourceMapping
  description: |+
    Indicates that matching firewall rules of the indicated value are enabled. 

    This parameter specifies the firewall rules for loose source mapping, which describes whether a packet can have a non-local source address when being forwarded to a destination. 

    If this parameter is set to True, then the rule accepts packets incoming from a host other than the one the packets were sent to.
    This parameter applies only to UDP protocol traffic. 

    The default value is False.

  defaultValue: None
  position: Named
  aliases: LSM
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Name
  isRequired: true
  description: |+
    Specifies that only matching firewall rules of the indicated name are enabled.
    Wildcard characters are accepted. 

    This parameter acts just like a file name, in that only one rule with a given name may exist in a policy store at a time.
    During group policy processing and policy merge, rules that have the same name but come from multiple stores being merged, will overwrite one another so that only one exists.
    This overwriting behavior is desirable if the rules serve the same purpose.
    For instance, all of the firewall rules have specific names, so if an administrator can copy these rules to a GPO, and the rules will override the local versions on a local computer.
    GPOs can have precedence.
    So if an administrator has a different or more specific rule with the same name in a higher-precedence GPO, then it overrides other rules that exist. 

    The default value is a randomly assigned value. 

    When the defaults for main mode encryption need to overridden, specify the customized parameters and set this parameter, making it the new default setting for encryption.

  defaultValue: None
  position: "1"
  aliases: ID
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Owner
  description: |+
    Specifies that matching firewall rules of the indicated owner are enabled. 

    This parameter specifies the owner of the firewall rule, represented as an SDDL string.
    All Windows Store applications that require network traffic create network isolation rules (normally through installing via the Store), where the user that installed the application is the owner.
    This parameter specifies that only network packets that are authenticated as coming from or going to an owner identified in the list of accounts (SID) match this rule.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns an object representing the item with which you are working.
    By default, this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: PolicyStore
  description: "Targets the policy store from which to retrieve the rules to be enabled. \r\n\r\nA policy store is a container for firewall and IPsec policy. \r\nThe acceptable values for this parameter are:\r\n\r\n -- PersistentStore: Sometimes called static rules, this store contains the persistent policy for the local computer.\r\nThis policy is not from GPOs, and has been created manually or programmatically (during application installation) on the computer.\r\nRules created in this store are attached to the ActiveStore and activated on the system immediately. \r\n                         \r\n -- ActiveStore: This store contains the currently active policy, which is the sum of all policy stores that apply to the computer.\r\nThis is the resultant set of policy (RSOP) for the local computer (the sum of all GPOs that apply to the computer), and the local stores (the PersistentStore, the static Windows service hardening (WSH), and the configurable WSH). \r\n\r\n ---- GPOs are also policy stores.\r\nComputer GPOs can be specified as follows. \r\n\r\n ------ `-PolicyStore hostname`. \r\n\r\n ---- Active Directory GPOs can be specified as follows. \r\n\r\n ------ `-PolicyStore domain.fqdn.com\\GPO_Friendly_Namedomain.fqdn.comGPO_Friendly_Name`. \r\n\r\n ------ Such as the following. \r\n\r\n -------- `-PolicyStore localhost`\r\n\r\n -------- `-PolicyStore corp.contoso.com\\FirewallPolicy`\r\n\r\n ---- Active Directory GPOs can be created using the New-GPO cmdlet or the Group Policy Management Console. \r\n\r\n -- RSOP: This read-only store contains the sum of all GPOs applied to the local computer. \r\n\r\n -- SystemDefaults: This read-only store contains the default state of firewall rules that ship with Windows Server® 2012. \r\n\r\n -- StaticServiceStore: This read-only store contains all the service restrictions that ship with Windows Server 2012.\r\nOptional and product-dependent features are considered part of Windows Server 2012 for the purposes of WFAS. \r\n\r\n -- ConfigurableServiceStore: This read-write store contains all the service restrictions that are added for third-party services.\r\nIn addition, network isolation rules that are created for Windows Store application containers will appear in this policy store. \r\n\r\nThe default value is PersistentStore. \r\nNote: The Set-NetFirewallRule cmdlet cannot be used to add an object to a policy store.\r\nAn object can only be added to a policy store at creation time with the Copy-NetFirewallRule cmdlet or with the New-NetFirewallRule cmdlet.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: PolicyStoreSource
  description: |+
    Specifies that firewall rules matching the indicated policy store source are enabled. 

    This parameter contains a path to the policy store where the rule originated if the object is retrieved from the ActiveStore with the TracePolicyStoreSource option set.
    This parameter value is automatically generated and should not be modified. 

    The monitoring output from this parameter is not completely compatible with the **PolicyStore** parameter.
    This parameter value cannot always be passed into the **PolicyStore** parameter.
    Domain GPOs are one example in which this parameter contains only the GPO name, not the domain name.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="PolicyStoreType" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: PolicyStoreSourceType
  description: |+
    Specifies that firewall rules that match the indicated policy store source type are enabled. 

    This parameter describes the type of policy store where the rule originated if the object is retrieved from the ActiveStore with the TracePolicyStoreSource option set.
    This parameter value is automatically generated and should not be modified. 
    The acceptable values for this parameter are:

     -- Local: The object originates from the local store. 

     -- GroupPolicy: The object originates from a GPO. 

     -- Dynamic: The object originates from the local runtime state.
    This policy store name is not valid for use in the cmdlets, but may appear when monitoring active policy. 

     -- Generated: The object was generated automatically.
    This policy store name is not valid for use in the cmdlets, but may appear when monitoring active policy. 

     -- Hardcoded: The object was hard-coded.
    This policy store name is not valid for use in the cmdlets, but may appear when monitoring active policy.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="PrimaryStatus" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: PrimaryStatus
  description: "Specifies that firewall rules that match the indicated primary status are enabled. \r\n\r\nThis parameter specifies the overall status of the rule. \r\n\r\n -- OK: Specifies that the rule will work as specified. \r\n\r\n -- Degraded: Specifies that one or more parts of the rule will not be enforced. \r\n \r\n -- Error: Specifies that the computer is unable to use the rule at all. \r\n\r\nSee the Status and StatusCode fields of the object for more detailed status information.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Status
  description: |+
    Specifies that firewall rules that match the indicated status are enabled. 

    This parameter describes the status message for the specified status code value.
    The status code is a numerical value that indicates any syntax, parsing, or runtime errors in the rule or set.
    This parameter value should not be modified.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: TracePolicyStore
  description: |+
    Indicates that the firewall rules that match the indicated policy store are enabled. 

    This parameter specifies that the name of the source GPO is set to the **PolicyStoreSource** parameter value.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: NetSecurity.Enable-NetFirewallRule
name: Enable-NetFirewallRule
description: |-
  The **Enable-NetFirewallRule** cmdlet enables a previously disabled firewall rule to be active within the computer or a group policy organizational unit.

  This cmdlet gets one or more firewall rules to be enabled with the **Name** parameter (default), the **DisplayName** parameter, rule properties, or by associated filters or objects.
  The **Enabled** parameter for the resulting queried rules is set to True.
metadata:
  external help file: NetSecurity_Function.xml
  Module Name: NetSecurity
  online version: https://docs.microsoft.com/powershell/module/netsecurity/enable-netfirewallrule?view=windowsserver2012-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
