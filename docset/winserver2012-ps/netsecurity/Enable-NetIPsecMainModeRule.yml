### YamlMime:PowershellCmdlet
summary: |-
  Enables a previously disabled main mode rule.
module: NetSecurity
notes: ""
inputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\AssociatedNetIPsecMainModeCryptoSet" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetIKEP1AuthSet" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetMainModeRule" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetMainModeRule" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
links:
- text: Copy-NetIPsecMainModeRule
  href: ./Copy-NetIPsecMainModeRule.yml
- text: Disable-NetIPsecMainModeRule
  href: ./Disable-NetIPsecMainModeRule.yml
- text: Get-NetFirewallAddressFilter
  href: ./Get-NetFirewallAddressFilter.yml
- text: Get-NetFirewallProfile
  href: ./Get-NetFirewallProfile.yml
- text: Get-NetIPsecMainModeCryptoSet
  href: ./Get-NetIPsecMainModeCryptoSet.yml
- text: Get-NetIPsecPhase1AuthSet
  href: ./Get-NetIPsecPhase1AuthSet.yml
- text: New-NetIPsecMainModeRule
  href: ./New-NetIPsecMainModeRule.yml
- text: Open-NetGPO
  href: ./Open-NetGPO.yml
- text: Save-NetGPO
  href: ./Save-NetGPO.yml
- text: Set-NetIPsecMainModeRule
  href: ./Set-NetIPsecMainModeRule.yml
- text: New-NetIPsecAuthProposal
  href: ./New-NetIPsecAuthProposal.yml
- text: New-GPO
  href: ../grouppolicy/New-GPO.yml
syntaxes:
- >-
  Enable-NetIPsecMainModeRule [-All] [-AsJob] [-CimSession <CimSession[]>] [-GPOSession <String>] [-PassThru]

   [-PolicyStore <String>] [-ThrottleLimit <Int32>] [-TracePolicyStore] [-Confirm] [-WhatIf]
- >-
  Enable-NetIPsecMainModeRule [-Name] <String[]> [-AsJob] [-CimSession <CimSession[]>] [-GPOSession <String>]

   [-PassThru] [-PolicyStore <String>] [-ThrottleLimit <Int32>] [-TracePolicyStore] [-Confirm] [-WhatIf]
- >-
  Enable-NetIPsecMainModeRule [-AsJob] [-CimSession <CimSession[]>] [-GPOSession <String>] [-PassThru]

   [-PolicyStore <String>] [-ThrottleLimit <Int32>] [-TracePolicyStore]

   -AssociatedNetFirewallProfile <CimInstance> [-Confirm] [-WhatIf]
- >-
  Enable-NetIPsecMainModeRule [-AsJob] [-CimSession <CimSession[]>] [-Description <String[]>]

   [-DisplayGroup <String[]>] [-Enabled <Enabled[]>] [-GPOSession <String>] [-Group <String[]>]

   [-MainModeCryptoSet <String[]>] [-PassThru] [-Phase1AuthSet <String[]>] [-PolicyStore <String>]

   [-PolicyStoreSource <String[]>] [-PolicyStoreSourceType <PolicyStoreType[]>]

   [-PrimaryStatus <PrimaryStatus[]>] [-Status <String[]>] [-ThrottleLimit <Int32>] [-TracePolicyStore]

   [-Confirm] [-WhatIf]
- >-
  Enable-NetIPsecMainModeRule [-AsJob] [-CimSession <CimSession[]>] [-GPOSession <String>] [-PassThru]

   [-PolicyStore <String>] [-ThrottleLimit <Int32>] [-TracePolicyStore] -DisplayName <String[]> [-Confirm]

   [-WhatIf]
- >-
  Enable-NetIPsecMainModeRule [-AsJob] [-CimSession <CimSession[]>] [-PassThru] [-ThrottleLimit <Int32>]

   -InputObject <CimInstance[]> [-Confirm] [-WhatIf]
- >-
  Enable-NetIPsecMainModeRule [-AsJob] [-CimSession <CimSession[]>] [-GPOSession <String>] [-PassThru]

   [-PolicyStore <String>] [-ThrottleLimit <Int32>] [-TracePolicyStore]

   -AssociatedNetFirewallAddressFilter <CimInstance> [-Confirm] [-WhatIf]
- >-
  Enable-NetIPsecMainModeRule [-AsJob] [-CimSession <CimSession[]>] [-GPOSession <String>] [-PassThru]

   [-PolicyStore <String>] [-ThrottleLimit <Int32>] [-TracePolicyStore]

   -AssociatedNetIPsecMainModeCryptoSet <CimInstance> [-Confirm] [-WhatIf]
- >-
  Enable-NetIPsecMainModeRule [-AsJob] [-CimSession <CimSession[]>] [-GPOSession <String>] [-PassThru]

   [-PolicyStore <String>] [-ThrottleLimit <Int32>] [-TracePolicyStore]

   -AssociatedNetIPsecPhase1AuthSet <CimInstance> [-Confirm] [-WhatIf]
examples:
- title: EXAMPLE 1
  code: |-
    PS C:\>Enable-NetIPsecMainModeRule -DisplayName "Main Mode Rule" -PolicyStore domain.contoso.com\gpo
  description: |-
    This example enables a main mode rule in a GPO given the localized name.
  summary: ""
- title: EXAMPLE 2
  code: |-
    PS C:\>Enable-NetIPsecMainModeRule -Group "DA Client" -PolicyStore ActiveStore
  description: |-
    This example enables all of the main mode client DA rules on the local computer.
  summary: ""
- title: EXAMPLE 3
  code: |-
    PS C:\>$Phase1AuthSet = Get-NetIPsecPhase1AuthSet -DisplayName "Computer Kerb, CA Auth"



    PS C:\>Enable-NetIPsecMainModeRule -InputObject $Phase1AuthSet
  description: |-
    This example enables all of the main mode rules associated with the phase 1 authorization set.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: All
  description: |+
    Indicates that all of the main mode rules within the specified policy store are enabled.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    ps_cimcommon_asjob

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: AssociatedNetFirewallAddressFilter
  isRequired: true
  description: |+
    Gets the main mode rules that are associated with the given address filter to be enabled. 

    A NetFirewallAddressFilter object represents the address conditions associated with a rule.
    See the Get-NetFirewallAddressFilter cmdlet for more information.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: AssociatedNetFirewallProfile
  isRequired: true
  description: |+
    Gets the main mode rules that are associated with the given firewall profile type to be enabled. 

    A NetFirewallProfile object represents the profile conditions associated with a rule.
    See the Get-NetFirewallProfile cmdlet for more information.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: AssociatedNetIPsecMainModeCryptoSet
  isRequired: true
  description: |+
    Gets the main mode rules that are associated, via the pipeline, with the input main mode cryptographic set to be enabled. 

    A NetIPsecMainModeCryptoSet object represents a main mode cryptographic conditions associated with a main mode rule.
    This parameter sets the methods for the main mode negotiation by describing the proposals for encryption.
    See the Get-NetIPsecMainModeCryptoSet cmdlet for more information. 

    Alternatively, the **MainModeCryptoSet** parameter can be used for the same purpose, but does not allow the cryptographic set to be piped into this cmdlet and the set must be specified with the **Name** parameter.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: AssociatedNetIPsecPhase1AuthSet
  isRequired: true
  description: |+
    Gets the IPsec rules that are associated with the given phase 1 authentication set to be enabled. 

    A NetIPsecPhase1AuthSet object represents the phase 1 authorization set conditions associated with an IPsec or main mode rule.
    This parameter sets the methods for main mode negotiation by describing the proposals for computer authentication.
    See the Get-NetIPsecPhase1AuthSet cmdlet for more information. 

    Alternatively, the **Phase1AuthSet** parameter can be used for the same purpose, but does not allow the authentication set to be piped into the cmdlet and the set must be specified with the **Name** parameter.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a New-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227967 or Get-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227966 cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Description
  description: |+
    Specifies that matching main mode rules of the indicated description are enabled.
    Wildcard characters are accepted. 

    This parameter provides information about the main mode rule.
    This parameter specifies the localized, user-facing description of the IPsec rule.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: DisplayGroup
  description: |+
    Specifies that only matching main mode rules of the indicated group association are enabled.
    Wildcard characters are accepted. 

    The **Group** parameter specifies the source string for this parameter.
    If the value for this parameter is a localizable string, then the **Group** parameter contains an indirect string.
    Rule groups can be used to organize rules by influence and allows batch rule modifications.
    Using the Set-NetIPsecMainModeRule cmdlet, if the group name is specified for a set of rules or sets, then all of the rules or sets in that group receive the same set of modifications.
    It is good practice to specify the **Group** parameter value with a universal and world-ready indirect @FirewallAPI name. 
    Note: This parameter cannot be specified upon object creation using the New-NetIPsecMainModeRule cmdlet, but can be modified using dot-notation and the Set-NetIPsecMainModeRule cmdlet.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: DisplayName
  isRequired: true
  description: |+
    Specifies that only matching main mode rules of the indicated display name are enabled.
    Wildcard characters are accepted. 

    Specifies the localized, user-facing name of the main mode rule being created.
    When creating a rule this parameter is required.
    This parameter value is locale-dependent.
    If the object is not modified, this parameter value may change in certain circumstances.
    When writing scripts in multi-lingual environments, the **Name** parameter should be used instead, where the default value is a randomly assigned value. 
    Note: This parameter cannot be set to All.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Enabled" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Enabled
  description: |+
    Specifies that matching main mode rules of the indicated state are enabled. 

    This parameter specifies that the rule object is administratively enabled or administratively enabled.
    The acceptable values for this parameter are:

     -- True: Specifies the rule is currently enabled. 

     -- False: Specifies the rule is currently disabled.
    A disabled rule will not actively modify computer behavior, but the management construct still exists on the computer so it can be re-enabled.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: GPOSession
  description: |+
    Specifies the network Group Policy Object (GPO) from which to retrieve the rules to be enabled. 

    This parameter is used in the same way as the **PolicyStore** parameter.
    When modifying GPOs in Windows PowerShell®, each change to a GPO requires the entire GPO to be loaded, modified, and saved back.
    On a busy Domain Controller (DC), this can be a slow and resource-heavy operation.
    A GPO Session loads a domain GPO onto the local computer and makes all changes in a batch, before saving it back.
    This reduces the load on the DC and speeds up the Windows PowerShell cmdlets.
    To load a GPO Session, use the Open-NetGPO cmdlet.
    To save a GPO Session, use the Save-NetGPO cmdlet.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Group
  description: |+
    Specifies that only matching main mode rules of the indicated group association are enabled.
    Wildcard characters are accepted. 

    This parameter specifies the source string for the **DisplayGroup** parameter.
    If the **DisplayGroup** parameter value is a localizable string, then this parameter contains an indirect string.
    Rule groups can be used to organize rules by influence and allows batch rule modifications.
    Using the Set-NetIPsecMainModeRule cmdlets, if the group name is specified for a set of rules or sets, then all of the rules or sets in that group receive the same set of modifications.
    It is good practice to specify this parameter value with a universal and world-ready indirect @FirewallAPI name. 
    Note: The **DisplayGroup** parameter cannot be specified upon object creation using the New-NetIPsecMainModeRule cmdlet, but can be modified using dot-notation and the Set-NetIPsecMainModeRule cmdlet.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InputObject
  isRequired: true
  description: |+
    Specifies the input to this cmdlet.
    You can use this parameter, or you can pipe the input to this cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: MainModeCryptoSet
  description: |+
    Gets the IPsec main mode rules that are associated with the given main mode cryptographic set to be enabled. 

    Specifies, by Name, the main mode cryptographic set to be associated with the main mode rule. 

    A NetIPsecMainModeCryptoSet object represents a main mode cryptographic conditions associated with a main mode rule.
    This parameter sets the methods for main mode negotiation by describing the proposals for encryption.
    This is only associated with main mode rules.
    See the Get-NetIPsecMainModeCryptoSet cmdlet for more information.
    Alternatively, the **AssociatedNetIPsecMainModeCryptoSet** parameter can be used for the same purpose, but is used to pipe the input set into the rule. 
    Note: When specifying cryptographic sets, the **Name** parameter value of the cryptographic set must be used.
    The object cannot be directly passed into this cmdlet.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Name
  isRequired: true
  description: |+
    Specifies that only matching main mode rules of the indicated name are enabled.
    Wildcard characters are accepted. 

    This parameter acts just like a file name, in that only one rule with a given name may exist in a policy store at a time.
    During group policy processing and policy merge, rules that have the same name but come from multiple stores being merged, will overwrite one another so that only one exists.
    This overwriting behavior is desirable if the rules serve the same purpose.
    For instance, all of the main mode rules have specific names, so if an administrator can copy these rules to a GPO, and the rules will override the local versions on a local computer.
    GPOs can have precedence.
    So if an administrator has a different or more specific rule with the same name in a higher-precedence GPO, then it overrides other rules that exist. 

    The default value is a randomly assigned value. 

    When the defaults for main mode encryption need to overridden, specify the customized parameters and set this parameter, making this parameter the new default setting for encryption.

  defaultValue: None
  position: "1"
  aliases: ID
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns an object representing the item with which you are working.
    By default, this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Phase1AuthSet
  description: |+
    Gets the main mode rules that are associated with the given phase 1 authentication set to be enabled. 

    This parameter specifies, by name, the Phase 1 authentication set to be associated with the main mode rule. 

    A NetIPsecPhase1AuthSet object represents the phase 1 authentication conditions associated with an IPsec or main mode rule.
    This parameter sets the methods for main mode negotiation by describing the proposals for computer authentication.
    See the New-NetIPsecAuthProposal cmdlet of more information.
    Alternatively, the **AssociatedNetIPsecPhase1AuthSet** parameter can be used for the same purpose, but is used to pipe the input set into the rule.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: PolicyStore
  description: |+
    Targets the policy store from which to retrieve the rules to be enabled. 

    A policy store is a container for firewall and IPsec policy. 
    The acceptable values for this parameter are:

     -- PersistentStore: Sometimes called static rules, this store contains the persistent policy for the local computer.
    This policy is not from GPOs, and has been created manually or programmatically (during application installation) on the computer.
    Rules created in this store are attached to the ActiveStore and activated on the system immediately. 

     -- ActiveStore: This store contains the currently active policy, which is the sum of all policy stores that apply to the computer.
    This is the resultant set of policy (RSOP) for the local computer (the sum of all GPOs that apply to the computer), and the local stores (the PersistentStore, the static Windows service hardening (WSH), and the configurable WSH). 

     ---- GPOs are also policy stores.
    Computer GPOs can be specified as follows. 

     ------ `-PolicyStore hostname`. 

     ---- Active Directory GPOs can be specified as follows. 

     ------ `-PolicyStore domain.fqdn.com\GPO_Friendly_Namedomain.fqdn.comGPO_Friendly_Name`. 

     ------ Such as the following. 

     -------- `-PolicyStore localhost`

     -------- `-PolicyStore corp.contoso.com\FirewallPolicy`

     ---- Active Directory GPOs can be created using the New-GPO cmdlet or the Group Policy Management Console. 

     -- RSOP: This read-only store contains the sum of all GPOs applied to the local computer. 

     -- SystemDefaults: This read-only store contains the default state of main mode rules that ship with Windows Server® 2012. 

     -- StaticServiceStore: This read-only store contains all the service restrictions that ship with Windows Server 2012.
    Optional and product-dependent features are considered part of Windows Server 2012 for the purposes of WFAS. 

     -- ConfigurableServiceStore: This read-write store contains all the service restrictions that are added for third-party services.
    In addition, network isolation rules that are created for Windows Store application containers will appear in this policy store. 

    The default value is PersistentStore. 
    Note: The Set-NetIPsecMainModeRule cmdlet cannot be used to add an object to a policy store.
    An object can only be added to a policy store at creation time with the Copy-NetIPsecMainModeRule cmdlet or with the New-NetIPsecMainModeRule cmdlet.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: PolicyStoreSource
  description: |+
    Specifies that main mode rules matching the indicated policy store source are enabled. 

    This parameter contains a path to the policy store where the rule originated if the object is retrieved from the ActiveStore with the TracePolicyStoreSource option set.
    This parameter value is automatically generated and should not be modified. 

    The monitoring output from this parameter is not completely compatible with the **PolicyStore** parameter.
    This parameter value cannot always be passed into the **PolicyStore** parameter.
    Domain GPOs are one example in which this parameter contains only the GPO name, not the domain name.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="PolicyStoreType" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: PolicyStoreSourceType
  description: |+
    Specifies that main mode rules that match the indicated policy store source type are enabled. 

    This parameter describes the type of policy store where the rule originated if the object is retrieved from the ActiveStore with the TracePolicyStoreSource option set.
    This parameter value is automatically generated and should not be modified. 
    The acceptable values for this parameter are:

     -- Local: The object originates from the local store. 

     -- GroupPolicy: The object originates from a GPO. 

     -- Dynamic: The object originates from the local runtime state.
    This policy store name is not valid for use in the cmdlets, but may appear when monitoring active policy. 

     -- Generated: The object was generated automatically.
    This policy store name is not valid for use in the cmdlets, but may appear when monitoring active policy. 

     -- Hardcoded: The object was hard-coded.
    This policy store name is not valid for use in the cmdlets, but may appear when monitoring active policy.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="PrimaryStatus" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: PrimaryStatus
  description: "Specifies that main mode rules that match the indicated primary status are enabled. \r\n\r\nThis parameter specifies the overall status of the rule. \r\n\r\n -- OK: Specifies that the rule will work as specified. \r\n\r\n -- Degraded: Specifies that one or more parts of the rule will not be enforced. \r\n \r\n -- Error: Specifies that the computer is unable to use the rule at all. \r\n\r\nSee the Status and StatusCode fields of the object for more detailed status information.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Status
  description: |+
    Specifies that main mode rules that match the indicated status are enabled. 

    This parameter describes the status message for the specified status code value.
    The status code is a numerical value that indicates any syntax, parsing, or runtime errors in the rule or set.
    This parameter value should not be modified.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: TracePolicyStore
  description: |+
    Indicates that the main mode rules that match the indicated policy store are enabled. 

    This parameter specifies that the name of the source GPO is set to the **PolicyStoreSource** parameter value.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: NetSecurity.Enable-NetIPsecMainModeRule
name: Enable-NetIPsecMainModeRule
description: |-
  The **Enable-NetIPsecMainModeRule** cmdlet enables a previously disabled main mode rule to be active within the computer or a group policy organizational unit.
  To disable a rule, use the Disable-NetIPsecMainModeRule cmdlet.

  This cmdlet gets one or more main mode rules to be enabled with the **Name** parameter (default), the **DisplayName** parameter, rule properties, or by associated filters or objects.
  The **Enabled** parameter value for the resulting queried rules is set to True.
metadata:
  external help file: NetSecurity_Function.xml
  Module Name: NetSecurity
  online version: https://docs.microsoft.com/powershell/module/netsecurity/enable-netipsecmainmoderule?view=windowsserver2012-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
