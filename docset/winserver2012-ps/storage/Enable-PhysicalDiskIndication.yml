### YamlMime:PowershellCmdlet
summary: |-
  Enables the identification LED on the specified physical disk.
module: Storage
notes: ""
inputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/Microsoft/Windows/Storage/MSFT_PhysicalDisk" data-throw-if-not-resolved="False" />
  description: |-
    You can pipe a Disk object to the **InputObject** parameter.
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/Microsoft/Windows/Storage/MSFT_PhysicalDisk" data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet outputs an object that represents the physical disk for which you enabled the identification LED.
links:
- text: Where-Object
  href: https://go.microsoft.com/fwlink/?LinkID=113423
- text: Disable-PhysicalDiskIndication
  href: ./Disable-PhysicalDiskIndication.yml
- text: Get-StoragePool
  href: ./Get-StoragePool.yml
- text: Get-VirtualDisk
  href: ./Get-VirtualDisk.yml
syntaxes:
- >-
  Enable-PhysicalDiskIndication [-FriendlyName] <String[]> [-AsJob] [-CimSession <CimSession[]>] [-PassThru]

   [-ThrottleLimit <Int32>] [-Confirm] [-WhatIf]
- >-
  Enable-PhysicalDiskIndication [-AsJob] [-CimSession <CimSession[]>] [-PassThru] [-ThrottleLimit <Int32>]

   -UniqueId <String[]> [-Confirm] [-WhatIf]
- >-
  Enable-PhysicalDiskIndication [-AsJob] [-CimSession <CimSession[]>] [-PassThru] [-ThrottleLimit <Int32>]

   -InputObject <CimInstance[]> [-Confirm] [-WhatIf]
examples:
- title: 'Example 1: Enable the identification LED on all physical disks in a pool'
  code: |-
    PS C:\>$stpool = (Get-StoragePool -FriendlyName "SpacePool")



    PS C:\> Enable-PhysicalDiskIndication -StoragePool $stpool
  description: |-
    This example enables the identification LED on all physical disks associated with the Storage Pool SpacePool.
    This is useful for identifying a specific virtual disk, when the LED on the disk in question is not functioning.
  summary: ""
- title: 'Example 2: Enable the identification LED on all physical disks used by a virtual disk'
  code: |-
    PS C:\> $vdisk = (Get-VirtualDisk -FriendlyName "Bruce's Music")



    PS C:\>Enable-PhysicalDiskIndication -VirtualDisk $vdisk
  description: |-
    This example enables the identification LED on all physical disks associated with the virtual disk named Bruce's Music to visually identify the Physical Storage associated with the virtual disk.
  summary: ""
- title: 'Example 3: Enable the identification LED on all disks that are not healthy'
  code: |-
    PS C:\>Get-PhysicalDisk | Where-Object -FilterScript { $_.HealthStatus -Ne "healthy" } | Enable-PhysicalDiskIndication
  description: |-
    This example gets all physical disks with a health status that is not Healthy, and pipes the disks to the **Enable-PhysicalDiskIndication** cmdlet, enabling the LEDs on the disks, if supported by the drive enclosure.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    ps_cimcommon_asjob

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a New-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227967 or Get-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227966 cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: FriendlyName
  isRequired: true
  description: |+
    Specifies the friendly name of the disk on which to enable the identification LED.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InputObject
  isRequired: true
  description: |+
    Specifies the Disk object on which to enable the LED.
    Enter a Disk CIM object, which you can get using the Get-Disk cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Specifies that the cmdlet should output an object representing the physical disk for which you enabled the identification LED.
    By default, this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShellÂ® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: UniqueId
  isRequired: true
  description: |+
    Specifies an ID used to uniquely identify a Disk object in the system.
    The ID persists through restarts.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: Id
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: Storage.Enable-PhysicalDiskIndication
name: Enable-PhysicalDiskIndication
description: |-
  The **Enable-PhysicalDiskIndication** cmdlet enables the identification LED on the specified physical disk.
  The LED is typically used for visual identification of the location of a physical disk in an enclosure for removal and replacement operations.
  This cmdlet requires a storage enclosure that supports SCSI Enclosure Services (SES).
metadata:
  external help file: Storage2_Cmdlets.xml
  Module Name: Storage
  online version: https://docs.microsoft.com/powershell/module/storage/enable-physicaldiskindication?view=windowsserver2012-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
