### YamlMime:PowershellCmdlet
summary: |-
  Gets a list of all PhysicalDisk objects visible across any available Storage Management Providers, or optionally a filtered list.
module: Storage
notes: ""
inputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/Microsoft/Windows/Storage/MSFT_StoragePool" data-throw-if-not-resolved="False" />
  description: |-
    You can pipe an MSFT_StoragePool object to the StoragePool parameter.
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/Microsoft/Windows/Storage/MSFT_StorageSubsystem" data-throw-if-not-resolved="False" />
  description: |-
    You can pipe an MSFT_StorageSubsystem object to the StorageSubsystem parameter.
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/Microsoft/Windows/Storage/MSFT_VirtualDisk" data-throw-if-not-resolved="False" />
  description: |-
    You can pipe an MSFT_VirtualDisk object to the VirtualDisk parameter.
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/Microsoft/Windows/Storage/MSFT_PhysicalDisk" data-throw-if-not-resolved="False" />
  description: |-
    The Get-PhysicalDisk cmdlet returns objects that represent physical disks.
links:
- text: Add-PhysicalDisk
  href: ./Add-PhysicalDisk.yml
- text: Get-StoragePool
  href: ./Get-StoragePool.yml
- text: New-StoragePool
  href: ./New-StoragePool.yml
- text: Remove-PhysicalDisk
  href: ./Remove-PhysicalDisk.yml
- text: Reset-PhysicalDisk
  href: ./Reset-PhysicalDisk.yml
- text: Set-PhysicalDisk
  href: ./Set-PhysicalDisk.yml
syntaxes:
- >-
  Get-PhysicalDisk [-AsJob] [-CanPool <Boolean[]>] [-CimSession <CimSession[]>] [-Description <String[]>]

   [-HealthStatus <HealthStatus[]>] [-Manufacturer <String[]>] [-Model <String[]>] [-ThrottleLimit <Int32>]

   [-UniqueId <String[]>] [-Usage <Usage[]>]
- >-
  Get-PhysicalDisk [[-FriendlyName] <String[]>] [-AsJob] [-CanPool <Boolean[]>] [-CimSession <CimSession[]>]

   [-Description <String[]>] [-HealthStatus <HealthStatus[]>] [-Manufacturer <String[]>] [-Model <String[]>]

   [-ThrottleLimit <Int32>] [-Usage <Usage[]>]
- >-
  Get-PhysicalDisk [-AsJob] [-CanPool <Boolean[]>] [-CimSession <CimSession[]>] [-Description <String[]>]

   [-HealthStatus <HealthStatus[]>] [-Manufacturer <String[]>] [-Model <String[]>] [-StoragePool <CimInstance>]

   [-ThrottleLimit <Int32>] [-Usage <Usage[]>]
- >-
  Get-PhysicalDisk [-AsJob] [-CanPool <Boolean[]>] [-CimSession <CimSession[]>] [-Description <String[]>]

   [-HealthStatus <HealthStatus[]>] [-Manufacturer <String[]>] [-Model <String[]>]

   [-StorageSubSystem <CimInstance>] [-ThrottleLimit <Int32>] [-Usage <Usage[]>]
- >-
  Get-PhysicalDisk [-AsJob] [-CanPool <Boolean[]>] [-CimSession <CimSession[]>] [-Description <String[]>]

   [-HasAllocations <Boolean>] [-HealthStatus <HealthStatus[]>] [-Manufacturer <String[]>] [-Model <String[]>]

   [-SelectedForUse <Boolean>] [-ThrottleLimit <Int32>] [-Usage <Usage[]>] [-VirtualDisk <CimInstance>]

   [-VirtualRangeMax <UInt64>] [-VirtualRangeMin <UInt64>]
examples:
- title: 'Example 1: Getting all physical disks'
  code: |-
    PS C:\> Get-PhysicalDisk
    FriendlyName        CanPool            OperationalStatus   HealthStatus        Usage                              Size 
    ------------        --------            -----------------   ------------        -----                              ---- 
    PhysicalDisk4       False               OK                  Healthy             Data Store                        25 GB
  description: |-
    This example returns an array of all PhysicalDisk objects present in the computer.
    A storage management provider is required to manage physical disks.
  summary: ""
- title: 'Example 2: Getting all physical disks eligible for adding to a storage pool'
  code: |-
    PS C:\>Get-PhysicalDisk -CanPool $True
  description: |-
    This example returns an array of PhysicalDisk objects that are available for adding to a storage pool (they are in a primordial pool).
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    Runs the cmdlet as a background job. Use this parameter to run commands that take a long time to complete. 

    The cmdlet immediately returns an object that represents the job and then displays the command prompt. 
    You can continue to work in the session while the job completes. 
    To manage the job, use the `*-Job` cmdlets. 
    To get the job results, use the [Receive-Job](https://go.microsoft.com/fwlink/?LinkID=113372) cmdlet. 

    For more information about Windows PowerShell background jobs, see [about_Jobs](https://go.microsoft.com/fwlink/?LinkID=113251).

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CanPool
  description: |+
    Gets physical disks that are available for use in a storage pool.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a [New-CimSession](https://docs.microsoft.com/powershell/module/cimcmdlets/new-cimsession) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966) cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Description
  description: |+
    Gets the physical disks that contain the specified description.
    Enter a description or use wildcard characters to enter a description pattern.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: FriendlyName
  description: |+
    Gets the physical disk with the specified friendly name.
    Enter a friendly name or use wildcard characters to enter a name pattern.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: HasAllocations
  description: |+
    Indicates whether the cmdlet gets a list of physical disks that host the extents of the virtual disk that you specify by using the *VirtualDisk* parameter.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="HealthStatus" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: HealthStatus
  description: |+
    Specifies the **health status** of physical disks.
    The acceptable values for this parameter are:

    - Healthy 
    - Unhealthy 
    - Unknown 
    - Warning 

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Manufacturer
  description: |+
    Gets the physical disks with the specified manufacturer.
    Enter a manufacturer string or use wildcard characters to enter a pattern.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Model
  description: |+
    Gets the physical disks of the specified model.
    Enter a model string or use wildcard characters to enter a pattern.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: SelectedForUse
  description: |+
    Indicates whether the cmdlet gets a list of physical disks to host the extents that belong to the virtual disk specified by the *VirtualDisk* parameter.
    Specify the physical disks to host the extents of a virtual disk by using the *PhysicalDisksToUse* parameter of the **New-VirtualDisk** cmdlet.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: StoragePool
  description: |+
    Accepts a StoragePool object as input and gets the physical disks that belong to the pool.
    The Storage Pool CIM object is exposed by the **Get-StoragePool** cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: StorageSubSystem
  description: |+
    Specifies a storage subsystem.
    This cmdlet gets physical disks attached to the storage subsystem that you specify.
    To obtain a **StorageSubsystem** object, use the **Get-StorageSubSystem** cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShellÂ® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: UniqueId
  description: |+
    Gets only the physical disks with the specified IDs.
    Type one or more IDs (separated by commas), or use wildcard characters to enter a pattern.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: Id
  parameterValueGroup: ""
- type: <xref href="Usage" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Usage
  description: |+
    Specifies an allocation method or usage.
    This cmdlet gets the physical disks that have the specified allocation method.
    The acceptable values for this parameter are:

    - AutoSelect 
    - HotSpare 
    - Journal 
    - ManualSelect 
    - Retired 
    - Unknown

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: VirtualDisk
  description: |+
    Accepts a VirtualDisk object as input and gets the physical disks used by the virtual disk.
    The VirtualDisk object is exposed by the **Get-VirtualDisk** cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="UInt64" data-throw-if-not-resolved="False" />
  name: VirtualRangeMax
  description: |+
    This parameter is reserved for future use.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="UInt64" data-throw-if-not-resolved="False" />
  name: VirtualRangeMin
  description: |+
    This parameter is reserved for future use.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: Storage.Get-PhysicalDisk
name: Get-PhysicalDisk
description: |-
  The **Get-PhysicalDisk** cmdlet gets a list of all PhysicalDisk objects visible across any available Storage Management Providers, or optionally a filtered list of disks.
metadata:
  external help file: Storage2_Cmdlets.xml
  Module Name: Storage
  online version: https://docs.microsoft.com/powershell/module/storage/get-physicaldisk?view=windowsserver2012-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
