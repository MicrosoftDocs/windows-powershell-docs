### YamlMime:PowershellCmdlet
summary: |-
  Creates a new storage pool using a group of physical disks, and a specific storage subsystem exposed by a storage provider.
module: Storage
notes: ""
inputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/Microsoft/Windows/Storage/MSFT_PhysicalDisk" data-throw-if-not-resolved="False" />
  description: |-
    You can pipe one or more MSFT_PhysicalDisk objects to the PhysicalDisks parameter.
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/Microsoft/Windows/Storage/MSFT_StoragePool" data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet returns an object representing the newly created storage pool.
links:
- text: Get-PhysicalDisk
  href: ./Get-PhysicalDisk.yml
- text: Get-StoragePool
  href: ./Get-StoragePool.yml
- text: Get-StorageSubsystem
  href: ./Get-StorageSubsystem.yml
- text: Remove-StoragePool
  href: ./Remove-StoragePool.yml
- text: Set-StoragePool
  href: ./Set-StoragePool.yml
syntaxes:
- >-
  New-StoragePool [-StorageSubSystemFriendlyName] <String[]> [-AsJob] [-CimSession <CimSession[]>]

   [-EnclosureAwareDefault <Boolean>] [-LogicalSectorSizeDefault <UInt64>] [-OtherUsageDescription <String>]

   [-ProvisioningTypeDefault <ProvisioningType>] [-ResiliencySettingNameDefault <String>]

   [-ThrottleLimit <Int32>] [-Usage <Usage>] -FriendlyName <String> -PhysicalDisks <CimInstance[]>
- >-
  New-StoragePool [-AsJob] [-CimSession <CimSession[]>] [-EnclosureAwareDefault <Boolean>]

   [-LogicalSectorSizeDefault <UInt64>] [-OtherUsageDescription <String>]

   [-ProvisioningTypeDefault <ProvisioningType>] [-ResiliencySettingNameDefault <String>]

   [-ThrottleLimit <Int32>] [-Usage <Usage>] -FriendlyName <String> -PhysicalDisks <CimInstance[]>

   -StorageSubSystemUniqueId <String[]>
- >-
  New-StoragePool [-AsJob] [-CimSession <CimSession[]>] [-EnclosureAwareDefault <Boolean>]

   [-LogicalSectorSizeDefault <UInt64>] [-OtherUsageDescription <String>]

   [-ProvisioningTypeDefault <ProvisioningType>] [-ResiliencySettingNameDefault <String>]

   [-ThrottleLimit <Int32>] [-Usage <Usage>] -FriendlyName <String> -InputObject <CimInstance[]>

   -PhysicalDisks <CimInstance[]>
- >-
  New-StoragePool [-AsJob] [-CimSession <CimSession[]>] [-EnclosureAwareDefault <Boolean>]

   [-LogicalSectorSizeDefault <UInt64>] [-OtherUsageDescription <String>]

   [-ProvisioningTypeDefault <ProvisioningType>] [-ResiliencySettingNameDefault <String>]

   [-ThrottleLimit <Int32>] [-Usage <Usage>] -FriendlyName <String> -PhysicalDisks <CimInstance[]>

   -StorageSubSystemName <String[]>
examples:
- title: 'Example 1: Create a new storage pool using Storage Spaces'
  code: |-
    This line uses the **Get-PhysicalDisk** cmdlet to get all PhysicalDisk objects than are not yet in a (concrete) storage pool, and assigns the array of objects to the $PhysicalDisks variable.
    PS C:\>$PhysicalDisks = (Get-PhysicalDisk -CanPool $True)

    This line creates a new storage pool using the $PhysicalDisks variable to specify the disks to include from the Storage Spaces subsystem (specified with a wildcard * to remove the need to modify the friendly name for different computers).
    PS C:\>New-StoragePool -FriendlyName CompanyData -StorageSubsystemFriendlyName "Storage Spaces*" -PhysicalDisks $PhysicalDisks
  description: |-
    This example creates a new storage pool named CompanyData using the Storage Spaces subsytem, using the minimum parameters, and assuming that there are no other storage subsystems attached to the computer that have available disks.
  summary: ""
- title: 'Example 2: Create a new pool and set defaults for virtual disks'
  code: |-
    PS C:\>$PhysicalDisks = (Get-PhysicalDisk -CanPool $True) 



    PS C:\>New-StoragePool -FriendlyName CompanyData -StorageSubsystemFriendlyName "Storage Spaces*" -PhysicalDisks $PhysicalDisks -ResiliencySettingNameDefault Mirror -ProvisioningTypeDefault Thin -Verbose
  description: |-
    This example creates a new storage pool named CompanyData using the Storage Spaces subsystem and sets default values for virtual disk creation.
  summary: ""
- title: 'Example 3: Create a new storage pool, virtual disk, partition, and volume'
  code: |-
    This line gets the storage subsystem object for the Storage Spaces subsystem, passes it to the **Get-PhysicalDisk** cmdlet, which then gets the physical disks in the specified subsystem that are available to add to a storage pool, and assigns these disks to the $PhysicalDisks variable.
    PS C:\>$PhysicalDisks = Get-StorageSubSystem -FriendlyName "Storage Spaces*" | Get-PhysicalDisk -CanPool $True

    This line creates a new storage pool using the physical disks in the $PhysicalDisks variable, and then passes the new storage pool down the pipeline.
    PS C:\>New-StoragePool -FriendlyName CompanyData -StorageSubsystemFriendlyName "Storage Spaces*" -PhysicalDisks $PhysicalDisks |

    This line creates a new virtual disk on the passed in storage pool, and then passes the new virtual disk down the pipeline.
    PS C:\>New-VirtualDisk -FriendlyName UserData -Size 100GB -ProvisioningType Thin |

    This line initializes the disk that was passed in, and then passes the disk down the pipeline.
    PS C:\>Initialize-Disk -PassThru |

    This line creates a new partition on the disk that was passed in, assigns it the next available drive letter, and then passes the partition down the pipeline.
    PS C:\>New-Partition -AssignDriveLetter -UseMaximumSize |

    This line formats the partition that was passed in.
    PS C:\>Format-Volume
  description: |-
    This example creates a new storage pool, and then makes use of the pipeline to create a new virtual disk in the pool, initialize the disk, create a new partition on the disk, and then format the new partition (volume).
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    ps_cimcommon_asjob

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a New-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227967 or Get-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227966 cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: EnclosureAwareDefault
  description: |+
    Specifies the default allocation policy for virtual disks created in an enclosure-aware storage pool.
    For example, an enclosure-aware subsystem could balance each data copy of the virtual disk across multiple physical enclosures such that each enclosure contains a full data copy of the virtual disk.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: FriendlyName
  isRequired: true
  description: |+
    Specifies a friendly name for the storage pool to be created.
    The friendly name may be defined by a user and is not guaranteed to be unique.

  defaultValue: None
  position: Named
  aliases: StoragePoolFriendlyName
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InputObject
  isRequired: true
  description: |+
    Accepts an object from the pipeline as input.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="UInt64" data-throw-if-not-resolved="False" />
  name: LogicalSectorSizeDefault
  description: |+
    Specifies the default logical sector size to use for virtual disks created in this pool.
    Valid logical sector size values (in bytes) for virtual disks created by using the Storage Spaces subsystem are 512 and 4096.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: OtherUsageDescription
  description: |+
    Specifies the usage description for the storage pool.

  defaultValue: None
  position: Named
  aliases: StoragePoolOtherUsageDescription
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: PhysicalDisks
  isRequired: true
  description: |+
    Accepts one or more PhysicalDisk objects as input.
    The Physical Disk CIM objects represent the physical disks to be added to the storage pool.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ProvisioningType" data-throw-if-not-resolved="False" />
  name: ProvisioningTypeDefault
  description: |+
    Specifies the default type of provisioning for virtual disks created in this pool.
    The acceptable values for this parameter are: Unknown, Fixed or Thin.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ResiliencySettingNameDefault
  description: |+
    Specifies the default resiliency setting name for virtual disks created in this pool.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: StorageSubSystemFriendlyName
  isRequired: true
  description: |+
    Specifies the friendly name of the storage subsystem on which you want to create the storage pool.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: StorageSubSystemName
  isRequired: true
  description: |+
    Specifies the name of the storage subsystem (provided by the Storage Management) on which you want to create the storage pool.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: StorageSubSystemUniqueId
  isRequired: true
  description: |+
    Specifies the ID of the storage subsystem on which you want to create the storage pool

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: StorageSubsystemId
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Usage" data-throw-if-not-resolved="False" />
  name: Usage
  description: |+
    Specifies the usage setting for the storage pool.
    The acceptable values for this parameter are:Other, ReservedAsDeltaReplicaContainer, ReservedForComputerSystem, ReservedForLocalReplicationServices, ReservedForMigrationServices, ReservedForRemoteReplicationServices, ReservedForSparing, and Unrestricted.

  defaultValue: Other
  position: Named
  aliases: StoragePoolUsage
  parameterValueGroup: ""
uid: Storage.New-StoragePool
name: New-StoragePool
description: |-
  The **New-StoragePool** cmdlet creates a new storage pool using a group of physical disks, and a specific storage subsystem exposed by a storage provider.
metadata:
  external help file: Storage2_Cmdlets.xml
  Module Name: Storage
  online version: https://docs.microsoft.com/powershell/module/storage/new-storagepool?view=windowsserver2012-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
