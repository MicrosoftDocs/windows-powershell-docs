### YamlMime:PowershellCmdlet
summary: |-
  Imports the data from a specified .cilx or .cil file into a VAMT database.
module: VAMT
notes: ""
links:
- text: Export-VamtData
  href: ./Export-VamtData.yml
- text: Initialize-VamtData
  href: ./Initialize-VamtData.yml
syntaxes:
- Import-VamtData [-InputFile] <String> [-DbCommandTimeout <Int32>] [-DbConnectionString <String>]
- Import-VamtData [-Products] <Product[]> [-DbCommandTimeout <Int32>] [-DbConnectionString <String>]
examples:
- title: Example 1
  code: |-
    PS C:\> import-vamtdata -inputfile .\vamtdata.cilx
  description: |-
    This command imports data from the specified file.
  summary: ""
- title: Example 2
  code: |-
    PS C:\> $productinfo = get-vamtproduct
    PS C:\> $updatedproductinfo = get-vamtconfirmationid -products $productinfo
    PS C:\> import-vamtdata -products $updatedproductinfo
  description: |-
    This command gets a product object, acquires the confirmation IDs for the products, and then imports the data to the database.
    Just acquiring the CIDs does not mean that the data is in the database.
    The data must be imported as shown in this example.
  summary: ""
parameters:
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: DbCommandTimeout
  description: |+
    Indicates how long dep_nextref_vamt waits for a response from the database before timing out.
    The default value is 30 seconds.
    You can use the **DbCommandTimeout** parameter to change the timeout value.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: DbConnectionString
  description: |+
    Specifies the database that the data from the .cilx file or .cil file is imported into.
    If no database connection string is provided, dep_nextref_vamt attempts to use the database that the dep_nextref_vamt user console used on the local computer.
    If dep_nextref_vamt does not find a database, it returns an error.
    You can find the connection string in the dep_nextref_vamt UI in the Preferences dialog box.
    On the menu bar, click View, and then click Preferences to open the Volume Activation Management Tool Preferences dialog box.
    The connection string is in the Database Settings section under Current connection string.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: InputFile
  isRequired: true
  description: |+
    Specifies the name of the file that contains the data to import into the dep_nextref_vamt database.
    You cannot use the *InputFile* parameter together with the *Products* parameter.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Product" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Products
  isRequired: true
  description: |+
    Specifies the product information to import.
    If the *Products* parameter is not included, all product information in the .cilx or .cil file is imported into the dep_nextref_vamt database.
    You cannot use the *Products* parameter together with the *InputFile* parameter.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
uid: VAMT.Import-VamtData
name: Import-VamtData
description: |-
  The **Import-VamtData** cmdlet imports data from a specified .cilx or .cil file into a dep_nextref_vamt database.
  You can merge data from a previous version of dep_nextref_vamt into your database by exporting the data in the previous version to a .cil file and then importing the .cil file into the dep_nextref_vamt database.
  You can import data from a .cilx file to recover data from a backup file.
metadata:
  external help file: VAMT_Cmdlets.xml
  Module Name: VAMT
  online version: https://docs.microsoft.com/powershell/module/vamt/import-vamtdata?view=windowsserver2012-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
