### YamlMime:PowershellCmdlet
summary: |-
  Modifies one or more ODBC data source names (DSNs).
  This modifies existing DSNs in the system.
module: Wdac
notes: ""
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#MSFT_OdbcDsn" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: ""
links:
- text: Add-OdbcDsn
  href: ./Add-OdbcDsn.yml
- text: Get-OdbcDsn
  href: ./Get-OdbcDsn.yml
- text: Remove-OdbcDsn
  href: ./Remove-OdbcDsn.yml
syntaxes:
- >-
  Set-OdbcDsn [-InputObject] <CimInstance> [-AsJob] [-CimSession <CimSession>] [-PassThru]

   [-RemovePropertyValue <String>] [-SetPropertyValue <String>] [-ThrottleLimit <Int32>] [-Confirm] [-WhatIf]
- >-
  Set-OdbcDsn [-Name] <String> [-AsJob] [-CimSession <CimSession>] [-DriverName <String>] [-PassThru]

   [-Platform <String>] [-RemovePropertyValue <String>] [-SetPropertyValue <String>] [-ThrottleLimit <Int32>]

   -DsnType <String> [-Confirm] [-WhatIf]
examples:
- title: '1:'
  code: |-
    PS C:\> Set-OdbcDsn -Name "MyPayroll" -DsnType System -Platform 64-bit -SetPropertyValue "Database=Payroll"
  description: |-
    This command changes the 64-bit ODBC System DSN named "MyPayroll" to use a database named as "Payroll".
    This example is designed for SQL Server drivers:
  summary: ""
- title: '2:'
  code: |-
    PS C:\> Set-OdbcDsn MyPayroll -DsnType System -SetPropertyValue "Database=Payroll"
  description: |-
    This command is similar to the previous example, but it configures a DSN on the native platform, which is the default Platform value:
  summary: ""
- title: '3:'
  code: |-
    PS C:\> Set-OdbcDsn -Name "MyPayroll" -DsnType User -Platform 32-bit -RemovePropertyValue @("UID", "PWD") -SetPropertyValue @("Trusted_Connection=Yes", "Database=Payroll")
  description: |-
    This command changes the specified 32-bit ODBC User DSN with name equal to "MyPayroll" from using SQL Server Authentication to using Windows Authentication.
    (This example is designed for SQL Server drivers.) Also, it sets the Database key to "Payroll":
  summary: ""
- title: '4:'
  code: |-
    PS C:\> Set-OdbcDsn -Name "*Payroll*" -DsnType All -Platform All -DriverName "Microsoft Access Driver (*.mdb, *.accdb)" -SetPropertyValue 'Dbq=C:\payroll.accdb'
  description: |-
    This command changes all ODBC User DSN(s) and System DSN(s) on both platforms with name matching the wildcard "*Payroll*" and that is using a driver named "Microsoft Access Driver (*.mdb, *.accdb)" to use the database file "C:\payroll.accdb":
  summary: ""
- title: '5:'
  code: |-
    PS C:\> Get-OdbcDsn -DriverName "SQL Server*" -DsnType All -Platform All
    | Where-Object{ ($_.Attribute["Server"] -eq "oldServer") }
    | Set-OdbcDsn -SetPropertyValue "Server=newServer"
  description: |-
    This command migrates the oldServer to newServer for all User DSN(s) and System DSN(s) using a driver with name started with "SQL Server":
  summary: ""
- title: '6:'
  code: |-
    PS C:\> $sysDsn = Set-OdbcDsn "MyPayroll" -DsnType System -Platform All -SetPropertyValue "Database=Payroll" -PassThru
  description: |-
    This command is equivalent to the first example but it also stores the output object in a PowerShell variable.
    By default, this command does not return the driver object if the "PassThru" parameter is not specified:
  summary: ""
- title: '7:'
  code: |-
    PS C:\> $dsnArray = Get-OdbcDsn -DriverName "SQL Server*" | Where-Object{ ($_.Attribute["Server"] -eq "oldServer") }
    Set-OdbcDsn $dsnArray -SetPropertyValue "Server=newServer"
  description: |-
    This command migrates the oldServer to newServer for all User DSN(s) and System DSN(s) using a driver with name started with "SQL Server" and uses the PowerShell variable $dsnArray.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    ps_cimcommon_asjob

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" />
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a New-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227967 or Get-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227966 cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: DriverName
  description: |+
    This cmdlet will set the ODBC DSN using this driver only.
    You can use wildcard characters.
    The default is to set all ODBC DSNs.

  defaultValue: None
  acceptWildcardCharacters: true
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: DsnType
  isRequired: true
  description: |+
    The type of the ODBC DSN to set.
    Possible values are 'User', 'System' or 'All'.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Modifies the ODBC DSNs represented by the specified ODBC DSN objects.
    Enter a variable that contains the objects, or type a command or expression that gets the objects.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    The name of the ODBC DSN to set.
    You can use wildcard characters.

  defaultValue: None
  acceptWildcardCharacters: true
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Passes the object modified by this cmdlet through the pipeline.
    By default, this cmdlet does not pass any objects through the pipeline.

    Returns an object representing the set content.
    By default, this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Platform
  description: |+
    The platform architecture of the ODBC DSN to set.
    Possible values are '32-bit', '64-bit' or 'All'.
    The default is '32-bit' on a 32-bit process and '64-bit' on a 64-bit process.
    This is the platform architecture on the remote machine if this command is executed in a remote CIM session.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: RemovePropertyValue
  description: |+
    Specifies the property values of the ODBC DSN to be deleted.
    This is an array of keys to be removed.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: SetPropertyValue
  description: |+
    Specifies the property values of the ODBC DSN that you are modifying or adding.
    Format as an array of strings where each string is: \<key\>=\<value\>.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShellÂ® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: Wdac.Set-OdbcDsn
name: Set-OdbcDsn
description: |-
  Set-OdbcDsn configures the properties for one or more existing ODBC DSNs.
  You can specify the properties to add or modify with the parameter SetPropertyValue, and specify the properties to remove with the parameter RemovePropertyValue.

  Use Add-OdbcDsn to add a new DSN.

  For more information about ODBC, data source names, and drivers, see Microsoft Open Database Connectivity (ODBC)http://msdn.microsoft.com/en-us/library/ms710252.aspx, Data Sourceshttp://msdn.microsoft.com/en-us/library/ms711688.aspx, and Drivershttp://msdn.microsoft.com/en-us/library/ms715383.aspx.
metadata:
  external help file: WDAC_Cmdlets.xml
  Module Name: Wdac
  online version: https://docs.microsoft.com/powershell/module/wdac/set-odbcdsn?view=windowsserver2012-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
