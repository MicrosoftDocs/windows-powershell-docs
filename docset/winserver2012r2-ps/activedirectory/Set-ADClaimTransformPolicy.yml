### YamlMime:PowershellCmdlet
summary: |-
  Sets the properties of a claims transformation policy in Active Directory.
module: ActiveDirectory
notes: |-
  * This cmdlet does not work with an Active Directory snapshot.
  * This cmdlet does not work with a read-only domain controller.
inputs:
- name: <xref href="None or Microsoft.ActiveDirectory.Management.ADClaimTransformPolicy" data-throw-if-not-resolved="False" />
  description: |-
    A claim transform policy object is received by the **Identity** parameter.

    A claim transform policy object that was retrieved by using the **Get-ADClaimTransformPolicy** cmdlet and then modified is received by the **Instance** parameter.
outputs:
- name: <xref href="None or Microsoft.ActiveDirectory.Management.ADClaimTransformPolicy" data-throw-if-not-resolved="False" />
  description: |-
    Returns the modified claim transform policy object when the **PassThru** parameter is specified.
    By default, this cmdlet does not generate any output.
links:
- text: Get-ADClaimTransformPolicy
  href: ./Get-ADClaimTransformPolicy.yml
- text: New-ADClaimTransformPolicy
  href: ./New-ADClaimTransformPolicy.yml
- text: Remove-ADClaimTransformPolicy
  href: ./Remove-ADClaimTransformPolicy.yml
- text: AD DS Administration Cmdlets in Windows PowerShell
  href: ./index.yml
syntaxes:
- >-
  Set-ADClaimTransformPolicy [-WhatIf] [-Confirm] [-Add <Hashtable>] -AllowAllExcept <ADClaimType[]>

   [-AuthType <ADAuthType>] [-Clear <String[]>] [-Credential <PSCredential>] [-Description <String>]

   [-Identity] <ADClaimTransformPolicy> [-PassThru] [-ProtectedFromAccidentalDeletion <Boolean>]

   [-Remove <Hashtable>] [-Replace <Hashtable>] [-Server <String>] [<CommonParameters>]
- >-
  Set-ADClaimTransformPolicy [-WhatIf] [-Confirm] [-Add <Hashtable>] [-AllowAll] [-AuthType <ADAuthType>]

   [-Clear <String[]>] [-Credential <PSCredential>] [-Description <String>] [-Identity] <ADClaimTransformPolicy>

   [-PassThru] [-ProtectedFromAccidentalDeletion <Boolean>] [-Remove <Hashtable>] [-Replace <Hashtable>]

   [-Server <String>] [<CommonParameters>]
- >-
  Set-ADClaimTransformPolicy [-WhatIf] [-Confirm] [-Add <Hashtable>] [-AuthType <ADAuthType>] [-Clear <String[]>]

   [-Credential <PSCredential>] [-DenyAll] [-Description <String>] [-Identity] <ADClaimTransformPolicy>

   [-PassThru] [-ProtectedFromAccidentalDeletion <Boolean>] [-Remove <Hashtable>] [-Replace <Hashtable>]

   [-Server <String>] [<CommonParameters>]
- >-
  Set-ADClaimTransformPolicy [-WhatIf] [-Confirm] [-Add <Hashtable>] [-AuthType <ADAuthType>] [-Clear <String[]>]

   [-Credential <PSCredential>] -DenyAllExcept <ADClaimType[]> [-Description <String>]

   [-Identity] <ADClaimTransformPolicy> [-PassThru] [-ProtectedFromAccidentalDeletion <Boolean>]

   [-Remove <Hashtable>] [-Replace <Hashtable>] [-Server <String>] [<CommonParameters>]
- >-
  Set-ADClaimTransformPolicy [-WhatIf] [-Confirm] [-Add <Hashtable>] [-AuthType <ADAuthType>] [-Clear <String[]>]

   [-Credential <PSCredential>] [-Description <String>] [-Identity] <ADClaimTransformPolicy> [-PassThru]

   [-ProtectedFromAccidentalDeletion <Boolean>] [-Remove <Hashtable>] [-Replace <Hashtable>] [-Rule <String>]

   [-Server <String>] [<CommonParameters>]
- >-
  Set-ADClaimTransformPolicy [-WhatIf] [-Confirm] [-AuthType <ADAuthType>] [-Credential <PSCredential>]

   -Instance <ADClaimTransformPolicy> [-PassThru] [-Server <String>] [<CommonParameters>]
examples:
- title: 'Example 1: Set the transformation rule on a specified claims transformation policy'
  code: |-
    PS C:\>Set-ADClaimTransformPolicy -Identity DenyAllPolicy -DenyAll
  description: |-
    This command sets the transformation rule on the claims transformation policy named DenyAllPolicy to deny all claims, both those that are sent as well as those that are received.
  summary: ""
- title: 'Example 2: Set the transformation rule on a specified claims transformation policy with exceptions'
  code: |-
    PS C:\>Set-ADClaimTransformPolicy -Identity AllowAllExceptCompanyAndDepartmentPolicy -AllowAllExcept Company,Department
  description: |-
    This command sets the transformation rule on the claims transformation policy named AllowAllExceptCompanyAndDepartmentPolicy to allow all claims to be sent or received except for the claims Company and Department.
  summary: ""
- title: 'Example 3: Set the transformation rule on an existing claims transformation policy'
  code: |-
    PS C:\>Set-ADClaimTransformPolicy -Identity HumanResourcesToHrPolicy -Rule 'C1:[Type=="ad://ext/Department:88ce6e1cc00e9524", Value=="Human Resources", ValueType=="string"] => issue(Type=C1.Type, Value="HR", ValueType=C1.ValueType);'
  description: |-
    This command sets the transformation rule on the claims transformation policy named HumanResourcesToHrPolicy to transform the value Human Resources to HR in the claim ad://ext/Department:88ce6e1cc00e9524.
  summary: ""
- title: 'Example 4: Set the transformation rule on an claims transformation policy specified in a file'
  code: |-
    PS C:\>$Rule = Get-Content -Path C:\rule.txt
    PS C:\> Set-ADClaimTransformPolicy MyRule -Rule $Rule
  description: |-
    This command sets the transformation rule on the claims transformation policy named MyRule with the rule specified in C:\rule.txt.
  summary: ""
parameters:
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: Add
  description: |+
    Specifies values to add to an object property.
    Use this parameter to add one or more values to a property that cannot be modified using a cmdlet parameter.
    To modify an object property, you must use the Lightweight Directory Access Protocol (LDAP) display name.
    You can specify multiple values to a property by specifying a comma-separated list of values and more than one property by separating them using a semicolon.
    The format for this parameter is:

    `-Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}`

    When you use the **Add**, **Remove**, **Replace**, and **Clear** parameters together, the operations are performed in the following order:

    - **Remove**
    - **Add**
    - **Replace**
    - **Clear**

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AllowAll
  isRequired: true
  description: |+
    Indicates whether the policy sets a claims transformation rule that allows all claims to be sent or received.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: "true"
- type: <xref href="ADClaimType" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: AllowAllExcept
  isRequired: true
  description: |+
    Specifies an array of claim types.
    When this parameter is specified, the policy sets a claims transformation rule that allows all claims to be sent or received except for the specified claim types.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ADAuthType" data-throw-if-not-resolved="False" />
  name: AuthType
  description: |+
    Specifies the authentication method to use.
    The acceptable values for this parameter are:

    - Negotiate or 0
    - Basic or 1

    The default authentication method is Negotiate.

    A Secure Sockets Layer (SSL) connection is required for the Basic authentication method.

  defaultValue: Microsoft.ActiveDirectory.Management.AuthType.Negotiate
  position: Named
  aliases: ""
  parameterValueGroup: Negotiate, Basic
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Clear
  description: |+
    Specifies an array of object properties that are cleared in the directory.
    Use this parameter to clear one or more values of a property that cannot be modified using a cmdlet parameter.
    To modify an object property, you must use the LDAP display name.
    You can modify more than one property by specifying a comma-separated list.
    The format for this parameter is:

    -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

    When you use the **Add**, **Remove**, **Replace**, and **Clear** parameters together, the operations are performed in the following order:

    - **Remove**
    - **Add**
    - **Replace**
    - **Clear**

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="PSCredential" data-throw-if-not-resolved="False" />
  name: Credential
  description: |+
    Specifies a user account that has permission to perform this action.
    The default is the current user.

    Type a user name, such as User01" or Domain01\User01, or enter a **PSCredential** object, such as one generated by the Get-Credentialhttp://go.microsoft.com/fwlink/?LinkID=293936 cmdlet.
    If you type a user name, you are prompted for a password.

    This parameter is not supported by any providers installed with Windows PowerShell.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: DenyAll
  isRequired: true
  description: |+
    Indicates that the policy sets a claims transformation rule that denies all claims to be sent or received.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: "true"
- type: <xref href="ADClaimType" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: DenyAllExcept
  isRequired: true
  description: |+
    Specifies an array of claim types.
    When this parameter is specified, the claims transformation policy sets a claims transformation rule that denies all claims to be sent or received except for the specified claim types.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Description
  description: |+
    Specifies a description of the object.
    This parameter sets the value of the **Description** property for the object.
    The LDAP display name (**ldapDisplayName**) for this property is description.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ADClaimTransformPolicy" data-throw-if-not-resolved="False" />
  name: Identity
  isRequired: true
  description: |+
    Specifies one of the following as valid identities for the ADClaimTransformPolicy object:

    - A distinguished name
    - A GUID (objectGUID)

    The cmdlet searches the default naming context or partition to find the object.
    If two or more objects are found, the cmdlet returns a non-terminating error.

    This parameter can also get this object through the pipeline or you can set this parameter to an object instance.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ADClaimTransformPolicy" data-throw-if-not-resolved="False" />
  name: Instance
  isRequired: true
  description: |+
    Specifies an instance of an Active Directory object to use as a template for a new claims transformation policy object.

    You can use an instance of an existing claims transformation policy object as a template or you can construct a new claims transformation policy object by using the Windows PowerShell command line or by using a script.

    Method 1: Use an existing claims transformation policy object as a template for a new object.
    To retrieve an instance of an existing claims transformation policy object, use a cmdlet such as Get-ADClaimTransformPolicy.
    Then provide this object to the Instance parameter of the New-ADClaimTransformPolicy cmdlet to create a new claims transformation policy object.
    You can override property values of the new object by setting the appropriate parameters.

    Method 2: Create a new **ADClaimTransformPolicy** and set the property values by using the Windows PowerShell command line interface.
    Then pass this object to the Instance parameter of the **New-ADClaimTransformPolicy** cmdlet to create the new Active Directory object.

    Note: Specified attributes are not validated, so attempting to set attributes that do not exist or cannot be set will raise an error.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns an object representing the item with which you are working.
    By default, this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: ProtectedFromAccidentalDeletion
  description: |+
    Specifies whether to prevent the object from being deleted.
    When this property is set to true, you cannot delete the corresponding object without changing the value of the property.
    The acceptable values for this parameter are:

    - $False or 0
    - $True or 1

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: Remove
  description: |+
    Specifies that the cmdlet remove values of an object property.
    Use this parameter to remove one or more values of a property that cannot be modified using a cmdlet parameter.
    To remove an object property, you must use the LDAP display name.
    You can remove more than one property by specifying a semicolon-separated list.
    The format for this parameter is:

    `-Remove @{Attribute1LDAPDisplayName=value\[\];   Attribute2LDAPDisplayName=value\[\]}`

    When you use the **Add**, **Remove**, **Replace**, and **Clear** parameters together, the parameters are applied in the following sequence:

    - **Remove**
    - **Add**
    - **Replace**
    - **Clear**

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: Replace
  description: |+
    Specifies values for an object property that will replace the current values.
    Use this parameter to replace one or more values of a property that cannot be modified using a cmdlet parameter.
    To modify an object property, you must use the LDAP display name.
    You can modify more than one property by specifying a comma-separated list.
    The format for this parameter is

    `-Replace @{Attribute1LDAPDisplayName=value\[\],   Attribute2LDAPDisplayName=value\[\]}`

    When you use the **Add**, **Remove**, **Replace**, and **Clear** parameters together, the operations are performed in the following order:

    - **Remove**
    - **Add**
    - **Replace**
    - **Clear**

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Rule
  description: |+
    Specifies the claims transformation rule.
    To specify the rule, you can either type the rule in a text file, and then pass the file to the cmdlet (recommended), or type the rule inline.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Server
  description: |+
    Specifies the Active Directory Domain Services instance to connect to, by providing one of the following values for a corresponding domain name or directory server.
    The service may be any of the following:  Active Directory Lightweight Domain Services, Active Directory Domain Services or Active Directory snapshot instance.

    Specify the Active Directory Domain Services instance in one of the following ways:  

     Domain name values:

    - Fully qualified domain name
    - NetBIOS name

     Directory server values: 

    - Fully qualified directory server name
    - NetBIOS name
    - Fully qualified directory server name and port

    The default value for this parameter is determined by one of the following methods in the order that they are listed:

    - By using the **Server** value from objects passed through the pipeline
    - By using the server information associated with the Active Directory Domain ServicesWindows PowerShell provider drive, when the cmdlet runs in that drive
    - By using the domain of the computer running Windows PowerShell

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: ActiveDirectory.Set-ADClaimTransformPolicy
name: Set-ADClaimTransformPolicy
description: |-
  The **Set-ADClaimTransformPolicy** cmdlet can be used to set the properties of a claims transformation policy in Active Directory.
  A claims transformation policy object contains a set of rules authored in the transformation rule language.
metadata:
  external help file: Microsoft.ActiveDirectory.Management.dll-Help.xml
  Module Name: ActiveDirectory
  ms.date: 10/30/2017
  online version: https://docs.microsoft.com/powershell/module/activedirectory/set-adclaimtransformpolicy?view=windowsserver2012r2-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Set-ADClaimTransformPolicy
