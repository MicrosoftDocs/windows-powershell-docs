### YamlMime:PowershellCmdlet
summary: |-
  Excludes or includes existing results of a Best Practices Analyzer (BPA) scan to display only the specified scan results.
module: BestPractices
notes: ""
inputs:
- name: <xref href="System.Collections.Generic.List<Microsoft.BestPractices.CoreInterface.Result>" data-throw-if-not-resolved="False" />
  description: |-
    The input object specified by the **Results** parameter.
outputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Where-Object
  href: https://go.microsoft.com/fwlink/p/?LinkID=113423
- text: Get-BpaModel
  href: ./Get-BpaModel.yml
- text: Get-BpaResult
  href: ./Get-BpaResult.yml
- text: Invoke-BpaModel
  href: ./Invoke-BpaModel.yml
syntaxes:
- >-
  Set-BpaResult [[-Exclude] <Boolean>]

   [-Results] <System.Collections.Generic.List`1[Microsoft.BestPractices.CoreInterface.Result]>

   [[-RepositoryPath] <String>] [<CommonParameters>]
examples:
- title: EXAMPLE 1
  code: |-
    PS C:\>Get-BPAResult -ModelId ModelId1 | Where-Object -FilterScript { $_.Category -Eq "Performance" } | Set-BPAResult -ModelId ModelId1 -Exclude $true
  description: |-
    This example, to the left of the first pipe character (`|`), uses the Get-BpaResult cmdlet to retrieve Best Practices Analyzer scan results for the model ID represented by ModelId1.
    The second section of the cmdlet filters the results of the Get-BpaResult cmdlet to get only those scan results for which the category name is equal to Performance.
    The final section of the example, following the second pipe character, excludes the Performance results filtered by the previous section of the example.
  summary: ""
- title: EXAMPLE 2
  code: |-
    The variable $rcPolicy is created to store the filtered results of the Get-BpaResult cmdlet; this variable can be used in subsequent cmdlets to represent those results.
    PS C:\>$rcPolicy = Get-BPAResult -ModelId ModelId1 | Where-Object -FilterScript { $_.Category -Eq "Policy" }

    The second line of the example uses this cmdlet to exclude the set of results stored in the $rcPolicy variable, for the specified model ID. In this cmdlet, the **Results** parameter is added because the administrator wants to exclude a specific subset of scan results for that model, and has created the variable $rcPolicy to represent that subset of results.
    PS C:\>Set-BPAResult -ModelId ModelId1 -Exclude $true -Results $rcPolicy
  description: |-
    This example, to the left of the pipe character (`|`), instructs the Get-BpaResult cmdlet to retrieve Best Practices Analyzer scan results for the model represented by ModelId1 The second section of the example, after the pipe character, filters the results of the Get-BpaResult cmdlet to return only those scan results for which the category name is equal to (note the Eq option) Policy.
  summary: ""
parameters:
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: Exclude
  description: "Removes any BPA scan results that are specified by a filter added to this cmdlet.\r\nThe Exclude action applies to all results returned by this cmdlet.\r\nTo exclude results by using this parameter, add the value `$true` following the parameter, as shown: \r\n                         \r\n - `-Exclude $true`\r\n\r\n"
  defaultValue: None
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: RepositoryPath
  description: "Specifies the location where the report should be stored. \r\n                         \r\nThe Invoke-BpaModel cmdlet provides an option to store the results either in the default reports repository location referred by ReportsRoot registry key or in a custom location supplied as input to this parameter.\r\n\r\n"
  defaultValue: None
  position: "3"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Collections.Generic.List`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="Microsoft.BestPractices.CoreInterface.Result" data-throw-if-not-resolved="False" /><span>]</span>
  name: Results
  isRequired: true
  description: "Specifies the result collection to be updated in the result file returned by this cmdlet.\r\nThis parameter is typically used to specify a filtered subset of scan results that has already been stored in a variable; the variable name is provided as the valid value for this parameter. \r\n                         \r\nThis is the result collection which needs to be updated in the result file. \r\nExample: if a variable named `$allPerformance` is created to store all the Performance category results for a BPA scan of all roles on a computer, and to exclude those Performance results from the complete collection of scan results, add the following parameter to this cmdlet. \r\n                         \r\n - `-Results $allPerformance`\r\n\r\n"
  defaultValue: None
  pipelineInput: true
  position: "2"
  aliases: ""
  parameterValueGroup: ""
uid: BestPractices.Set-BpaResult
name: Set-BpaResult
description: |-
  The **Set-BPAResult** cmdlet excludes or includes existing results of a Best Practices Analyzer (BPA) scan to display only the specified scan results.
  The action specified in this cmdlet (such as **Exclude**) determines how the existing results of a BPA scan are updated.
  This cmdlet is typically applied after using the Get-BpaResult cmdlet to return a collection of scan results.
  Filters can be applied to results returned by the Get-BpaResult cmdlet, and then pipe the filtered collection of results to this cmdlet, specifying either to include or exclude filtered scan results.

  This will update the results in the result file with the specified result collection with the action specified.
  The administrator would generally need to call the Get-BpaResult cmdlet prior to this to get the result collection, apply some filters and pipe the collection to this cmdlet specifying the action (exclusion or inclusion).

  If this cmdlet is canceled before the results are written to a file, then the operation is canceled and the results file is not modified.
  If cancellation occurs after the results file has been modified, then the actions of the cmdlet are carried out, and the cmdlet cannot be canceled.
metadata:
  external help file: Microsoft.BestPractices.Cmdlets.dll-Help.xml
  Module Name: BestPractices
  ms.date: 10/29/2017
  online version: https://docs.microsoft.com/powershell/module/bestpractices/set-bparesult?view=windowsserver2012r2-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Set-BpaResult
