### YamlMime:PowershellCmdlet
summary: |-
  Resumes a Background Intelligent Transfer Service (BITS) transfer job.
module: BitsTransfer
notes: |-
  * You can cancel a transfer job that is running in synchronous mode (foreground priority) by pressing CTRL+C.
inputs:
- name: <xref href="Microsoft.BackgroundIntelligentTransfer.Management.BitsJob" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: |-
    This cmdlet accepts one or more BitsJob objects as input that populates the BitsJob parameter.
outputs:
- name: <xref href="Microsoft.BackgroundIntelligentTransfer.Management.BitsJob" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: |-
    When called with the **Asynchronous** parameter, this cmdlet sends the BitsJob object that is associated with the resumed BITS transfer job as output.
    Otherwise, no output is generated.
links:
- text: Add-BitsFile
  href: ./Add-BitsFile.yml
- text: Complete-BitsTransfer
  href: ./Complete-BitsTransfer.yml
- text: Get-BitsTransfer
  href: ./Get-BitsTransfer.yml
- text: Remove-BitsTransfer
  href: ./Remove-BitsTransfer.yml
- text: Set-BitsTransfer
  href: ./Set-BitsTransfer.yml
- text: Start-BitsTransfer
  href: ./Start-BitsTransfer.yml
- text: Suspend-BitsTransfer
  href: ./Suspend-BitsTransfer.yml
syntaxes:
- Resume-BitsTransfer [-BitsJob] <BitsJob[]> [-Asynchronous] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: EXAMPLE 1
  code: |-
    PS C:\>Get-BitsTransfer | Resume-BitsTransfer
  description: |-
    This command resumes all the BITS transfer jobs that are owned by the current user.

    The command prompt returns after the jobs are complete or after the jobs enter an error state.
    The output of the **Get-BitsTransfer** cmdlet is a set of BitsJob objects.
    This output is piped to the **Resume-BitsTransfer** cmdlet.
    If any of the BITS transfer jobs are already active, they will continue to run.
  summary: ""
- title: EXAMPLE 2
  code: |-
    PS C:\>$b = Start-BitsTransfer -DisplayName "MyJob" -Suspended
    PS C:\>Add-BitsTransfer -BitsJob $b -ClientFileName C:\myFile -ServerFileName http://www.mysite.com/file1
    PS C:\>Resume-BitsTransfer -BitsJob $b -Asynchronous
  description: |-
    This command resumes a new BITS transfer job that was initially suspended, and it returns the command prompt immediately.

    The first command creates a new BitsJob object in a suspended state and then stores it in the $b variable.

    The second command adds a file to the transfer queue of the new BitsJob object that is stored in the $b variable.

    The third command uses the **BitsJob** parameter to pass the BitsJob object that is stored in the $b parameter to the **Resume-BitsTransfer** cmdlet.
    This command starts the BITS transfer job.
  summary: ""
- title: EXAMPLE 3
  code: |-
    PS C:\>Get-BitsTransfer -Name testjob1 | Resume-BitsTransfer
  description: |-
    This command resumes the BITS transfer that is identified by the specified display name.

    The command prompt returns after the job is complete or after the job enters an error state.
    The output of the **Get-BitsTransfer** cmdlet is a BitsJob object.
    This output is piped to the **Resume-BitsTransfer** cmdlet.
    If the BITS transfer job is already active, it will continue to run.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Asynchronous
  description: |+
    Allows the BITS transfer job to be processed in the background.
    The command prompt reappears immediately after the BITS transfer job is resumed.
    The returned BitsJob object can be used to monitor status and progress.

  defaultValue: None
  position: Named
  aliases: as
  parameterValueGroup: ""
- type: <xref href="BitsJob" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: BitsJob
  isRequired: true
  description: |+
    Specifies the BITS transfer jobs to resume.
    You can pipe a value to this parameter from other cmdlets that return BitsJob objects, such as **Get-BitsTransfer**.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: b
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: BitsTransfer.Resume-BitsTransfer
name: Resume-BitsTransfer
description: |-
  The **Resume-BitsTransfer** cmdlet resumes one or more suspended BITS transfer jobs.
  If the BITS transfer is already in process, the cmdlet does nothing.
  You can view the current state of a transfer job by using the **Get-BitsTransfer** cmdlet.

  Important: By default, the **Resume-BitsTransfer** cmdlet restarts the transfer job synchronously even if the original job was specified as an asynchronous transfer job.
  You could use this behavior to convert an asynchronous transfer job into a synchronous transfer job.
  You could do this if either of the following conditions is true:

  - The asynchronous transfer job was created outside cmdlets.

  - The asynchronous transfer job was created by using the **Start-BitsTransfer** cmdlet.

  If you want to restart the transfer job as an asynchronous transfer, use the **Asynchronous** parameter.
metadata:
  external help file: Microsoft.BackgroundIntelligentTransfer.Management.dll-Help.xml
  Module Name: BitsTransfer
  ms.date: 10/29/2017
  online version: https://docs.microsoft.com/powershell/module/bitstransfer/resume-bitstransfer?view=windowsserver2012r2-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Resume-BitsTransfer
