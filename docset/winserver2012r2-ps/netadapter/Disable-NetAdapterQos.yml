### YamlMime:PowershellCmdlet
summary: |-
  Disables quality of service (QoS) on the network adapter, specifically data center bridging (DCB).
module: NetAdapter
notes: ""
inputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/MSFT_NetAdapterQosSettingData" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.

    The input object is a list of network adapter objects, such as output from the Get-NetAdapter cmdlet.
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance# ROOT/StandardCimv2/MSFT_NetAdapterQosSettingData" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.

    The output object contains QoS capabilities and configurations on a network adapter.
    The output object is returned only when **PassThru** parameter is specified.
links:
- text: Enable-NetAdapterQos
  href: ./Enable-NetAdapterQos.yml
- text: Get-NetAdapter
  href: ./Get-NetAdapter.yml
- text: Get-NetAdapterQos
  href: ./Get-NetAdapterQos.yml
syntaxes:
- >-
  Disable-NetAdapterQos [-Name] <String[]> [-IncludeHidden] [-NoRestart] [-PassThru] [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Disable-NetAdapterQos -InterfaceDescription <String[]> [-IncludeHidden] [-NoRestart] [-PassThru]

   [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Disable-NetAdapterQos -InputObject <CimInstance[]> [-NoRestart] [-PassThru] [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: EXAMPLE 1
  code: |-
    PS C:\>Disable-NetAdapterQos -Name *
  description: |-
    This example disables QoS on all network adapters and restarts the network adapters.
  summary: ""
- title: EXAMPLE 2
  code: |-
    PS C:\>Disable-NetAdapterQos -Name "Ethernet 2"

    This is the cmdlet using wildcard characters.
    PS C:\>Disable-NetAdapterQos -Name E*2
  description: |-
    This example disables QoS on a network adapter named Ethernet 2 and restarts the network adapter.
  summary: ""
- title: EXAMPLE 3
  code: |-
    PS C:\> $netAdapterQoS1 = Get-NetAdapterQos -Name *
    PS C:\> Disable-NetAdapterQos -InputObject $netAdapterQoS1

    This is a version of the cmdlet that gets all of the network adapters that support QoS and disables QoS on all of them via the pipeline, then restarts the QoS network adapters.
    PS C:\> Get-NetAdapterQos -Name * | Disable-NetAdapterQos
  description: |-
    This example gets all of the network adapters that support QoS and disables QoS on all of them and restarts the QoS network adapters.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    ps_cimcommon_asjob

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a New-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227967 or Get-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227966 cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: IncludeHidden
  description: |+
    Specifies both visible and hidden network adapters should be included.
    By default only visible network adapters are included.
    If a wildcard character is used in identifying a network adapter and this parameter has been specified, then the wildcard string is matched against both hidden and visible network adapters.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InputObject
  isRequired: true
  description: |+
    Specifies the input to this cmdlet.
    You can use this parameter, or you can pipe the input to this cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InterfaceDescription
  isRequired: true
  description: |+
    Specifies the network adapter interface description.
    For a physical network adapter this is typically the name of the vendor of the network adapter followed by a part number and description, such as `Contoso 12345 Gigabit Network Device`.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ifDesc, InstanceID
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Name
  isRequired: true
  description: |+
    Specifies the name of the network adapter.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ifAlias, InterfaceAlias
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: NoRestart
  description: |+
    Specifies that the network adapter is not restarted as part of running this cmdlet.
    Note: Many advanced properties require restarting the network adapter before the new settings take effect.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns an object representing the item with which you are working.
    By default, this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShellÂ® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: NetAdapter.Disable-NetAdapterQos
name: Disable-NetAdapterQos
description: |-
  The **Disable-NetAdapterQos** cmdlet disables quality of service (QoS) on a network adapter.
  The QoS features, which include bandwidth allocation and priority based flow control, are specified in the IEEE data center bridging (DCB) standard.
  When QoS is disabled, the computer will not send to the network adapter any configuration for the QoS features.
  This cmdlet does not stop the network adapter from setting up configurations and utilizing the hardware QoS capabilities.

  A network adapter that supports DCB is typically known as a converged network adapter.
  It supports both storage and networking functionalities.
  In some use cases the DCB must be enabled to support the storage functionalities.
  If DCB on a network adapter is disabled from the point of view of a computer, then it may still be functioning on the network adapter.
metadata:
  external help file: MSFT_NetAdapterQos.cdxml-help.xml
  Module Name: NetAdapter
  ms.date: 10/29/2017
  online version: https://docs.microsoft.com/powershell/module/netadapter/disable-netadapterqos?view=windowsserver2012r2-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Disable-NetAdapterQos
