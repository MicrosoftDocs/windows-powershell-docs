### YamlMime:PowershellCmdlet
summary: |-
  Creates a new advanced property for the network adapter.
module: NetAdapter
notes: ""
inputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/MSFT_NetAdapterAdvancedPropertySettingData" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
links:
- text: Get-NetAdapterAdvancedProperty
  href: ./Get-NetAdapterAdvancedProperty.yml
- text: Remove-NetAdapterAdvancedProperty
  href: ./Remove-NetAdapterAdvancedProperty.yml
- text: Reset-NetAdapterAdvancedProperty
  href: ./Reset-NetAdapterAdvancedProperty.yml
- text: Set-NetAdapterAdvancedProperty
  href: ./Set-NetAdapterAdvancedProperty.yml
syntaxes:
- >-
  New-NetAdapterAdvancedProperty -RegistryKeyword <String> [-RegistryDataType <RegDataType>]

   -RegistryValue <String[]> [-NoRestart] [-IncludeHidden] [-Name] <String> [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-NetAdapterAdvancedProperty -InterfaceDescription <String> -RegistryKeyword <String>

   [-RegistryDataType <RegDataType>] -RegistryValue <String[]> [-NoRestart] [-IncludeHidden]

   [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: EXAMPLE 1
  code: |-
    PS C:\> New-NetAdapterAdvancedProperty -Name MyAdapter -RegistryKeyword "MyKeyword" -RegistryValue "1" -RegistryDataType REG_SZ
  description: |-
    This example creates a new advanced property on the network adapter named MyAdapter with the registry keyword MyKeyword of type REG_SZ with the value 1.
  summary: ""
- title: EXAMPLE 2
  code: |-
    PS C:\> New-NetAdapterAdvancedProperty -Name MyAdapter -RegistryKeyword "MyKeyword" -RegistryValue "1" -RegistryDataType REG_SZ -NoRestart
  description: |-
    This example creates a new advanced property on the network adapter named MyAdapter with the registry keyword MyKeyword of type REG_SZ with the value 1 and the network adapter is specified to not restart.
    Note: Many advanced properties require restarting the network adapter before the new settings take effect.
  summary: ""
- title: EXAMPLE 3
  code: |-
    PS C:\> $networkAdapter3 = Get-NetAdapter -Name "Ethernet 3"
    PS C:\> New-NetAdapterAdvancedProperty -InputObject $networkAdapter3 -RegistryKeyword "MyKeyword" -RegistryValue "1" -RegistryDataType REG_SZ

    This is a version of the cmdlet that creates a new advanced property on the network adapter named Ethernet 3 using wildcard characters and the pipeline. Note: Use of wildcard characters is not allowed for the network adapter identifier as part of this cmdlet, but can be used via the pipeline.
    PS C:\> Get-NetAdapter -Name "Ethernet 3" | New-NetAdapterAdvancedProperty -RegistryKeyword "MyKeyword" -RegistryValue "1" -RegistryDataType REG_SZ
  description: |-
    This example gets a network adapter and creates a new advanced property on the network adapter named Ethernet 3.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    ps_cimcommon_asjob

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a New-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227967 or Get-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227966 cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: IncludeHidden
  description: |+
    Specifies both visible and hidden network adapters should be included.
    By default only visible network adapters are included.
    If a wildcard character is used in identifying a network adapter and this parameter has been specified, then the wildcard string is matched against both hidden and visible network adapters.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: InterfaceDescription
  isRequired: true
  description: |+
    Specifies the network adapter interface description.
    For a physical network adapter this is typically the name of the vendor of the network adapter followed by a part number and description, such as `Contoso 12345 Gigabit Network Device`.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ifDesc, InstanceID
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    Specifies the name of the network adapter.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ifAlias, InterfaceAlias
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: NoRestart
  description: |+
    Specifies that the network adapter is not restarted as part of running this cmdlet.
    Note: Many advanced properties require restarting the network adapter before the new settings take effect.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="RegDataType" data-throw-if-not-resolved="False" />
  name: RegistryDataType
  description: |+
    Specifies the type of the value data to be set in the registry.
    The acceptable values for this parameter are: None, REG_SZ, REG_DWORD, REG_QWORD, and REG_MULTI_SZ.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: None, REG_SZ, REG_DWORD, REG_MULTI_SZ, REG_QWORD
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: RegistryKeyword
  isRequired: true
  description: |+
    Specifies the name of the registry keyword to be created.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: RegistryValue
  isRequired: true
  description: |+
    Specifies the value of the advanced property.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: NetAdapter.New-NetAdapterAdvancedProperty
name: New-NetAdapterAdvancedProperty
description: |-
  The **New-NetAdapterAdvancedProperty** cmdlet creates a new advanced property for the network adapter.
  The intention is that network adapter manufacturers can use this cmdlet to manage advanced properties that are not directly supported by Windows Server® 2012 and later.
  Note: This cmdlet is the cmdlet in the network adapter family that creates a registry key.
  All other cmdlets read or modify existing registry entries.
  Note: The use of wildcards in the network adapter identifier, either in the **Name** parameter or **InterfaceDescription** parameter, is not supported.
metadata:
  external help file: MSFT_NetAdapterAdvancedProperty.cmdletDefinition.cdxml-help.xml
  Module Name: NetAdapter
  ms.date: 10/29/2017
  online version: https://docs.microsoft.com/powershell/module/netadapter/new-netadapteradvancedproperty?view=windowsserver2012r2-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: New-NetAdapterAdvancedProperty
