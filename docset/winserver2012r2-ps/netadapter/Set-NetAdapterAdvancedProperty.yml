### YamlMime:PowershellCmdlet
summary: |-
  Sets the advanced properties of a network adapter.
module: NetAdapter
notes: ""
inputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/MSFT_NetAdapterAdvancedPropertySettingData" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/MSFT_NetAdapterAdvancedPropertySettingData" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
links:
- text: Get-NetAdapterAdvancedProperty
  href: ./Get-NetAdapterAdvancedProperty.yml
- text: New-NetAdapterAdvancedProperty
  href: ./New-NetAdapterAdvancedProperty.yml
- text: Remove-NetAdapterAdvancedProperty
  href: ./Remove-NetAdapterAdvancedProperty.yml
- text: Reset-NetAdapterAdvancedProperty
  href: ./Reset-NetAdapterAdvancedProperty.yml
- text: Set-NetAdapterLso
  href: ./Set-NetAdapterLso.yml
- text: Set-NetAdapterRss
  href: ./Set-NetAdapterRss.yml
syntaxes:
- >-
  Set-NetAdapterAdvancedProperty [[-Name] <String[]>] [-DisplayName <String[]>] [-RegistryKeyword <String[]>]

   [-IncludeHidden] [-AllProperties] [-DisplayValue <String>] [-RegistryValue <String[]>] [-NoRestart]

   [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [-PassThru] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  Set-NetAdapterAdvancedProperty -InterfaceDescription <String[]> [-DisplayName <String[]>]

   [-RegistryKeyword <String[]>] [-IncludeHidden] [-AllProperties] [-DisplayValue <String>]

   [-RegistryValue <String[]>] [-NoRestart] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob]

   [-PassThru] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Set-NetAdapterAdvancedProperty -InputObject <CimInstance[]> [-DisplayValue <String>]

   [-RegistryValue <String[]>] [-NoRestart] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob]

   [-PassThru] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: EXAMPLE 1
  code: |-
    PS C:\>Set-NetAdapterAdvancedProperty -Name MyAdapter -DisplayName "Flow Control" -DisplayValue "Rx and Tx Enabled"
  description: |-
    This example sets the value of the Flow Control advanced property on the network adapter named MyAdapter.
  summary: ""
- title: EXAMPLE 2
  code: |-
    PS C:\>Set-NetAdapterAdvancedProperty -Name MyAdapter -DisplayName "Flow Control" -DisplayValue "Disable"
  description: |-
    This example sets the value of the Flow Control advanced property on the network adapter named MyAdapter.
  summary: ""
- title: EXAMPLE 3
  code: |-
    PS C:\>Set-NetAdapterAdvancedProperty -Name MyAdapter -RegistryKeyword "*Flo*rol" -RegistryValue 0
  description: |-
    This example sets the value of the Flow Control advanced property on the network adapter named MyAdapter using wildcard characters in the keyword name.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AllProperties
  description: |+
    Returns all the advanced properties of the network adapter.
    If this parameter is not specified, then only advanced properties that have a DisplayName parameter are returned.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    ps_cimcommon_asjob

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a New-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227967 or Get-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227966 cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: DisplayName
  description: |+
    Specifies the display name of the advanced property.
    Note: This parameter is normally used in conjunction with the **DisplayValue** parameter.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: DispN
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: DisplayValue
  description: |+
    Specifies the new value of the advanced property named with the **DisplayName** parameter.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: IncludeHidden
  description: |+
    Specifies both visible and hidden network adapters should be included.
    By default only visible network adapters are included.
    If a wildcard character is used in identifying a network adapter and this parameter has been specified, then the wildcard string is matched against both hidden and visible network adapters.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InputObject
  isRequired: true
  description: |+
    Specifies the input to this cmdlet.
    You can use this parameter, or you can pipe the input to this cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InterfaceDescription
  isRequired: true
  description: |+
    Specifies the network adapter interface description.
    For a physical network adapter this is typically the name of the vendor of the network adapter followed by a part number and description, such as `Contoso 12345 Gigabit Network Device`.

  defaultValue: None
  position: Named
  aliases: ifDesc, InstanceID
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Name
  description: |+
    Specifies the name of the network adapter.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ifAlias, InterfaceAlias
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: NoRestart
  description: |+
    Specifies that the network adapter is not restarted as part of running this cmdlet.
    Note: Many advanced properties require restarting the network adapter before the new settings take effect.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns an object representing the item with which you are working.
    By default, this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: RegistryKeyword
  description: |+
    Specifies the name of the registry keyword to be set.
    Note: This parameter is normally used in conjuction with the **RegistryValue** parameter.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: RegKey
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: RegistryValue
  description: |+
    Specifies the value of the advanced property named in the **RegistryKeyword** parameter.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShellÂ® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: NetAdapter.Set-NetAdapterAdvancedProperty
name: Set-NetAdapterAdvancedProperty
description: |-
  The **Set-NetAdapterAdvancedProperty** cmdlet sets the advanced properties of a network adapter.
  Changes are made directly into the registry for the computer.
  Many of the common advanced properties can be controlled via a cmdlet, such as the Set-NetAdapterRss or Set-NetAdapterLso cmdlets.
metadata:
  external help file: MSFT_NetAdapterAdvancedProperty.cmdletDefinition.cdxml-help.xml
  Module Name: NetAdapter
  ms.date: 10/29/2017
  online version: https://docs.microsoft.com/powershell/module/netadapter/set-netadapteradvancedproperty?view=windowsserver2012r2-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Set-NetAdapterAdvancedProperty
