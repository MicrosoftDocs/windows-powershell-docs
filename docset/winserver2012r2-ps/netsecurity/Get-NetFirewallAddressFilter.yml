### YamlMime:PowershellCmdlet
summary: |-
  Retrieves address filter objects from the target computer.
module: NetSecurity
notes: ""
inputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetConSecRule" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetFirewallRule" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetMainModeRule" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetAddressFilter" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
links:
- text: Format-Table
  href: https://go.microsoft.com/fwlink/p/?LinkId=113303
- text: Where-Object
  href: https://go.microsoft.com/fwlink/p/?LinkId=113423
- text: Copy-NetIPsecRule
  href: ./Copy-NetIPsecRule.yml
- text: Get-NetFirewallRule
  href: ./Get-NetFirewallRule.yml
- text: Get-NetIPsecMainModeRule
  href: ./Get-NetIPsecMainModeRule.yml
- text: Get-NetIPsecRule
  href: ./Get-NetIPsecRule.yml
- text: New-NetFirewallRule
  href: ./New-NetFirewallRule.yml
- text: New-NetIPsecMainModeRule
  href: ./New-NetIPsecMainModeRule.yml
- text: New-NetIPSecRule
  href: ./New-NetIPsecRule.yml
- text: Open-NetGPO
  href: ./Open-NetGPO.yml
- text: Save-NetGPO
  href: ./Save-NetGPO.yml
- text: Set-NetFirewallAddressFilter
  href: ./Set-NetFirewallAddressFilter.yml
- text: Set-NetFirewallRule
  href: ./Set-NetFirewallRule.yml
- text: Set-NetIPsecMainModeRule
  href: ./Set-NetIPsecMainModeRule.yml
- text: Set-NetIPSecRule
  href: ./Set-NetIPsecRule.yml
- text: New-GPO
  href: ../grouppolicy/New-GPO.yml
syntaxes:
- >-
  Get-NetFirewallAddressFilter [-All] [-PolicyStore <String>] [-GPOSession <String>] [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [<CommonParameters>]
- >-
  Get-NetFirewallAddressFilter -AssociatedNetFirewallRule <CimInstance> [-PolicyStore <String>]

   [-GPOSession <String>] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [<CommonParameters>]
- >-
  Get-NetFirewallAddressFilter -AssociatedNetIPsecRule <CimInstance> [-PolicyStore <String>]

   [-GPOSession <String>] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [<CommonParameters>]
- >-
  Get-NetFirewallAddressFilter -AssociatedNetIPsecMainModeRule <CimInstance> [-PolicyStore <String>]

   [-GPOSession <String>] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [<CommonParameters>]
examples:
- title: EXAMPLE 1
  code: |-
    PS C:\>Get-NetIPsecRule -PolicyStore ActiveStore


    This cmdlet shows the same information in a dynamically-sized, formatted table.
    PS C:\>Get-NetIPsecRule -PolicyStore ActiveStore | Format-Table
  description: |-
    This example retrieves the addresses associated with all the rules in the active store.
    Note: Running this cmdlet without specifying the policy store retrieves the persistent store.
  summary: ""
- title: EXAMPLE 2
  code: |-
    PS C:\>Get-NetFirewallRule -DisplayGroup "Core Networking" | Get-NetFirewallAddressFilter | Where-Object -FilterScript { $_.RemoteAddress -Eq "LocalSubnet6" }
  description: |-
    This example gets the address configurations associated with a particular IPsec rule.
  summary: ""
- title: EXAMPLE 3
  code: |-
    PS C:\>Get-NetFirewallRule -DisplayGroup "Core Networking" | Get-NetFirewallAddressFilter | Where-Object -FilterScript { $_.RemoteAddress -Eq "LocalSubnet6" } | Set-NetFirewallAddressFilter -RemoteAddress LocalSubnet4


    This is an alternate method with this cmdlet.
    PS C:\>Get-NetFirewallRule -DisplayGroup "Core Networking" | Get-NetFirewallAddressFilter | Where-Object -FilterScript { $_.RemoteAddress -Eq "LocalSubnet6" } | Get-NetFirewallRule | Set-NetFirewallRule -RemoteAddress LocalSubnet4
  description: |-
    This example gets the filter objects associated with the firewall rules with a particular remote, second, endpoint belonging to the Core Networking group and modifies the second endpoint of those rules.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: All
  description: |+
    Indicates that all of the address filters within the specified policy store are retrieved.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    ps_cimcommon_asjob

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: AssociatedNetFirewallRule
  isRequired: true
  description: "Gets the address filter object associated with the specified firewall rule to be retrieved. \r\n                         \r\nThis parameter represents a firewall rule, which defines how traffic is filtered by the firewall.\r\nSee the New-NetFirewallRule cmdlet for more information.\r\n\r\n"
  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: AssociatedNetIPsecMainModeRule
  isRequired: true
  description: "Gets the address filter objects that are associated, via the pipeline, with the input main mode rule to be retrieved. \r\n                         \r\nA NetIPsecMainModeRule object represents a main mode rule, which alters the behavior of main mode authentications.\r\nMain mode negotiation establishes a secure channel between two computers by determining a set of cryptographic protection suites, exchanging keying material to establish a shared secret key, and authenticating computer and user identities.\r\nSee the Get-NetIPsecMainModeRule cmdlet for more information.\r\n\r\n"
  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: AssociatedNetIPsecRule
  isRequired: true
  description: "Gets the address filter objects that are associated, via the pipeline, with the input IPsec rule to be retrieved. \r\n                         \r\nA NetIPsecRule object represents an IPsec rule, which determines IPsec behavior.\r\nAn IPsec rule can be associated with Phase1AuthSet, Phase2AuthSet, and NetIPsecQuickMode cryptographic sets.\r\nSee the New-NetIPsecMainModeRule cmdlet for more information.\r\n\r\n"
  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a New-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227967 or Get-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227966 cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: GPOSession
  description: "Specifies the network GPO from which to retrieve the rules to be retrieved. \r\n                         \r\nThis parameter is used in the same way as the **PolicyStore** parameter.\r\nWhen modifying GPOs in Windows PowerShellÂ®, each change to a GPO requires the entire GPO to be loaded, modified, and saved back.\r\nOn a busy Domain Controller (DC), this can be a slow and resource-heavy operation.\r\nA GPO Session loads a domain GPO onto the local computer and makes all changes in a batch, before saving it back.\r\nThis reduces the load on the DC and speeds up the Windows PowerShell cmdlets.\r\nTo load a GPO Session, use the Open-NetGPO cmdlet.\r\nTo save a GPO Session, use the Save-NetGPO cmdlet.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: PolicyStore
  description: "Specifies the policy store from which to retrieve the rules to be retrieved. \r\n                         \r\nA policy store is a container for firewall and IPsec policy. \r\nThe acceptable values for this parameter are:\r\n                         \r\n -- PersistentStore: Sometimes called static rules, this store contains the persistent policy for the local computer.\r\nThis policy is not from GPOs, and has been created manually or programmatically (during application installation) on the computer.\r\nRules created in this store are attached to the ActiveStore and activated on the computer immediately. \r\n                         \r\n -- ActiveStore: This store contains the currently active policy, which is the sum of all policy stores that apply to the computer.\r\nThis is the resultant set of policy (RSOP) for the local computer (the sum of all GPOs that apply to the computer), and the local stores (the PersistentStore, the static Windows service hardening (WSH), and the configurable WSH). \r\n                         \r\n ---- GPOs are also policy stores.\r\nComputer GPOs can be specified as follows. \r\n                         \r\n ------ `-PolicyStore hostname`. \r\n                         \r\n ---- Active Directory GPOs can be specified as follows. \r\n                         \r\n ------ `-PolicyStore domain.fqdn.com\\GPO_Friendly_Namedomain.fqdn.comGPO_Friendly_Name`. \r\n                         \r\n ------ Such as the following. \r\n                         \r\n -------- `-PolicyStore localhost`\r\n                         \r\n -------- `-PolicyStore corp.contoso.com\\FirewallPolicy`\r\n                         \r\n ---- Active Directory GPOs can be created using the New-GPO cmdlet or the Group Policy Management Console.\r\n                         \r\n -- RSOP: This read-only store contains the sum of all GPOs applied to the local computer. \r\n                         \r\n -- SystemDefaults: This read-only store contains the default state of firewall rules that ship with Windows ServerÂ® 2012. \r\n                         \r\n -- StaticServiceStore: This read-only store contains all the service restrictions that ship with Windows.\r\nOptional and product-dependent features are considered part of Windows Server 2012 for the purposes of WFAS. \r\n                         \r\n -- ConfigurableServiceStore: This read-write store contains all the service restrictions that are added for third-party services.\r\nIn addition, network isolation rules that are created for Windows Store application containers will appear in this policy store. \r\n                         \r\nThe default value is PersistentStore. \r\nNote: The Set-NetFirewallRule cmdlet cannot be used to add an object to a policy store.\r\nAn object can only be added to a policy store at creation time with the Copy-NetFirewallRule cmdlet or with the New-NetFirewallRule cmdlet.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShellÂ® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: NetSecurity.Get-NetFirewallAddressFilter
name: Get-NetFirewallAddressFilter
description: "The **Get-NetFirewallAddressFilter** cmdlet returns address filter objects associated with the input rules.\r\n\r\nAddress filter objects represent the local and remote addresses associated with the input rules.\r\nThe **LocalAddress** and **RemoteAddress** parameters of a single rule are represented in a separate NetFirewallAddressFilter object.\r\nThe filter-to-rule relationship is always one-to-one and is managed automatically.\r\nRule parameters associated with filters can only be queried using filter objects.\r\n\r\nThis cmdlet retrieves the addresses associated with firewall, IPsec, and IPsec main-mode rules.\r\nThis allows for rule querying based on address fields using the **LocalAddress** or **RemoteAddress** parameters; this cmdlet returns filter objects that may be further queried with the Where-Objecthttp://go.microsoft.com/fwlink/p/?LinkId=113423 cmdlet.\r\nThe resultant filters are passed to the Get-NetFirewallRule, Get-NetIPsecRule, or Get-NetIPsecMainModeRule cmdlet to return the rules queried by address.\r\n\r\nTo modify rule address conditions, two methods can be used starting with the address filters returned by this cmdlet and optional additional querying. \r\n                       \r\n -- The address filter objects can be piped into the Get-NetFirewallRule, Get-NetIPsecRule, or Get-NetIPsecMainModeRule cmdlet, which returns the rule objects associated with the filters.\r\nThese rules are then piped into the Set-NetFirewallRule, Set-NetIPsecRule, or Set-NetIPsecMainModeRule cmdlet where the address properties can be configured. \r\n                       \r\n -- Alternatively, piping the address filter objects directly into the Set-NetFirewallAddressFilter cmdlet allows the LocalAddress and RemoteAddress parameters of the rules to be specified."
metadata:
  external help file: NetFirewallAddressFilter.cmdletDefinition.cdxml-help.xml
  Module Name: NetSecurity
  ms.date: 10/30/2017
  online version: https://docs.microsoft.com/powershell/module/netsecurity/get-netfirewalladdressfilter?view=windowsserver2012r2-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Get-NetFirewallAddressFilter
