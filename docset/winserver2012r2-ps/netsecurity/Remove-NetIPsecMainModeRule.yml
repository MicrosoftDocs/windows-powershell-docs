### YamlMime:PowershellCmdlet
summary: |-
  Deletes any main mode rules that match the specified criteria.
module: NetSecurity
notes: ""
inputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\AssociatedNetIPsecMainModeCryptoSet" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetAddressFilter" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetFirewallProfile" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetIKEP1AuthSet" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetMainModeRule" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
outputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Disable-NetIPsecMainModeRule
  href: ./Disable-NetIPsecMainModeRule.yml
- text: Get-NetFirewallAddressFilter
  href: ./Get-NetFirewallAddressFilter.yml
- text: Get-NetFirewallProfile
  href: ./Get-NetFirewallProfile.yml
- text: Get-NetIPsecMainModeCryptoSet
  href: ./Get-NetIPsecMainModeCryptoSet.yml
- text: Get-NetIPsecPhase1AuthSet
  href: ./Get-NetIPsecPhase1AuthSet.yml
- text: Get-NetIPsecMainModeRule
  href: ./Get-NetIPsecMainModeRule.yml
- text: New-NetIPsecMainModeRule
  href: ./New-NetIPsecMainModeRule.yml
- text: Open-NetGPO
  href: ./Open-NetGPO.yml
- text: Save-NetGPO
  href: ./Save-NetGPO.yml
- text: Set-NetIPsecMainModeRule
  href: ./Set-NetIPsecMainModeRule.yml
- text: New-NetIPsecAuthProposal
  href: ./New-NetIPsecAuthProposal.yml
- text: New-GPO
  href: ../grouppolicy/New-GPO.yml
syntaxes:
- >-
  Remove-NetIPsecMainModeRule [-All] [-PolicyStore <String>] [-GPOSession <String>] [-TracePolicyStore]

   [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [-PassThru] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  Remove-NetIPsecMainModeRule [-Name] <String[]> [-PolicyStore <String>] [-GPOSession <String>]

   [-TracePolicyStore] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [-PassThru] [-WhatIf]

   [-Confirm] [<CommonParameters>]
- >-
  Remove-NetIPsecMainModeRule -DisplayName <String[]> [-PolicyStore <String>] [-GPOSession <String>]

   [-TracePolicyStore] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [-PassThru] [-WhatIf]

   [-Confirm] [<CommonParameters>]
- >-
  Remove-NetIPsecMainModeRule [-Description <String[]>] [-DisplayGroup <String[]>] [-Group <String[]>]

   [-Enabled <Enabled[]>] [-MainModeCryptoSet <String[]>] [-Phase1AuthSet <String[]>]

   [-PrimaryStatus <PrimaryStatus[]>] [-Status <String[]>] [-PolicyStoreSource <String[]>]

   [-PolicyStoreSourceType <PolicyStoreType[]>] [-PolicyStore <String>] [-GPOSession <String>]

   [-TracePolicyStore] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [-PassThru] [-WhatIf]

   [-Confirm] [<CommonParameters>]
- >-
  Remove-NetIPsecMainModeRule -AssociatedNetFirewallAddressFilter <CimInstance> [-PolicyStore <String>]

   [-GPOSession <String>] [-TracePolicyStore] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob]

   [-PassThru] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Remove-NetIPsecMainModeRule -AssociatedNetFirewallProfile <CimInstance> [-PolicyStore <String>]

   [-GPOSession <String>] [-TracePolicyStore] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob]

   [-PassThru] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Remove-NetIPsecMainModeRule -AssociatedNetIPsecPhase1AuthSet <CimInstance> [-PolicyStore <String>]

   [-GPOSession <String>] [-TracePolicyStore] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob]

   [-PassThru] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Remove-NetIPsecMainModeRule -AssociatedNetIPsecMainModeCryptoSet <CimInstance> [-PolicyStore <String>]

   [-GPOSession <String>] [-TracePolicyStore] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob]

   [-PassThru] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Remove-NetIPsecMainModeRule -InputObject <CimInstance[]> [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>]

   [-AsJob] [-PassThru] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: EXAMPLE 1
  code: |-
    PS C:\>Remove-NetIPsecMainModeRule
  description: |-
    This example removes all of the static local main mode rules.
    This cmdlet is useful for removing any policy that conflicts with the domain GPO.
  summary: ""
- title: EXAMPLE 2
  code: |-
    PS C:\>Remove-NetIPsecMainModeRule -DisplayName "Main Mode Authenticate Computer"
  description: |-
    This example deletes a set based on the localized name.
  summary: ""
- title: EXAMPLE 3
  code: |-
    PS C:\>Remove-NetIPsecMainModeCryptoSet -ForceDiffieHellman $true
  description: |-
    This example removes all of the main mode rules that require the Diffie-Hellman key exchange.
  summary: ""
- title: EXAMPLE 4
  code: |-
    PS C:\>$ipsMMRule = Get-NetIPsecMainModeRule -DisplayName "Main Mode Authenticate Computer"



    PS C:\>Remove-NetIPsecMainModeCryptoSet -InputObject $ipsMMRule
  description: |-
    This example removes all of the main mode cryptographic sets that are associated with a main mode rule.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: All
  description: |+
    Indicates that all of the main mode rules within the specified policy store are removed.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    ps_cimcommon_asjob

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: AssociatedNetFirewallAddressFilter
  isRequired: true
  description: "Gets only the main mode rules that are associated with the given address filter to be removed. \r\n                         \r\nA NetFirewallAddressFilter object represents the address conditions associated with a rule.\r\nSee the Get-NetFirewallAddressFilter cmdlet for more information.\r\n\r\n"
  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: AssociatedNetFirewallProfile
  isRequired: true
  description: "Gets the firewall rules that are associated with the given port filter to be removed. \r\n                         \r\nA NetFirewallPortFilter object represents the profile conditions associated with a rule.\r\nSee the Get-NetFirewallProfile cmdlet for more information.\r\n\r\n"
  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: AssociatedNetIPsecMainModeCryptoSet
  isRequired: true
  description: "Gets the main mode rules that are associated, via the pipeline, with the input main mode cryptographic set to be removed. \r\n                         \r\nA NetIPsecMainModeCryptoSet object represents a main mode cryptographic conditions associated with a main mode rule.\r\nThis parameter sets the methods for the main mode negotiation by describing the proposals for encryption.\r\nSee the Get-NetIPsecMainModeCryptoSet cmdlet for more information. \r\n                         \r\nAlternatively, the **MainModeCryptoSet** parameter can be used for the same purpose, but does not allow the cryptographic set to be piped into this cmdlet and the set must be specified in the **Name** parameter.\r\n\r\n"
  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: AssociatedNetIPsecPhase1AuthSet
  isRequired: true
  description: "Gets the main mode rules that are associated with the given phase 1 authentication set to be removed. \r\n                         \r\nA NetIPsecPhase1AuthSet object contains the authentication suites that should be proposed during main mode authentication.\r\nSee the Get-NetIPsecPhase1AuthSet cmdlet for more information. \r\n                         \r\nAlternatively, the **Phase1AuthSet** parameter can be used for the same purpose, but does not allow the authentication set to be piped into the cmdlet and the set must be specified in the **Name** parameter.\r\n\r\n"
  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a New-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227967 or Get-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227966 cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Description
  description: "Specifies that matching main mode rules of the indicated description are removed.\r\nWildcard characters are accepted. \r\n                         \r\nThis parameter provides information about the main mode rule.\r\nThis parameter specifies a localized, user-facing description of the object.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: DisplayGroup
  description: "Specifies that only matching main mode rules of the indicated group association are removed.\r\nWildcard characters are accepted. \r\n                         \r\nThe **Group** parameter specifies the source string for this parameter.\r\nIf the value for this parameter is a localizable string, then the **Group** parameter contains an indirect string.\r\nRule groups can be used to organize rules by influence and allows batch rule modifications.\r\nUsing the Set-NetIPsecMainModeRule cmdlet, if the group name is specified for a set of rules or sets, then all of the rules or sets in that group receive the same set of modifications.\r\nIt is good practice to specify the **Group** parameter with a universal and world-ready indirect @FirewallAPI name. \r\nNote: This parameter cannot be specified upon object creation using the New-NetIPsecMainModeRule cmdlet, but can be modified using dot notation and the Set-NetIPsecMainModeRule cmdlet.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: DisplayName
  isRequired: true
  description: "Specifies that only matching main mode rules of the indicated display name are removed.\r\nWildcard characters are accepted. \r\n                         \r\nThis parameter specifies the localized, user-facing name of the main mode rule.\r\nWhen creating a rule this parameter is required.\r\nThis parameter value is locale-dependent.\r\nIf the object is not modified, this parameter value may change in certain circumstances.\r\nWhen writing scripts in multi-lingual environments, the **Name** parameter should be used instead, where the default value is a randomly assigned value. \r\nNote: This parameter cannot be All.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Enabled" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Enabled
  description: "Specifies that matching main mode rules of the indicated state are removed. \r\n                         \r\nThis parameter specifies that the rule object is administratively enabled or administratively disabled.\r\nThe acceptable values for this parameter are:\r\n                         \r\n -- True: Specifies the rule is currently enabled. \r\n                         \r\n -- False: Specifies the rule is currently disabled.\r\nA disabled rule will not actively modify computer behavior, but the rule still exists on the computer so it can be re-enabled.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: True, False
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: GPOSession
  description: "Targets the network GPO from which to retrieve the rules to be retrieved. \r\n                         \r\nThis parameter is used in the same way as the **PolicyStore** parameter.\r\nWhen modifying GPOs in Windows PowerShell®, each change to a GPO requires the entire GPO to be loaded, modified, and saved back.\r\nOn a busy Domain Controller (DC), this can be a slow and resource-heavy operation.\r\nA GPO Session loads a domain GPO onto the local computer and makes all changes in a batch, before saving it back.\r\nThis reduces the load on the DC and speeds up the Windows PowerShell cmdlets.\r\nTo load a GPO Session, use the Open-NetGPO cmdlet.\r\nTo save a GPO Session, use the Save-NetGPO cmdlet.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Group
  description: "Specifies that only matching main mode rules of the indicated group association are retrieved.\r\nWildcard characters are accepted. \r\n                         \r\nThis parameter specifies the source string for the **DisplayGroup** parameter.\r\nIf the **DisplayGroup** parameter value is a localizable string, then this parameter contains an indirect string.\r\nRule groups can be used to organize rules by influence and allows batch rule modifications.\r\nUsing the Set-NetIPsecMainModeRule cmdlet, if the group name is specified for a set of rules or sets, then all of the rules or sets in that group receive the same set of modifications.\r\nIt is good practice to specify this parameter with a universal and world-ready indirect @FirewallAPI name. \r\nNote: The **DisplayGroup** parameter cannot be specified upon object creation using the New-NetIPsecMainModeRule cmdlet, but can be modified using dot notation and the Set-NetIPsecMainModeRule cmdlet.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InputObject
  isRequired: true
  description: |+
    Specifies the input to this cmdlet.
    You can use this parameter, or you can pipe the input to this cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: MainModeCryptoSet
  description: "Gets the IPsec main mode rules that are associated with the given main mode cryptographic set to be removed. \r\n                         \r\nSpecifies, by Name, the main mode cryptographic set to be associated with the main mode rule. \r\n                         \r\nA NetIPsecMainModeCryptoSet object represents a main mode cryptographic conditions associated with a main mode rule.\r\nThis parameter sets the methods for main mode negotiation by describing the proposals for encryption.\r\nThis is only associated with main mode rules.\r\nSee the Get-NetIPsecMainModeCryptoSet cmdlet for more information.\r\nAlternatively, the **AssociatedNetIPsecMainModeCryptoSet** parameter can be used for the same purpose, but is used to pipe the input set into the rule. \r\nNote: When specifying cryptographic sets, the **Name** parameter value of the cryptographic set must be used.\r\nThe object cannot be directly passed into this cmdlet.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Name
  isRequired: true
  description: "Specifies that only matching main mode rules of the indicated name are removed.\r\nWildcard characters are accepted. \r\n                         \r\nThis parameter acts just like a file name, in that only one rule with a given name may exist in a policy store at a time.\r\nDuring group policy processing and policy merge, rules that have the same name but come from multiple stores being merged, will overwrite one another so that only one exists.\r\nThis overwriting behavior is desirable if the rules serve the same purpose.\r\nFor instance, all of the firewall rules have specific names, so if an administrator can copy these rules to a GPO, and the rules will override the local versions on a local computer.\r\nSince GPOs can have precedence, if an administrator that gives a rule with a different or more specific rule the same name in a higher-precedence GPO, then it overrides other rules that exist. \r\n                         \r\nThe default value is a randomly assigned value. \r\n                         \r\nWhen the defaults for main mode encryption are overridden, specify the customized parameters and set this parameter value, making this parameter the new default setting for encryption.\r\n\r\n"
  defaultValue: None
  position: "0"
  aliases: ID
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns an object representing the item with which you are working.
    By default, this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Phase1AuthSet
  description: "Gets the main mode rules that are associated with the given phase 1 authentication set to be removed. \r\n                         \r\nThis parameter specifies, by name, the phase 1 authentication set to be associated with the main mode rule. \r\n                         \r\nA NetIPsecPhase1AuthSet object represents the phase 1 authentication conditions associated with an IPsec or main mode rule.\r\nThis parameter sets the methods for main mode negotiation by describing the proposals for computer authentication.\r\nSee the New-NetIPsecAuthProposal cmdlet of more information.\r\nAlternatively, the **AssociatedNetIPsecPhase1AuthSet** parameter can be used for the same purpose, but is used to pipe the input set into the rule. \r\nNote: When specifying authentication sets, the **Name** parameter value of the authentication set must be used.\r\nThe object cannot be directly passed into this cmdlet.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: PolicyStore
  description: "Targets the policy store from which to retrieve the rules to be removed. \r\n                         \r\nA policy store is a container for firewall and IPsec policy. \r\nThe acceptable values for this parameter are:\r\n                         \r\n -- PersistentStore: Sometimes called static rules, this store contains the persistent policy for the local computer.\r\nThis policy is not from GPOs, and has been created manually or programmatically (during application installation) on the computer.\r\nRules created in this store are attached to the ActiveStore and activated on the computer immediately. \r\n                         \r\n -- ActiveStore: This store contains the currently active policy, which is the sum of all policy stores that apply to the computer.\r\nThis is the resultant set of policy (RSOP) for the local computer (the sum of all GPOs that apply to the computer), and the local stores (the PersistentStore, the static Windows service hardening (WSH), and the configurable WSH). \r\n                         \r\n ---- Group Policy Objects (GPOs) are also policy stores.\r\nComputer GPOs can be specified as follows. \r\n                         \r\n ------ `-PolicyStore hostname`. \r\n                         \r\n ---- Active Directory GPOs can be specified as follows. \r\n                         \r\n ------ `-PolicyStore domain.fqdn.com\\GPO_Friendly_Namedomain.fqdn.comGPO_Friendly_Name`. \r\n                         \r\n ------ Such as the following. \r\n                         \r\n -------- `-PolicyStore localhost`\r\n                         \r\n -------- `-PolicyStore corp.contoso.com\\FirewallPolicy`\r\n                         \r\n ---- Active Directory GPOs can be created using the New-GPO cmdlet or the Group Policy Management Console. \r\n                         \r\n -- RSOP: This read-only store contains the sum of all GPOs applied to the local computer. \r\n                         \r\n -- SystemDefaults: This read-only store contains the default state of firewall rules that ship with Windows Server® 2012. \r\n                         \r\n -- StaticServiceStore: This read-only store contains all the service restrictions that ship with Windows Server 2012.\r\nOptional and product-dependent features are considered part of Windows Server 2012 for the purposes of WFAS. \r\n                         \r\n -- ConfigurableServiceStore: This read-write store contains all the service restrictions that are added for third-party services.\r\nIn addition, network isolation rules that are created for Windows Store application containers will appear in this policy store. \r\n                         \r\nThe default value is PersistentStore. \r\nNote: The Set-NetIPsecMainModeRule cmdlet cannot be used to add an object to a policy store.\r\nAn object can only be added to a policy store at creation time with the Copy-NetIPsecMainModeRule cmdlet or with the New-NetIPsecMainModeRule cmdlet.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: PolicyStoreSource
  description: "Specifies that main mode rules that match the indicated policy store source are removed. \r\n                         \r\nThis parameter contains a path to the policy store where the rule originated if the object is retrieved from the ActiveStore with the TracePolicyStoreSource option set.\r\nThis parameter value is automatically generated and should not be modified. \r\n                         \r\nThe monitoring output from this parameter is not completely compatible with the **PolicyStore** parameter.\r\nThis parameter value cannot always be passed into the **PolicyStore** parameter.\r\nDomain GPOs are one example in which this parameter contains only the GPO name, not the domain name.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="PolicyStoreType" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: PolicyStoreSourceType
  description: "Describes the type of policy store where the rule originated if the object is retrieved from the ActiveStore with the TracePolicyStoreSource option set.\r\nThis parameter value is automatically generated and should not be modified. \r\nThe acceptable values for this parameter are:\r\n                         \r\n -- Local: The object originates from the local store. \r\n                         \r\n -- GroupPolicy: The object originates from a GPO. \r\n                         \r\n -- Dynamic: The object originates from the local runtime state.\r\nThis policy store name is not valid for use in the cmdlets, but may appear when monitoring active policy. \r\n                         \r\n -- Generated: The object was generated automatically.\r\nThis policy store name is not valid for use in the cmdlets, but may appear when monitoring active policy. \r\n                         \r\n -- Hardcoded: The object was hard-coded.\r\nThis policy store name is not valid for use in the cmdlets, but may appear when monitoring active policy.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: None, Local, GroupPolicy, Dynamic, Generated, Hardcoded
- type: <xref href="PrimaryStatus" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: PrimaryStatus
  description: "Specifies that main mode rules that match the indicated primary status are removed. \r\n                         \r\nThis parameter describes the overall status of the rule. \r\n                         \r\n -- OK: Specifies that the rule will work as specified. \r\n                         \r\n -- Degraded: Specifies that one or more parts of the rule will not be enforced. \r\n                         \r\n -- Error: Specifies that the computer is unable to use the rule at all. \r\n                         \r\nSee the Status and StatusCode fields of the object for more detailed status information.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Unknown, OK, Inactive, Error
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Status
  description: "Specifies that main mode rules that match the indicated status are removed. \r\n                         \r\nThis parameter describes the status message for the specified status code value.\r\nThe status code is a numerical value that indicates any syntax, parsing, or runtime errors in the rule.\r\nThis parameter value should not be modified.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: TracePolicyStore
  description: "Indicates that the main mode rules that match the indicated policy store are removed. \r\n                         \r\nThis parameter specifies that the name of the source GPO is queried and set to the **PolicyStoreSource** parameter value.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: NetSecurity.Remove-NetIPsecMainModeRule
name: Remove-NetIPsecMainModeRule
description: |-
  The **Remove-NetIPsecMainModeRule** cmdlet permanently deletes one or more main mode rules from the specified policy store.

  This cmdlet gets one or more main mode rules to be deleted with the **Name** parameter (default), the **DisplayName** parameter, rule properties, or by associated filters or objects.
  The resulting queried rule is removed from the computer.

  This cmdlet permanently removes a previously enabled main mode rule to be inactive within the computer or a group policy organizational unit.
  This cmdlet differs from the Disable-NetIPsecMainModeRule cmdlet that disables a previously enabled main mode rule to be inactive within the computer or a group policy organizational unit.
  A disabled main mode rule will not actively modify computer behavior, but it still exists on the computer or in a Group Policy Object (GPO) so it can be re-enabled.

  After copying the firewall rules into a domain GPO, run this cmdlet, so the firewall rule does not conflict with the new domain GPO.
  When developing firewall policies, the rules can be created on the local computer.
metadata:
  external help file: NetIPsecMainModeRule.cmdletDefinition.cdxml-help.xml
  Module Name: NetSecurity
  ms.date: 10/30/2017
  online version: https://docs.microsoft.com/powershell/module/netsecurity/remove-netipsecmainmoderule?view=windowsserver2012r2-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Remove-NetIPsecMainModeRule
