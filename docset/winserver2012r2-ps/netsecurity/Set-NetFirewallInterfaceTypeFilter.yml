### YamlMime:PowershellCmdlet
summary: |-
  Modifies interface type filter objects, thereby modifying the interface type conditions of the firewall or IPsec rules.
module: NetSecurity
notes: ""
inputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetInterfaceTypeFilter" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetInterfaceTypeFilter" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
links:
- text: Where-Object
  href: https://go.microsoft.com/fwlink/p/?LinkId=113423
- text: Copy-NetIPsecRule
  href: ./Copy-NetIPsecRule.yml
- text: Get-NetFirewallInterfaceTypeFilter
  href: ./Get-NetFirewallInterfaceTypeFilter.yml
- text: Get-NetFirewallRule
  href: ./Get-NetFirewallRule.yml
- text: Get-NetIPSecRule
  href: ./Get-NetIPsecRule.yml
- text: New-NetFirewallRule
  href: ./New-NetFirewallRule.yml
- text: New-NetIPSecRule
  href: ./New-NetIPsecRule.yml
- text: Open-NetGPO
  href: ./Open-NetGPO.yml
- text: Save-NetGPO
  href: ./Save-NetGPO.yml
- text: Set-NetFirewallRule
  href: ./Set-NetFirewallRule.yml
- text: Set-NetIPSecRule
  href: ./Set-NetIPsecRule.yml
- text: New-GPO
  href: ../grouppolicy/New-GPO.yml
syntaxes:
- >-
  Set-NetFirewallInterfaceTypeFilter [-PolicyStore <String>] [-GPOSession <String>]

   [-InterfaceType <InterfaceType>] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [-PassThru]

   [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Set-NetFirewallInterfaceTypeFilter -InputObject <CimInstance[]> [-InterfaceType <InterfaceType>]

   [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [-PassThru] [-WhatIf] [-Confirm]

   [<CommonParameters>]
examples:
- title: EXAMPLE 1
  code: |-
    PS C:\>$nfwInterfaceTypeFilter = ( Get-FirewallRule -DisplayName "Contoso Messenger" | Get-NetFirewallInterfaceTypeFilter )



    PS C:\>Set-NetFirewallInterfaceTypeFilter -InterfaceType Any -InputObject $nfwInterfaceTypeFilter


    This cmdlet can be run using only the pipeline.
    PS C:\>Get-FirewallRule -DisplayName "Contoso Messenger" | Get-NetFirewallInterfaceTypeFilter | Set-NetFirewallInterfaceTypeFilter -InterfaceType Any


    This cmdlet can be run without the pipeline.
    PS C:\>Set-NetFirewallRule -DisplayName "Contoso Messenger" -InterfaceType Any
  description: |-
    This example modifies the **InterfaceType** parameter value for a particular firewall rule.
  summary: ""
- title: EXAMPLE 2
  code: |-
    PS C:\>$nfwInterfaceTypeFilter = ( Get-NetFirewallInterfaceTypeFilter -InterfaceType Wired )



    PS C:\>Set-NetFirewallInterfaceTypeFilter -InterfaceType Any -InputObject $nfwInterfaceTypeFilter


    This cmdlet can be run using only the pipeline.
    PS C:\>Get-NetFirewallInterfaceTypeFilter -InterfaceType Wired | Set-NetFirewallInterfaceTypeFilter -InterfaceType Any
  description: |-
    This example modifies the interface type for all of the rules previously associated with the Wired interface type.
  summary: ""
- title: EXAMPLE 3
  code: |-
    PS C:\>$nfwInterfaceTypeFilter = ( Get-NetIPsecRule -Group DirectAccess | Get-NetFirewallInterfaceTypeFilter )



    PS C:\>$nfwInterfaceTypeFilterWired = Where-Object -Property { $_.InterfaceType -Eq "Wired" } -InputObject $nfwInterfaceTypeFilter



    PS C:\>Set-NetFirewallInterfaceTypeFilter -InterfaceType RemoteAccess -InputObject $nfwInterfaceTypeFilterWired


    This cmdlet can be run using only the pipeline.
    PS C:\>Get-NetIPsecRule -Group DirectAccess | Get-NetFirewallInterfaceTypeFilter | Where-Object -Property { $_.InterfaceType -Eq "Wired" } | Set-NetFirewallInterfaceTypeFilter -InterfaceType RemoteAccess
  description: |-
    This example modifies the interface type associated with all of the IPsec rules in a specified group.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    ps_cimcommon_asjob

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a New-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227967 or Get-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227966 cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: GPOSession
  description: "Targets the network GPO from which to retrieve the rules to be modified. \r\n                         \r\nThis parameter is used in the same way as the **PolicyStore** parameter.\r\nWhen modifying GPOs in Windows PowerShell®, each change to a GPO requires the entire GPO to be loaded, modified, and saved back.\r\nOn a busy Domain Controller (DC), this can be a slow and resource-heavy operation.\r\nA GPO Session loads a domain GPO onto the local computer and makes all changes in a batch, before saving it back.\r\nThis reduces the load on the DC and speeds up the Windows PowerShell cmdlets.\r\nTo load a GPO Session, use the Open-NetGPO cmdlet.\r\nTo save a GPO Session, use the Save-NetGPO cmdlet.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InputObject
  isRequired: true
  description: |+
    Specifies the input to this cmdlet.
    You can use this parameter, or you can pipe the input to this cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="InterfaceType" data-throw-if-not-resolved="False" />
  name: InterfaceType
  description: "Specifies that only network connections made through the indicated interface types are subject to the requirements of this rule.\r\nThis parameter specifies different authentication requirements for each of the three main network types. \r\nThe acceptable values for this parameter are: Any, Wired, Wireless, or RemoteAccess. \r\n                         \r\nThe default value is Any.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Any, Wired, Wireless, RemoteAccess
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns an object representing the item with which you are working.
    By default, this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: PolicyStore
  description: "Targets the policy store from which to retrieve the rules to be modified. \r\n                         \r\nA policy store is a container for firewall and IPsec policy. \r\nThe acceptable values for this parameter are:\r\n                         \r\n -- PersistentStore: Sometimes called static rules, this store contains the persistent policy for the local computer.\r\nThis policy is not from GPOs, and has been created manually or programmatically (during application installation) on the computer.\r\nRules created in this store are attached to the ActiveStore and activated on the computer immediately. \r\n                         \r\n -- ActiveStore: This store contains the currently active policy, which is the sum of all policy stores that apply to the computer.\r\nThis is the resultant set of policy (RSOP) for the local computer (the sum of all GPOs that apply to the computer), and the local stores (the PersistentStore, the static Windows service hardening (WSH), and the configurable WSH). \r\n                         \r\n ---- GPOs are also policy stores.\r\nComputer GPOs can be specified as follows. \r\n                         \r\n ------ `-PolicyStore hostname`. \r\n                         \r\n ---- Active Directory GPOs can be specified as follows. \r\n                         \r\n ------ `-PolicyStore domain.fqdn.com\\GPO_Friendly_Namedomain.fqdn.comGPO_Friendly_Name`. \r\n                         \r\n ------ Such as the following. \r\n                         \r\n -------- `-PolicyStore localhost`\r\n                         \r\n -------- `-PolicyStore corp.contoso.com\\FirewallPolicy`\r\n                         \r\n ---- Active Directory GPOs can be created using the New-GPO cmdlet or the Group Policy Management Console. \r\n                         \r\n -- RSOP: This read-only store contains the sum of all GPOs applied to the local computer. \r\n                         \r\n -- SystemDefaults: This read-only store contains the default state of firewall rules that ship with Windows Server® 2012. \r\n                         \r\n -- StaticServiceStore: This read-only store contains all the service restrictions that ship with Windows Server 2012.\r\nOptional and product-dependent features are considered part of Windows Server 2012 for the purposes of WFAS. \r\n                         \r\n -- ConfigurableServiceStore: This read-write store contains all the service restrictions that are added for third-party services.\r\nIn addition, network isolation rules that are created for Windows Store application containers will appear in this policy store. \r\n                         \r\nThe default value is PersistentStore. \r\nNote: The Set-NetIPsecRule cmdlet cannot be used to add an object to a policy store.\r\nAn object can only be added to a policy store at creation time with the Copy-NetIPsecRule cmdlet or with the New-NetIPsecRule cmdlet.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: NetSecurity.Set-NetFirewallInterfaceTypeFilter
name: Set-NetFirewallInterfaceTypeFilter
description: "The **Set-NetFirewallInterfaceTypeFilter** cmdlet modifies the interface types associated with the input firewall or IPsec rules.\r\n\r\nSee theGet-NetFirewallInterfaceTypeFilter cmdlet for more information about the interface type filters.\r\n\r\nTo modify the interface type conditions, two methods can be used starting with the interface type filters returned by the Get-NetFirewallInterfaceTypeFilter cmdlet and optional additional querying. \r\n                       \r\n -- The network firewall interface type filter objects are piped into the Get-NetFirewallRule or Get-NetIPsecrule cmdlet.\r\nThe Get-NetFirewallRule or Get-NetIPsecrule cmdlet returns the rules associated with the filters and pipes the rules into the Set-NetFirewallRule or Set-NetIPsecrule cmdlet, which configures the interface properties. \r\n                       \r\n -- Alternatively, the network firewall interface type filter objects are piped directly to this cmdlet, which modifies the **InterfaceType** parameter value of the rules."
metadata:
  external help file: NetFirewallInterfaceTypeFilter.cmdletDefinition.cdxml-help.xml
  Module Name: NetSecurity
  ms.date: 10/30/2017
  online version: https://docs.microsoft.com/powershell/module/netsecurity/set-netfirewallinterfacetypefilter?view=windowsserver2012r2-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Set-NetFirewallInterfaceTypeFilter
