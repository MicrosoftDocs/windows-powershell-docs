### YamlMime:PowershellCmdlet
summary: |-
  Modifies existing main mode rules.
module: NetSecurity
notes: ""
inputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetMainModeRule" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetMainModeRule" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
links:
- text: Copy-NetIPsecMainModeRule
  href: ./Copy-NetIPsecMainModeRule.yml
- text: Enable-NetIPsecMainModeRule
  href: ./Enable-NetIPsecMainModeRule.yml
- text: Get-NetFirewallAddressFilter
  href: ./Get-NetFirewallAddressFilter.yml
- text: Get-NetIPsecMainModeRule
  href: ./Get-NetIPsecMainModeRule.yml
- text: Open-NetGPO
  href: ./Open-NetGPO.yml
- text: Remove-NetIPsecMainModeRule
  href: ./Remove-NetIPsecMainModeRule.yml
- text: Save-NetGPO
  href: ./Save-NetGPO.yml
- text: New-NetIPsecAuthProposal
  href: ./New-NetIPsecAuthProposal.yml
- text: New-GPO
  href: ../grouppolicy/New-GPO.yml
syntaxes:
- >-
  Set-NetIPsecMainModeRule [-Name] <String[]> [-PolicyStore <String>] [-GPOSession <String>]

   [-NewDisplayName <String>] [-Description <String>] [-Enabled <Enabled>] [-Profile <Profile>]

   [-Platform <String[]>] [-MainModeCryptoSet <String>] [-Phase1AuthSet <String>] [-LocalAddress <String[]>]

   [-RemoteAddress <String[]>] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [-PassThru]

   [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Set-NetIPsecMainModeRule -DisplayName <String[]> [-PolicyStore <String>] [-GPOSession <String>]

   [-NewDisplayName <String>] [-Description <String>] [-Enabled <Enabled>] [-Profile <Profile>]

   [-Platform <String[]>] [-MainModeCryptoSet <String>] [-Phase1AuthSet <String>] [-LocalAddress <String[]>]

   [-RemoteAddress <String[]>] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [-PassThru]

   [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Set-NetIPsecMainModeRule -DisplayGroup <String[]> [-PolicyStore <String>] [-GPOSession <String>]

   [-NewDisplayName <String>] [-Description <String>] [-Enabled <Enabled>] [-Profile <Profile>]

   [-Platform <String[]>] [-MainModeCryptoSet <String>] [-Phase1AuthSet <String>] [-LocalAddress <String[]>]

   [-RemoteAddress <String[]>] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [-PassThru]

   [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Set-NetIPsecMainModeRule -Group <String[]> [-PolicyStore <String>] [-GPOSession <String>]

   [-NewDisplayName <String>] [-Description <String>] [-Enabled <Enabled>] [-Profile <Profile>]

   [-Platform <String[]>] [-MainModeCryptoSet <String>] [-Phase1AuthSet <String>] [-LocalAddress <String[]>]

   [-RemoteAddress <String[]>] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [-PassThru]

   [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Set-NetIPsecMainModeRule -InputObject <CimInstance[]> [-NewDisplayName <String>] [-Description <String>]

   [-Enabled <Enabled>] [-Profile <Profile>] [-Platform <String[]>] [-MainModeCryptoSet <String>]

   [-Phase1AuthSet <String>] [-LocalAddress <String[]>] [-RemoteAddress <String[]>] [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [-PassThru] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: EXAMPLE 1
  code: |-
    PS C:\>$EncAES128 = New-NetIPsecMainModeCryptoProposal -Encryption AES128



    PS C:\>$EncDES3 = New-NetIPsecMainModeCryptoProposal -Encryption DES3



    PS C:\>$cryptoset = New-NetIPsecMainModeCryptoSet -DisplayName "(DA Client) - Phase 2 Crypto Set" -Proposals $EncAES128,$EncDES3



    PS C:\>Set-NetIPsecMainModeRule -DisplayName MainModeRule -MainModeCryptoSet $cryptoset
  description: |-
    This example replaces the proposals for an existing main mode rule.
  summary: ""
- title: EXAMPLE 2
  code: |-
    PS C:\>Set-NetIPsecMainModeRule -DisplayGroup "DA Client" -Enabled True



    PS C:\>Enable-NetIPsecMainModeRule -DisplayGroup "DA Client"
  description: |-
    This example shows two ways to enable all of the main mode rules in a predefined group.
  summary: ""
- title: EXAMPLE 3
  code: |-
    PS C:\>Set-NetFirewallRule -DisplayName "Tunnel Mode - (DA Client)" -NewDisplayName "Tunnel Mode - Americas (DA Client)"
  description: |-
    This example changes the display name for a main mode rule
  summary: ""
- title: EXAMPLE 4
  code: |-
    PS C:\>$rule = Get-NetIPsecMainModeRule -DisplayName "Tunnel Mode - (DA Client)"



    PS C:\>$rule.MainModeModeCryptoSet = "Default"



    PS C:\>Set-NetIPsecMainModeRule -InputObject $rule
  description: |-
    This example modifies a main mode rule to use the default encryption method for main mode if a custom one has been previously set to the rule.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    ps_cimcommon_asjob

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a New-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227967 or Get-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227966 cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Description
  description: "Specifies that matching main mode rules of the indicated description are modified.\r\nWildcard characters are accepted. \r\n                         \r\nThis parameter provides information about the main mode rule.\r\nThis parameter specifies the localized, user-facing description of the IPsec rule.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: DisplayGroup
  isRequired: true
  description: "Specifies that only matching main mode rules of the indicated group association are modified.\r\nWildcard characters are accepted. \r\n                         \r\nThe **Group** parameter specifies the source string for this parameter.\r\nIf the value for this parameter is a localizable string, then the **Group** parameter contains an indirect string.\r\nRule groups can be used to organize rules by influence and allows batch rule modifications.\r\nUsing this cmdlet, if the group name is specified for a set of rules or sets, then all of the rules or sets in that group receive the same set of modifications.\r\nIt is good practice to specify the **Group** parameter value with a universal and world-ready indirect @FirewallAPI name. \r\nNote: This parameter cannot be specified upon object creation using the New-NetIPsecMainModeRule cmdlet, but can be modified using dot-notation and this cmdlet.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: DisplayName
  isRequired: true
  description: "Specifies that only matching main mode rules of the indicated display name are modified.\r\nWildcard characters are accepted. \r\n                         \r\nSpecifies the localized, user-facing name of the main mode rule being created.\r\nWhen creating a rule this parameter is required.\r\nThis parameter value is locale-dependent.\r\nIf the object is not modified, this parameter value may change in certain circumstances.\r\nWhen writing scripts in multi-lingual environments, the **Name** parameter should be used instead, where the default value is a randomly assigned value.\r\nNote: This parameter cannot be set to All.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Enabled" data-throw-if-not-resolved="False" />
  name: Enabled
  description: "Specifies that matching main mode rules of the indicated state are modified. \r\n                         \r\nThis parameter specifies that the rule object is administratively enabled or administratively enabled.\r\nThe acceptable values for this parameter are:\r\n                         \r\n -- True: Specifies the rule is currently enabled. \r\n                         \r\n -- False: Specifies the rule is currently disabled.\r\nA disabled rule will not actively modify computer behavior, but the management construct still exists on the computer so it can be re-enabled.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: True, False
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: GPOSession
  description: "Specifies the network GPO from which to retrieve the rules to be modified. \r\n                         \r\nThis parameter is used in the same way as the **PolicyStore** parameter.\r\nWhen modifying GPOs in Windows PowerShell®, each change to a GPO requires the entire GPO to be loaded, modified, and saved back.\r\nOn a busy Domain Controller (DC), this can be a slow and resource-heavy operation.\r\nA GPO Session loads a domain GPO onto the local computer and makes all changes in a batch, before saving it back.\r\nThis reduces the load on the DC and speeds up the Windows PowerShell cmdlets.\r\nTo load a GPO Session, use the Open-NetGPO cmdlet.\r\nTo save a GPO Session, use the Save-NetGPO cmdlet.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Group
  isRequired: true
  description: "Specifies that only matching main mode rules of the indicated group association are modified.\r\nWildcard characters are accepted. \r\n                         \r\nThis parameter specifies the source string for the **DisplayGroup** parameter.\r\nIf the **DisplayGroup** parameter value is a localizable string, then this parameter contains an indirect string.\r\nRule groups can be used to organize rules by influence and allows batch rule modifications.\r\nUsing this cmdlets, if the group name is specified for a set of rules or sets, then all of the rules or sets in that group receive the same set of modifications.\r\nIt is good practice to specify this parameter value with a universal and world-ready indirect @FirewallAPI name. \r\nNote: The **DisplayGroup** parameter cannot be specified upon object creation using the New-NetIPsecMainModeRule cmdlet, but can be modified using dot-notation and this cmdlet.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InputObject
  isRequired: true
  description: |+
    Specifies the input to this cmdlet.
    You can use this parameter, or you can pipe the input to this cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: LocalAddress
  description: "Specifies that network packets with matching IP addresses match this rule. \r\n                         \r\nThis parameter value is the first end point of an IPsec rule and specifies the computers that are subject to the requirements of this rule. \r\n                         \r\nThis parameter value is an IPv4 or IPv6 address, hostname, subnet, range, or the following keyword: Any. \r\n                         \r\nThe acceptable formats for this parameter are: \r\n                         \r\n -- Single IPv4 Address: 1.2.3.4 \r\n                         \r\n -- Single IPv6 Address: fe80::1 \r\n                         \r\n -- IPv4 Subnet (by network bit count): 1.2.3.4/24 \r\n                         \r\n -- IPv6 Subnet (by network bit count): fe80::1/48 \r\n                         \r\n -- IPv4 Subnet (by network mask): 1.2.3.4/255.255.255.0 \r\n                         \r\n -- IPv4 Range: 1.2.3.4 through 1.2.3.7 \r\n                         \r\n -- IPv6 Range: fe80::1 through fe80::9 \r\nNote: Querying for rules with this parameter can only be performed using filter objects.\r\nSee the Get-NetFirewallAddressFilter cmdlet for more information.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: MainModeCryptoSet
  description: "Gets the IPsec main mode rules that are associated with the given main mode cryptographic set to be modified. \r\n                         \r\nSpecifies, by Name, the main mode cryptographic set to be associated with the main mode rule. \r\n                         \r\nA NetIPsecMainModeCryptoSet object represents a main mode cryptographic conditions associated with a main mode rule.\r\nThis parameter sets the methods for main mode negotiation by describing the proposals for encryption.\r\nThis is only associated with main mode rules.\r\nSee the Get-NetIPsecMainModeCryptoSet cmdlet for more information.\r\nAlternatively, the **AssociatedNetIPsecMainModeCryptoSet** parameter can be used for the same purpose, but is used to pipe the input set into the rule.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Name
  isRequired: true
  description: "Specifies that only matching main mode rules of the indicated name are modified.\r\nWildcard characters are accepted. \r\n                         \r\nThis parameter acts just like a file name, in that only one rule with a given name may exist in a policy store at a time.\r\nDuring group policy processing and policy merge, rules that have the same name but come from multiple stores being merged, will overwrite one another so that only one exists.\r\nThis overwriting behavior is desirable if the rules serve the same purpose.\r\nFor instance, all of the firewall rules have specific names, so if an administrator can copy these rules to a GPO, and the rules will override the local versions on a local computer.\r\nGPOs can have precedence.\r\nSo, if an administrator has a different or more specific rule the same name in a higher-precedence GPO, then it overrides other rules that exist. \r\n                         \r\nThe default value is a randomly assigned value. \r\n                         \r\nWhen you want to override the defaults for main mode encryption, specify the customized parameters and set this parameter value, making this parameter the new default setting for encryption.\r\n\r\n"
  defaultValue: None
  position: "0"
  aliases: ID
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: NewDisplayName
  description: |+
    Specifies the new display name for an IPsec rule.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns an object representing the item with which you are working.
    By default, this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Phase1AuthSet
  description: "Gets the main mode rules that are associated with the given phase 1 authentication set to be modified. \r\n                         \r\nThis parameter specifies, by name, the Phase 1 authentication set to be associated with the main mode rule. \r\n                         \r\nA NetIPsecPhase1AuthSet object represents the phase 1 authentication conditions associated with an IPsec or main mode rule.\r\nThis parameter sets the methods for main mode negotiation by describing the proposals for computer authentication.\r\nSee the New-NetIPsecAuthProposal cmdlet of more information.\r\nAlternatively, the **AssociatedNetIPsecPhase1AuthSet** parameter can be used for the same purpose, but is used to pipe the input set into the rule.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Platform
  description: "Specifies which version of Windows the associated rule applies. \r\n                         \r\nThe acceptable format for this parameter is a number in the Major.Minor format. \r\n                         \r\nThe version number of 6.0 corresponds to Vista (nextref_vista), 6.1 corresponds to Win7 (Windows® 7 or firstref_longhorn), and 6.2 corresponds to Win8 (Windows® 8 or Windows Server 2012). \r\n                         \r\nIf + is not specified, then only that version is associated. \r\n                         \r\nIf + is specified, then that version and later are associated. \r\nNote: Querying for rules with this parameter with the Get-NetIPsecMainModeRule cmdlet cannot be performed.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: PolicyStore
  description: "Specifies the policy store from which to retrieve the rules to be modified. \r\n                         \r\nA policy store is a container for firewall and IPsec policy. \r\nThe acceptable values for this parameter are:\r\n                         \r\n -- PersistentStore: Sometimes called static rules, this store contains the persistent policy for the local computer.\r\nThis policy is not from GPOs, and has been created manually or programmatically (during application installation) on the computer.\r\nRules created in this store are attached to the ActiveStore and activated on the system immediately. \r\n                         \r\n -- ActiveStore: This store contains the currently active policy, which is the sum of all policy stores that apply to the computer.\r\nThis is the resultant set of policy (RSOP) for the local computer (the sum of all GPOs that apply to the computer), and the local stores (the PersistentStore, the static Windows service hardening (WSH), and the configurable WSH). \r\n                         \r\n ---- GPOs are also policy stores.\r\nComputer GPOs can be specified as follows. \r\n                         \r\n ------ `-PolicyStore hostname`. \r\n                         \r\n ---- Active Directory GPOs can be specified as follows. \r\n                         \r\n ------ `-PolicyStore domain.fqdn.com\\GPO_Friendly_Namedomain.fqdn.comGPO_Friendly_Name`. \r\n                         \r\n ------ Such as the following. \r\n                         \r\n -------- `-PolicyStore localhost`\r\n                         \r\n -------- `-PolicyStore corp.contoso.com\\FirewallPolicy`\r\n                         \r\n ---- Active Directory GPOs can be created using the New-GPO cmdlet or the Group Policy Management Console. \r\n                         \r\n -- RSOP: This read-only store contains the sum of all GPOs applied to the local computer. \r\n                         \r\n -- SystemDefaults: This read-only store contains the default state of main mode rules that ship with Windows Server® 2012. \r\n                         \r\n -- StaticServiceStore: This read-only store contains all the service restrictions that ship with Windows Server 2012.\r\nOptional and product-dependent features are considered part of Windows Server 2012 for the purposes of WFAS. \r\n                         \r\n -- ConfigurableServiceStore: This read-write store contains all the service restrictions that are added for third-party services.\r\nIn addition, network isolation rules that are created for Windows Store application containers will appear in this policy store. \r\n                         \r\nThe default value is PersistentStore. \r\nNote: This cmdlet cannot be used to add an object to a policy store.\r\nAn object can only be added to a policy store at creation time with the Copy-NetIPsecMainModeRule cmdlet or with the New-NetIPsecMainModeRule cmdlet.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Profile" data-throw-if-not-resolved="False" />
  name: Profile
  description: "Specifies one or more profiles to which the rule is assigned.\r\nThe rule is active on the local computer only when the specified profile is currently active.\r\nThis relationship is many-to-many and can be indirectly modified by the user, by changing the Profiles field on instances of firewall rules.\r\nOnly one profile is applied at a time. \r\nThe acceptable values for this parameter are: Any, Domain, Private, Public, or NotApplicable. \r\n                         \r\nThe default value is Any. \r\n                         \r\nSeparate multiple entries with a comma and do not include any spaces. \r\nNote: Use the keyword Any to configure the profile as Private, Public, Domain in the ConfigurableServiceStore.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Any, Domain, Private, Public, NotApplicable
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: RemoteAddress
  description: "Specifies that network packets with matching IP addresses match this rule. \r\n                         \r\nThis parameter value is the second end point of an IPsec rule and specifies the computers that are subject to the requirements of this rule. \r\n                         \r\nThis parameter value is an IPv4 or IPv6 address, hostname, subnet, range, or the following keyword: Any. \r\n                         \r\nThe acceptable formats for this parameter are: \r\n                         \r\n -- Single IPv4 Address: 1.2.3.4 \r\n                         \r\n -- Single IPv6 Address: fe80::1 \r\n                         \r\n -- IPv4 Subnet (by network bit count): 1.2.3.4/24 \r\n                         \r\n -- IPv6 Subnet (by network bit count): fe80::1/48 \r\n                         \r\n -- IPv4 Subnet (by network mask): 1.2.3.4/255.255.255.0 \r\n                         \r\n -- IPv4 Range: 1.2.3.4 through 1.2.3.7 \r\n                         \r\n -- IPv6 Range: fe80::1 through fe80::9 \r\nNote: Querying for rules with this parameter can only be performed using filter objects.\r\nSee the Get-NetFirewallAddressFilter cmdlet for more information.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: NetSecurity.Set-NetIPsecMainModeRule
name: Set-NetIPsecMainModeRule
description: |-
  The **Set-NetIPsecMainModeRule** cmdlet modifies firewall properties of existing main mode rules.
  This cmdlet gets one or more main mode rules to be modified with the **Name** parameter (default), the **DisplayName** parameter, or by group association using the **DisplayGroup** or **Group** parameters.
  The rules cannot be queried by property in this cmdlet.
  The Get-NetIPsecMainModeRule cmdlet returns the queried objects and pipes the objects into this cmdlet.
  The remaining parameters specify the properties of the rule to be modified.
  When the **DisplayGroup** or **Group** parameter is specified, then all of the sets associated with the group receive the same modifications.
  The rule parameters modified using the dot-notation are committed using this cmdlet.

  To move a rule to a new GPO, copy the existing rule by running the Copy-NetIPsecMainModeRule cmdlet with the **NewPolicyStore** parameter, then removing the old rule with the Remove-NetIPsecMainModeRule cmdlet.

  Modifying authentication or cryptographic configurations to use the default settings including NetIPsecPhase1AuthSet, NetIPsecMainModeCryptoSet, or with Default flag enabled must be done by using dot-notation
metadata:
  external help file: NetIPsecMainModeRule.cmdletDefinition.cdxml-help.xml
  Module Name: NetSecurity
  ms.date: 10/30/2017
  online version: https://docs.microsoft.com/powershell/module/netsecurity/set-netipsecmainmoderule?view=windowsserver2012r2-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Set-NetIPsecMainModeRule
