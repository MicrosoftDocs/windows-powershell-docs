### YamlMime:PowershellCmdlet
summary: |-
  Gets an IP interface.
module: NetTCPIP
notes: ""
inputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetIPInterface" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
links:
- text: Format-List
  href: https://go.microsoft.com/fwlink/p/?LinkId=113302
- text: Format-Table
  href: https://go.microsoft.com/fwlink/p/?LinkId=113303
- text: Sort-Object
  href: https://go.microsoft.com/fwlink/p/?LinkId=113403
- text: Where-Object
  href: https://go.microsoft.com/fwlink/p/?LinkId=113423
- text: Get-NetRoute
  href: ./Get-NetRoute.yml
- text: Set-NetIPInterface
  href: ./Set-NetIPInterface.yml
syntaxes:
- >-
  Get-NetIPInterface [-InterfaceIndex <UInt32[]>] [[-InterfaceAlias] <String[]>]

   [-AddressFamily <AddressFamily[]>] [-Forwarding <Forwarding[]>] [-Advertising <Advertising[]>]

   [-NlMtuBytes <UInt32[]>] [-InterfaceMetric <UInt32[]>]

   [-NeighborUnreachabilityDetection <NeighborUnreachabilityDetection[]>] [-BaseReachableTimeMs <UInt32[]>]

   [-ReachableTimeMs <UInt32[]>] [-RetransmitTimeMs <UInt32[]>] [-DadTransmits <UInt32[]>]

   [-DadRetransmitTimeMs <UInt32[]>] [-RouterDiscovery <RouterDiscovery[]>]

   [-ManagedAddressConfiguration <ManagedAddressConfiguration[]>]

   [-OtherStatefulConfiguration <OtherStatefulConfiguration[]>] [-WeakHostSend <WeakHostSend[]>]

   [-WeakHostReceive <WeakHostReceive[]>] [-IgnoreDefaultRoutes <IgnoreDefaultRoutes[]>]

   [-AdvertisedRouterLifetime <TimeSpan[]>] [-AdvertiseDefaultRoute <AdvertiseDefaultRoute[]>]

   [-CurrentHopLimit <UInt32[]>] [-ForceArpNdWolPattern <ForceArpNdWolPattern[]>]

   [-DirectedMacWolPattern <DirectedMacWolPattern[]>] [-EcnMarking <EcnMarking[]>] [-Dhcp <Dhcp[]>]

   [-ConnectionState <ConnectionState[]>] [-AutomaticMetric <AutomaticMetric[]>]

   [-NeighborDiscoverySupported <NeighborDiscoverySupported[]>] [-CompartmentId <UInt32[]>]

   [-PolicyStore <String>] [-IncludeAllCompartments] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>]

   [-AsJob] [<CommonParameters>]
- >-
  Get-NetIPInterface [-AssociatedRoute <CimInstance>] [-IncludeAllCompartments] [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [<CommonParameters>]
- >-
  Get-NetIPInterface [-AssociatedIPAddress <CimInstance>] [-IncludeAllCompartments] [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [<CommonParameters>]
- >-
  Get-NetIPInterface [-AssociatedNeighbor <CimInstance>] [-IncludeAllCompartments] [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [<CommonParameters>]
- >-
  Get-NetIPInterface [-AssociatedAdapter <CimInstance>] [-IncludeAllCompartments] [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [<CommonParameters>]
examples:
- title: 'Example 1: Get IP interface configuration'
  code: |-
    PS C:\>Get-NetIPInterface
  description: |-
    This command gets the IP interface configuration on the computer on which you run the cmdlet.
  summary: ""
- title: 'Example 2: Get IP interface information for IPv6 addresses'
  code: |-
    PS C:\>Get-NetIPInterface -AddressFamily IPv6
  description: |-
    This command gets information about the IP interface configuration for all IP interfaces for which you have configured IPv6 addresses.
  summary: ""
- title: 'Example 3: Get IP interface information and format the output'
  code: |-
    PS C:\>Get-NetIPInterface | Format-Table
  description: |-
    This command gets information about IP interface configuration, and displays that information in a table.
  summary: ""
- title: 'Example 4: Get IP interface information by interface index'
  code: |-
    PS C:\>Get-NetIPInterface -InterfaceIndex 12
  description: |-
    This command gets information about the IP interface configuration for a specific interface index.
  summary: ""
- title: 'Example 5: Get and sort IP interface information'
  code: |-
    PS C:\>Get-NetIPInterface | Sort-Object -Property InterfaceIndex | Format-Table
  description: |-
    This command gets information about IP address configuration, sorts them numerically by the interface index in the cmdlet name, and then displays them in a table format.
  summary: ""
- title: 'Example 6: Get the IP interface by specifying the router lifetime'
  code: |-
    PS C:\>Get-NetIPInterface | Where-Object -FilterScript { $_.AdvertisedRouterLifetime.TotalSeconds -Eq 1800 }
  description: |-
    This command gets information about IP address configuration for all IP interfaces that have a default AdvertisedRouterLifetime.
  summary: ""
parameters:
- type: <xref href="AddressFamily" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: AddressFamily
  description: |+
    Specifies an array of IP address families.
    The cmdlet gets the IP interface that matches the address families.
    The acceptable values for this parameter are:

     -- IPv4
     -- IPv6

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: IPv4, IPv6
- type: <xref href="AdvertiseDefaultRoute" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: AdvertiseDefaultRoute
  description: |+
    Specifies an array of default router advertisement values for an IP interface.
    The acceptable values for this parameter are:

     -- Enabled
     -- Disabled

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Disabled, Enabled
- type: <xref href="TimeSpan" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: AdvertisedRouterLifetime
  description: |+
    Specifies an array of lifetimes, as **TimeSpan** objects, for default routes.
    This parameter indicates the lifetime of default routes when advertising routes on the IP interface.
    The default value is 1800.
    Valid only for advertising interfaces.
    To obtain a **TimeSpan** object, use the **New-TimeSpan** cmdlet.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Advertising" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Advertising
  description: |+
    Specifies an array of router advertisement values for the IP interface.
    The acceptable values for this parameter are:

     -- Enabled
     -- Disabled

     The default value is Disabled.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Disabled, Enabled
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    ps_cimcommon_asjob

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: AssociatedAdapter
  description: |+
    Specifies a network adapter as a CIM object.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: AssociatedIPAddress
  description: |+
    Specifies a network IP address as a CIM object.
    To obtain an IP address object, use the Get-NetIPAddress cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: AssociatedNeighbor
  description: |+
    Specifies a network neighbor as a CIM object.
    To obtain a neighbor object, use the Get-NetNeighbor cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: AssociatedRoute
  description: |+
    Specifies a network route as a CIM object.
    To obtain a route object, use the Get-NetRoute cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="AutomaticMetric" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: AutomaticMetric
  description: |+
    Specifies an array of values for the automatic metric calculation.
    Automatic metric determines whether TCP/IP automatically calculates a value for an interface metric that is based on the speed of the interface.
    The fastest interface has the lowest interface metric value.
    The acceptable values for this parameter are:

     -- Enabled
     -- Disabled

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Disabled, Enabled
- type: <xref href="UInt32" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: BaseReachableTimeMs
  description: |+
    Specifies an array of base values of random reachable times, in milliseconds.
    For more information, see RFC 2461http://go.microsoft.com/fwlink/p/?LinkId=84044.
    The default value is 30.

  defaultValue: None
  position: Named
  aliases: BaseReachableTime
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a New-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227967 or Get-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227966 cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="UInt32" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CompartmentId
  description: |+
    Specifies an array of identifiers for network compartments in the protocol stack.
    By default, the cmdlet only gets Net IP interfaces in the default compartment.
    If you specify a value, the cmdlet gets any matching NetIPInterface in all compartments in this field.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ConnectionState" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: ConnectionState
  description: |+
    Specifies an array of connection states for interfaces that are physically connected to a network.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Disconnected, Connected
- type: <xref href="UInt32" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CurrentHopLimit
  description: |+
    Specifies an array of hop limits.
    This parameter is the value that the IP interface writes in the hop limit for IPv6, or the Time To Live (TTL) field, for IPv4, in all outbound traffic.
    When forwarding a packet, routers must decrement the hop limit, or TTL, by 1, and discard the packet when the hop limit reaches 0.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="UInt32" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: DadRetransmitTimeMs
  description: |+
    Specifies an array of values for the time interval between neighbor solicitation messages.

  defaultValue: None
  position: Named
  aliases: DadRetransmitTime
  parameterValueGroup: ""
- type: <xref href="UInt32" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: DadTransmits
  description: |+
    Specifies an array of values for the number of consecutive messages sent while the network driver performs duplicate address detection.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Dhcp" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Dhcp
  description: "Specifies the DHCP value for an IP interface. \r\n                         \r\nThis value is persistent across reboots and only stored in the active policy store. \r\nThe acceptable values for this parameter are:\r\n\r\n -- Enabled\r\n -- Disabled\r\n\r\nThe default value is Enabled.\r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Disabled, Enabled
- type: <xref href="DirectedMacWolPattern" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: DirectedMacWolPattern
  description: |+
    Specifies an array of values for the wake-up packet for an IP interface.
    This parameter determines if an IP interface is configured to wake up a computer with directed MAC packet patterns.
    The acceptable values for this parameter are:

     -- Enabled
     -- Disabled

     The default value is Disabled.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Disabled, Enabled
- type: <xref href="EcnMarking" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: EcnMarking
  description: |+
    Specifies an array of values for Explicit Congestion Notification (ECN) marking.
    This parameter value controls the specific ECN marking in the ECN field of the IP header.
    The acceptable values for this parameter are:


     -- AppDecide.
    Allow an application or higher layer protocol, such as TCP, to decide how to apply ECN marking.
    In order for an application to fully control ECN capability value in the Network TCP value must also be set to enabled. 
     -- Disabled.
    Disable the ECN marking on the IP interface. 
     -- UseEct0.
    Mark all of the egress IP packets on the IP interface with the Ect0 bit set. 
     -- UseEct1.
    Mark all of the egress IP packets on the IP interface with the Ect1 bit set. 


    The default value is AppDecide.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Disabled, UseEct1, UseEct0, AppDecide
- type: <xref href="ForceArpNdWolPattern" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: ForceArpNdWolPattern
  description: |+
    Specifies an array of Wake On LAN (WOL) values for the IP interface.
    This parameter determines if an IP interface is configured to wake up a computer with Address Resolution Protocol (ARP) and Neighbor Discovery (ND) packet patterns.
    By default, IP interface properties have **ForceArpNdWolPattern** set to disabled.
    The acceptable values for this parameter are:

     -- Enabled
     -- Disabled

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Disabled, Enabled
- type: <xref href="Forwarding" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Forwarding
  description: |+
    Specifies an array of packet forwarding values for the IP interface.
    This value determines if this IP interface forwards packets that arrive on this interface to other interfaces.
    The acceptable values for this parameter are:

     -- Enabled
     -- Disabled

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Disabled, Enabled
- type: <xref href="IgnoreDefaultRoutes" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: IgnoreDefaultRoutes
  description: |+
    Specifies an array of values for default route advertisements.
    If you enable this value, default routes will not be dynamically added to the routing table.
    The acceptable values for this parameter are:

     -- Enabled
     -- Disabled

    The default value is Disabled.

  defaultValue: Disabled
  position: Named
  aliases: ""
  parameterValueGroup: Disabled, Enabled
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: IncludeAllCompartments
  description: |+
    Indicates that the cmdlet includes all non-default compartments.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InterfaceAlias
  description: |+
    Specifies an array of aliases of network interfaces.
    The cmdlet gets IP interfaces that match the aliases.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ifAlias
  parameterValueGroup: ""
- type: <xref href="UInt32" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InterfaceIndex
  description: |+
    Specifies an array of indexes of network interfaces.
    The cmdlet gets IP interfaces that match the indexes.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ifIndex
  parameterValueGroup: ""
- type: <xref href="UInt32" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InterfaceMetric
  description: |+
    Specifies an array of metrics of IP interfaces.
    When routes are chosen, the overall metric used to determine the preference is the sum of the route metric and the interface metric.
    Typically, the interface metric gives preference to a particular interface, such as using wired if both wired and wireless are available.
    The default value is automatic.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ManagedAddressConfiguration" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: ManagedAddressConfiguration
  description: |+
    Specifies an array of values of managed address configurations.
    This parameter determines if an IP interface uses a stateful protocol, such as DHCP, to obtain an address.
    Setting this parameter will have no effect on an interface that has router discovery enabled and advertising disabled.
    In that case, the parameter is controlled by router discovery.
    The acceptable values for this parameter are:

     -- Enabled
     -- Disabled

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Disabled, Enabled
- type: <xref href="NeighborDiscoverySupported" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: NeighborDiscoverySupported
  description: |+
    Specifies an array of neighbor discovery values for the IP interface.
    The acceptable values for this parameter are:

     -- Enabled
     -- Disabled

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: No, Yes
- type: <xref href="NeighborUnreachabilityDetection" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: NeighborUnreachabilityDetection
  description: |+
    Specifies an array of values for Neighbor Unreachability Detection (NUD).
    Use this parameter to determine when a neighbor is no longer reachable.
    For more information, see RFC 2461http://go.microsoft.com/fwlink/p/?LinkId=84044.
    The acceptable values for this parameter are:

     -- Enabled
     -- Disabled

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Disabled, Enabled
- type: <xref href="UInt32" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: NlMtuBytes
  description: |+
    Specifies an array of network layer Maximum Transmission Unit (MTU) values, in bytes, for an IP interface.
    The IP interface will not transmit packets larger than the maximum value.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="OtherStatefulConfiguration" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: OtherStatefulConfiguration
  description: |+
    Specifies an array of values for configuration other than addresses.
    This parameter determines if an IP interface uses a stateful protocol, such as DHCP, to obtain configuration information other than addresses.
    This parameter value has no effect on an interface that has router discovery enabled and advertising disabled.
    In that case, the parameter is controlled by router discovery.
    The acceptable values for this parameter are:

     -- Enabled
     -- Disabled

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Disabled, Enabled
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: PolicyStore
  description: |+
    Specifies a **PolicyStore** value.
    The acceptable values for this parameter are:

     -- ActiveStore.
    The IP address information is valid. 
     -- PersistentStore.
    The computer saves IP address information across restarts.
    When the computer restarts, it copies the saved settings to the ActiveStore. 

    The default value is ActiveStore.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="UInt32" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: ReachableTimeMs
  description: |+
    Specifies an array of reachable time values.
    This parameter is the time, in milliseconds, that a node assumes that a neighbor is reachable after having received a reachability confirmation.
    This parameter works with the **NeighborUnreachabilityDetection** parameter.

  defaultValue: None
  position: Named
  aliases: ReachableTime
  parameterValueGroup: ""
- type: <xref href="UInt32" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: RetransmitTimeMs
  description: |+
    Specifies an array of value for timeout and retransmission, in milliseconds, for Neighbor Solicitation messages.
    For more information, see RetransTimer in RFC 2461http://go.microsoft.com/fwlink/p/?LinkId=84044.
    By default, the value is 1000.

  defaultValue: None
  position: Named
  aliases: RetransmitTime
  parameterValueGroup: ""
- type: <xref href="RouterDiscovery" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: RouterDiscovery
  description: |+
    Specifies the value for router discovery for an IP interface.
    The acceptable values for this parameter are:

     -- Enabled
     -- Disabled
     -- ControlledByDHCP.
    IP Interface properties for interfaces that have RouterDiscovery controlled by Dynamic Host Configuration Protocol (DHCP). 

    By default, the value of this parameter is ControlledByDHCP for IPv4 and Enabled for IPv6.
    If the value of this parameter is enabled, an IP host can locate routers that reside on an attached link.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Disabled, Enabled, ControlledByDHCP
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="WeakHostReceive" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: WeakHostReceive
  description: |+
    Specifies the receive value for a weak host model.
    By default, an IP interface properties set this parameter to disabled.
    If this parameter is enabled, an IP host can receive IP packets on an interface that is not assigned the destination IP address of the packet being received.
    The acceptable values for this parameter are:

     -- Enabled
     -- Disabled

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Disabled, Enabled
- type: <xref href="WeakHostSend" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: WeakHostSend
  description: |+
    Specifies the send value for a weak host model.
    By default, an IP interface set this parameter to disabled.
    If this parameter is enabled, an IP host can send IP packets on an interface that is not assigned the destination IP address of the packet being sent.
    The acceptable values for this parameter are:

     -- Enabled
     -- Disabled

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Disabled, Enabled
uid: NetTCPIP.Get-NetIPInterface
name: Get-NetIPInterface
description: |-
  The **Get-NetIPInterface** cmdlet gets an IP interface, including IPv4 and IPv6 addresses, and the associated address configuration for the IP interfaces.
  Without parameters, this cmdlet gets all of the IP interface properties on the computer, including virtual interfaces and loopback interfaces.
metadata:
  external help file: MSFT_NetIPInterface.cdxml-help.xml
  Module Name: NetTCPIP
  ms.date: 10/29/2017
  online version: https://docs.microsoft.com/powershell/module/nettcpip/get-netipinterface?view=windowsserver2012r2-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Get-NetIPInterface
