### YamlMime:PowershellCmdlet
summary: |-
  Removes neighbor cache entries.
module: NetTCPIP
notes: ""
inputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetNeighbor" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
outputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-NetNeighbor
  href: ./Get-NetNeighbor.yml
- text: New-NetNeighbor
  href: ./New-NetNeighbor.yml
- text: Set-NetNeighbor
  href: ./Set-NetNeighbor.yml
- text: Get-NetAdapter
  href: ../netadapter/Get-NetAdapter.yml
syntaxes:
- >-
  Remove-NetNeighbor [[-IPAddress] <String[]>] [-InterfaceIndex <UInt32[]>] [-InterfaceAlias <String[]>]

   [-LinkLayerAddress <String[]>] [-State <State[]>] [-AddressFamily <AddressFamily[]>]

   [-AssociatedIPInterface <CimInstance>] [-PolicyStore <String>] [-IncludeAllCompartments]

   [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [-PassThru] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  Remove-NetNeighbor -InputObject <CimInstance[]> [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob]

   [-PassThru] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Remove unreachable neighbor cache entries'
  code: |-
    PS C:\>Remove-NetNeighbor -State Unreachable
  description: |-
    This command removes all neighbor cache entries that are unreachable.
  summary: ""
- title: 'Example 2: Remove neighbor cache entries associated with a network adapter'
  code: |-
    PS C:\>Get-NetAdapter | Where-Object -FilterScript {$_.LinkSpeed -Eq "100 Mbps"} | Remove-NetNeighbor -AddressFamily IPv4
  description: |-
    This command gets a **NetAdapter** object that contains network adapters, and then passes the **NetAdapter** object to the **Where-Object** cmdlet by using the pipeline operator.
    The **Where-Object** cmdlet filters the network adapters that have a link speed of 100 Mbps, and then passes the network **NetAdapter** object to the Remove-NetNeighbor cmdlet.
    The Remove-NetNeighbor cmdlet  removes all neighbor cache entries that have IPv4 addresses and are associated with a network adapter that has a link speed of 100 Mbps.
  summary: ""
parameters:
- type: <xref href="AddressFamily" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: AddressFamily
  description: |+
    Specifies an array of IP address families.
    The cmdlet removes the neighbor cache entries that belong to the IP address families you specify.
    The acceptable values for this parameter are:

    - IPv4
    - IPv6

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: IPv4, IPv6
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    ps_cimcommon_asjob

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: AssociatedIPInterface
  description: |+
    Specifies an IP interface as a **CIM** object.
    The cmdlet removes neighbor cache entries that belong to this interface.
    To obtain an IP interface, use the Get-NetIPInterface cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a New-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227967 or Get-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227966 cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: IncludeAllCompartments
  description: |+
    Indicates that the cmdlet includes neighbor cache entries from all configured network compartments.
    If you do not specify this parameter, the cmdlet removes only neighbor cache entries in the default network compartment.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InputObject
  isRequired: true
  description: |+
    Specifies the input to this cmdlet.
    You can use this parameter, or you can pipe the input to this cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InterfaceAlias
  description: |+
    Specifies an array of aliases of network interfaces.
    The cmdlet removes neighbor cache entries for the network interfaces that have the aliases you specify.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ifAlias
  parameterValueGroup: ""
- type: <xref href="UInt32" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InterfaceIndex
  description: |+
    Specifies an array of indexes of network interfaces.
    The cmdlet removes neighbor cache entries for the network interfaces located at the indexes you specify.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ifIndex
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: IPAddress
  description: |+
    Specifies an array of IP addresses.
    The cmdlet removes neighbor cache entries that have the IP addresses you specify.

  defaultValue: None
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: LinkLayerAddress
  description: |+
    Specifies an array of link-layer addresses of the neighbor cache entry.
    The cmdlet removes the neighbor cache entries that have the link-layer addresses you specify.

    The link-layer address is also called the media access control (MAC) address.
    A link-layer address that uses IPv4 address syntax is a tunnel technology that encapsulates packets over an IPv4 tunnel, such as Intra-Site Automatic Tunnel Addressing Protocol (ISATAP) or Teredo.
    A link-layer address of all zeroes indicates that the neighbor is unreachable and the neighbor cache entry does not have a link-layer address entry.
    An empty link-layer address indicates that the link layer does not use link-layer addresses, such as on a loopback interface.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns an object representing the item with which you are working.
    By default, this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: PolicyStore
  description: |+
    Specifies a **PolicyStore** value.
    The cmdlet removes the neighbor cache entries that have the **PolicyStore** value you specify.
    The acceptable values for this parameter are:

    - ActiveStore: The IP address information is valid. 
    - PersistentStore: The computer saves IP address information across restarts.
    When the computer restarts, it copies the saved settings to the ActiveStore.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="State" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: State
  description: |+
    Specifies an arrary of states of neighbor cache entries.
    The cmdlet removes the neighbor cache entries that have the states you specify.
    The neighbor cache contains information maintained by Neighbor Unreachability Detection.
    Neighbor Unreachability Detection for IPv4 tracks the reachable state of IPv4 nodes in the IPv4 route cache.
    The acceptable values for this parameter are:

    - Unreachable.
    The IP address is unreachable. 
    - Incomplete.
    Address resolution is in progress and Neighbor Unreachability Detection has not determined the link-layer address of the neighbor. 
    - Probe.
    The neighbor is no longer known to be reachable, and Neighbor Unreachability Detection is sending unicast Neighbor Solicitation probes to verify reachability. 
    - Delay.
    The neighbor is no longer known to be reachable, and traffic was recently sent to the neighbor.
    Neighbor Unreachability Detection does not probe the neighbor immediately.
    Neighbor Unreachability Detection delays sending probes for a short time  so that the upper layer protocols can provide reachability confirmation. 
    - Stale.
    The neighbor is no longer known to be reachable.
    and Until traffic is sent to the neighbor, Neighbor Unreachability Detection makes no attempt to verify its reachability. 
    - Reachable.
    The neighbor is known to have been reachable recently, within the last minute. 
    - Permanent.
    The neighbor is statically provisioned and will not expire unless you remove it  through configuration. 
    - Maximum.
    A maximum value for testing purposes.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Unreachable, Incomplete, Probe, Delay, Stale, Reachable, Permanent
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: NetTCPIP.Remove-NetNeighbor
name: Remove-NetNeighbor
description: |-
  The **Remove-NetNeighbor** cmdlet removes neighbor cache entries.
  The neighbor cache maintains information for each on-link neighbor, including the IP address and the associated link-layer address.
metadata:
  external help file: MSFT_NetNeighbor.cdxml-help.xml
  Module Name: NetTCPIP
  ms.date: 10/29/2017
  online version: https://docs.microsoft.com/powershell/module/nettcpip/remove-netneighbor?view=windowsserver2012r2-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Remove-NetNeighbor
