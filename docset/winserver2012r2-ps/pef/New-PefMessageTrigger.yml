### YamlMime:PowershellCmdlet
summary: |-
  Creates a trigger based on detecting a filter match for a specific message in a PEF Trace Session.
module: PEF
notes: ""
links:
- text: New-PefProcessTrigger
  href: ./New-PefProcessTrigger.yml
- text: New-PefTimeSpanTrigger
  href: ./New-PefTimeSpanTrigger.yml
- text: New-PefDateTimeTrigger
  href: ./New-PefDateTimeTrigger.yml
- text: New-PefKeyDownTrigger
  href: ./New-PefKeyDownTrigger.yml
- text: Add-PefMessageSource
  href: ./Add-PefMessageSource.yml
- text: Stop-PefTraceSession
  href: ./Stop-PefTraceSession.yml
- text: New-PefTraceSession
  href: ./New-PefTraceSession.yml
syntaxes:
- New-PefMessageTrigger [-PEFSession] <IPpkTraceSession> [-Filter] <String> [-Repeat] [<CommonParameters>]
examples:
- title: 'Example 1: Stop a Trace Session based on a filtered message type'
  code: |-
    PS C:\> $TraceSession01 = New-PefTraceSession -Mode Linear -Name ".\myTrace.matu" -SaveOnStop -Path "C:\Traces\Result.matu"
    PS C:\> Add-PefMessageSource -PEFSession $TraceSession01 -Source "Microsoft-PEF-WFP-MessageProvider"
    PS C:\> $Trigger01 = New-PefMessageTrigger -Filter "icmp"
    PS C:\> Stop-PefTraceSession -PEFSession $TraceSession01 -Trigger $Trigger01
    PS C:\> Start-PefTraceSession -PEFSession $TraceSession01
  description: |-
    This example starts a PEF Trace Session in linear capture mode.
    The Trace Session continues until ICMP traffic is detected or certain disk quotas are reached on the computer where the Trace Session is running.

    The first command uses the New-PefTraceSession cmdlet to create a Trace Session object and stores it in the **$TraceSession01** variable.
    This cmdlet also uses the **Name** and **Path** parameters to specify a source file for data input and a save location for trace results, respectively.

    The second command uses the Add-PefMessageSource cmdlet to specify a provider for the Trace Session stored in **$TraceSession01**.

    The third command uses the New-PefMessageTrigger cmdlet to create a new message trigger object and stores it in the **$Trigger01** variable.

    The fourth command uses the Stop-PefTraceSession cmdlet to create a stop action for the trigger stored in **$Trigger01** and associates that action with the Trace Session stored in **$Trace Session01**.

    The fifth command uses the Start-PefTraceSession cmdlet to start the Trace Session stored in **$TraceSession01**.
    The **SaveOnStop** parameter in the New-PefTraceSession cmdlet causes the Trace Session to be saved to the specified file location and format after the first ICMP protocol message is parsed.
  summary: ""
parameters:
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Filter
  isRequired: true
  description: |+
    Specifies a trace filter.
    You can use the Set-PefTraceFilter cmdlet to create the trace filter that defines the type of message that stops the Trace Session.

  defaultValue: None
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IPpkTraceSession" data-throw-if-not-resolved="False" />
  name: PEFSession
  isRequired: true
  description: |+
    Specifies a PEF Trace Session.
    To create a Trace Session, use the New-PefTraceSession cmdlet.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Repeat
  description: |+
    Indicates that a trigger runs on each occurrence of a specified event.
    If you do not specify this parameter, the trigger runs only once.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: PEF.New-PefMessageTrigger
name: New-PefMessageTrigger
description: |-
  The **New-PefMessageTrigger** cmdlet creates a trigger based on detecting a filter match for a specific message in a PEF Trace Session.
  You can use a message trigger to start, stop, save, and filter a Protocol Engineering Framework (PEF) Trace Session based on any valid filter, for example, a protocol name such as ARP or ICMP.
  The trigger becomes active when you associate it to a PEF action.
metadata:
  external help file: Microsoft.Protocols.Tools.PowerShell.dll-Help.xml
  Module Name: PEF
  ms.date: 10/30/2017
  online version: https://docs.microsoft.com/powershell/module/pef/new-pefmessagetrigger?view=windowsserver2012r2-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: New-PefMessageTrigger
