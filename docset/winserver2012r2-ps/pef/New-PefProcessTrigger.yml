### YamlMime:PowershellCmdlet
summary: |-
  Creates a trigger that signals when a process exits.
module: PEF
notes: ""
links:
- text: New-PefTraceSession
  href: ./New-PefTraceSession.yml
- text: Add-PefMessageSource
  href: ./Add-PefMessageSource.yml
- text: New-PefDateTimeTrigger
  href: ./New-PefDateTimeTrigger.yml
- text: Stop-PefTraceSession
  href: ./Stop-PefTraceSession.yml
- text: Start-PefTraceSession
  href: ./Start-PefTraceSession.yml
syntaxes:
- New-PefProcessTrigger [-FilePath] <String> [[-Arguments] <String>] [-Repeat] [<CommonParameters>]
examples:
- title: 'Example 1: Create a trigger that invokes a process'
  code: |-
    PS C:\> $TraceSession01 = New-PefTraceSession -Mode Linear -Name ".\myTrace.matu" -SaveOnStop -Path "C:\Traces\result.matu" -Force
    PS C:\> Add-PefMessageSource -PEFSession $TraceSession01 -Source "Microsoft-Pef-WFP-MessageProvider"
    PS C:\> Stop-PefTraceSession -PEFSession $TraceSession01 -Trigger (New-PefDateTimeTrigger ($dt=Get-Date).AddMinutes(10))
    PS C:\> Start-PefTraceSession -PEFSession $TraceSession01 -Trigger (New-PefProcessTrigger -FilePath C:\Windows\system32\PING.EXE -Arguments "www.contoso.com -4")
  description: |-
    This example adds a trigger to a linear PEF Trace Session that invokes the ping.exe process when the Start-PefTraceSession cmdlet runs.
    The session actually starts when the ping command completes.

    The first command uses the New-PefTraceSession cmdlet to create a Trace Session object and stores it in the **$TraceSession01** variable.

    The second command uses the Add-PefMessageSource cmdlet to add a provider for the Trace Session stored in the **$TraceSession01** variable.

    The third command uses the Stop-PefTraceSession cmdlet to stop the Trace Session stored in the **$TraceSession01** variable ten minutes after the session starts, by using the New-PefDateTimeTrigger cmdlet.

    The fourth command uses the Start-PefTraceSession cmdlet to start the Trace Session stored in the **$TraceSession01** variable.
    The invoked process in the example is Ping.exe, which pings a location specified by the **Arguments** parameter.
    The sessions starts when the invoked process stops.
    Note that the 4 parameter value forces the use of IPv4; if unspecified, the default IP transport is used.
  summary: ""
parameters:
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Arguments
  description: |+
    Specifies parameters or parameter values that the cmdlet requires to invoke a process.

  defaultValue: None
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: FilePath
  isRequired: true
  description: |+
    Specifies the path and file name of the executable file that is to be invoked.

  defaultValue: None
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Repeat
  description: |+
    Indicates that the trigger runs on each occurrence of invoking a process.
    If you do not specify this parameter, the trigger runs only once.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: PEF.New-PefProcessTrigger
name: New-PefProcessTrigger
description: |-
  The **New-PefProcessTrigger** cmdlet creates a trigger that signals when a process exits.
  You can use this process trigger to invoke a process at the time you start a Protocol Engineering Framework (PEF) Trace Session with the Start-PefTraceSession cmdlet.
  The trigger executes the process when it becomes associated with a PEF action.
  When the process exits, the trigger signals.
  The trigger becomes active when you associate it to a PEF action.
metadata:
  external help file: Microsoft.Protocols.Tools.PowerShell.dll-Help.xml
  Module Name: PEF
  ms.date: 10/30/2017
  online version: https://docs.microsoft.com/powershell/module/pef/new-pefprocesstrigger?view=windowsserver2012r2-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: New-PefProcessTrigger
