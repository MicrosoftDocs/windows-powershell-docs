### YamlMime:PowershellCmdlet
summary: |-
  Gets information about Windows Server roles, role services, and features that are available for installation and installed on a specified server.
module: ServerManager
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: ""
outputs:
- name: <xref href="Microsoft.Windows.ServerManager.Commands.Feature" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: ""
links:
- text: Install-WindowsFeature
  href: ./Install-WindowsFeature.yml
- text: Uninstall-WindowsFeature
  href: ./Uninstall-WindowsFeature.yml
- text: Enable-ServerManagerStandardUserRemoting
  href: ./Enable-ServerManagerStandardUserRemoting.yml
- text: Disable-ServerManagerStandardUserRemoting
  href: ./Disable-ServerManagerStandardUserRemoting.yml
syntaxes:
- >-
  Get-WindowsFeature [[-Name] <String[]>] [-Vhd <String>] [-ComputerName <String>] [-Credential <PSCredential>]

   [-LogPath <String>] [<CommonParameters>]
examples:
- title: EXAMPLE 1
  code: |-
    PS C:\> Get-WindowsFeature -ComputerName Server1 -Credential contoso.com\user1
  description: |-
    This example gets a list of features that is available and installed on the target computer named Server1.
    The credentials for user user1 in the Contoso.com domain, a user who has Administrator rights on Server1, are provided.
  summary: ""
- title: EXAMPLE 2
  code: |-
    PS C:\> Get-WindowsFeature -Vhd D:\ps-test\vhd1.vhd
  description: |-
    This example returns a list of features that is available and installed on the specified offline VHD located at D:\ps-test\vhd1.vhd.
  summary: ""
- title: EXAMPLE 3
  code: |-
    PS C:\> Get-WindowsFeature -Name AD*, Web*
  description: |-
    This example returns a list of available and installed features that have a command ID starting with AD or Web.
  summary: ""
- title: EXAMPLE 4
  code: |-
    PS C:\> Get-WindowsFeature -ComputerName Server01 | Where Installed
  description: |-
    This example returns a list of features installed on a specified server, Server01.
  summary: ""
- title: EXAMPLE 5
  code: |-
    PS C:\> Get-WindowsFeature -ComputerName Server01 | Where InstallState -Eq Removed
  description: |-
    This example returns a list of features on a specified server, Server01, that have installation files removed from the local side-by-side store, and require an external file source for installation.
  summary: ""
parameters:
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ComputerName
  description: |+
    Gets the list of available rrsandf_plural from the specified remote computer that is running Windows Server 2012 R2.
    The parameter accepts only one computer name.
    If this parameter is not added, or no computer name is specified, the default target is the local computer.
    Valid values for the parameter include a NetBIOS name, an IP address, or a fully qualified domain name of a remote computer.

    To use a remote computer's IP address as the value of this parameter, your command must include the `Credential` parameter.
    The computer must either be configured for HTTPS transport, or the IP address of the remote computer must be included in the WinRM TrustedHosts list on the local computer.
    For information about adding a computer name to the WinRM TrustedHosts list, see "How to Add a Computer to the Trusted Host List" in about_Remote_Troubleshootinghttp://go.microsoft.com/fwlink/p/?LinkID=135188.

  defaultValue: None
  position: Named
  aliases: Cn
  parameterValueGroup: ""
- type: <xref href="PSCredential" data-throw-if-not-resolved="False" />
  name: Credential
  description: |+
    Specifies a user account that has access rights to perform this action.
    If the parameter is not added, or no value is specified, the default value of this parameter is the current user.
    Enter a user name in one of the following formats.
    Quotation marks are optional.

    -- "UserName"
    -- "Domain\User"
    -- "User@Domain.com"
    -- A Credential object returned by the Get-Credentialhttp://go.microsoft.com/fwlink/p/?LinkID=113311 cmdlet.

    If a user name is entered, then a prompt for a password is displayed.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: LogPath
  description: |+
    Specifies a name and path to a log file.
    Add this parameter if the results of this cmdlet must be stored in a log.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Name
  description: |+
    Specifies the command IDs of roles, role services, or features about which to return information.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Vhd
  description: |+
    Specifies the path to an offline VHD.
    The path can either point to a VHD file, or to a location on which the VHD is already mounted by using Deployment Image Servicing and Management (DISM) tools.

    The VHD can be on a local disk on the target computer, or on a network shared folder.
    If the VHD is in a network shared folder, then the value of this parameter is a UNC path to the VHD.
    In this case, the computer account of the computer that you are using to mount the VHD must have read and write permissions (Read/Write permissions in the File Sharing dialog box, or Full Control on the Security tab of the folder Properties dialog box) on the shared folder, or the VHD will not be accessible.
    Local loopback UNC paths are not supported.
    Use either of the following formats for the computer account: DOMAIN\SERVERNAME$ or SERVERNAME$.

    Add the `ComputerName` parameter to specify the target computer you want to use to mount the VHD.
    If the `ComputerName` parameter is not specified, then the local computer is used.
    The computer that you are using to mount the VHD must be running Windows Server 2012 R2.
    Any local path, such as D:\myFolder, that is specified by using this parameter is always relative to the target computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: ServerManager.Get-WindowsFeature
name: Get-WindowsFeature
description: |-
  The `Get-WindowsFeature` cmdlet gets information about features that are both available for installation and already installed on a computer that is running Windows Server 2012 R2 or an offline virtual hard disk (VHD) that is running Windows Server 2012 R2.
metadata:
  external help file: Microsoft.Windows.ServerManager.PowerShell.dll-Help.xml
  Module Name: ServerManager
  ms.date: 10/29/2017
  online version: https://docs.microsoft.com/powershell/module/servermanager/get-windowsfeature?view=windowsserver2012r2-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Get-WindowsFeature
