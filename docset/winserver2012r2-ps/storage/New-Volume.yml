### YamlMime:PowershellCmdlet
summary: |-
  Creates a volume with the specified file system.
module: Storage
notes: |-
  * To create a volume on a new storage space with enclosure-awareness enabled (providing resiliency for an entire JBOD enclosure failure), use the **Set-StoragePool** cmdlet with the **-EnclosureAwareDefault $true** parameter to set the storage pool to create storage spaces with enclosure awareness enabled by default.
inputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/Microsoft/Windows/Storage/MSFT_StoragePool" data-throw-if-not-resolved="False" />
  description: |-
    You can use the pipeline operator to pass an MSFT_StoragePool object to the InputObject parameter.
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root/Microsoft/Windows/Storage/MSFT_Volume" data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet outputs an object that represents the newly created volume.
syntaxes:
- >-
  New-Volume [-StoragePoolFriendlyName] <String[]> -FriendlyName <String> [-Size <UInt64>]

   -FileSystem <FileSystem> [-AccessPath <String>] [-ResiliencySettingName <String>]

   [-ProvisioningType <ProvisioningType>] [-PhysicalDiskRedundancy <UInt16>] [-NumberOfColumns <UInt16>]

   [-StorageTiers <CimInstance[]>] [-StorageTierSizes <UInt64[]>] [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [<CommonParameters>]
- >-
  New-Volume -StoragePoolUniqueId <String[]> -FriendlyName <String> [-Size <UInt64>] -FileSystem <FileSystem>

   [-AccessPath <String>] [-ResiliencySettingName <String>] [-ProvisioningType <ProvisioningType>]

   [-PhysicalDiskRedundancy <UInt16>] [-NumberOfColumns <UInt16>] [-StorageTiers <CimInstance[]>]

   [-StorageTierSizes <UInt64[]>] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob]

   [<CommonParameters>]
- >-
  New-Volume -StoragePoolName <String[]> -FriendlyName <String> [-Size <UInt64>] -FileSystem <FileSystem>

   [-AccessPath <String>] [-ResiliencySettingName <String>] [-ProvisioningType <ProvisioningType>]

   [-PhysicalDiskRedundancy <UInt16>] [-NumberOfColumns <UInt16>] [-StorageTiers <CimInstance[]>]

   [-StorageTierSizes <UInt64[]>] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob]

   [<CommonParameters>]
- >-
  New-Volume -InputObject <CimInstance[]> -FriendlyName <String> [-Size <UInt64>] -FileSystem <FileSystem>

   [-AccessPath <String>] [-ResiliencySettingName <String>] [-ProvisioningType <ProvisioningType>]

   [-PhysicalDiskRedundancy <UInt16>] [-NumberOfColumns <UInt16>] [-StorageTiers <CimInstance[]>]

   [-StorageTierSizes <UInt64[]>] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob]

   [<CommonParameters>]
examples:
- title: 'Example 1: Create a volume on a mirror space'
  code: |-
    PS C:\> New-Volume -StoragePoolName "CompanyData" -FriendlyName "TestVolume" -Size 10GB -ResiliencySettingName "Mirror" -FileSystem NTFS -AccessPath "M: "-ProvisioningType Fixed
  description: |-
    This command creates a new storage space in the CompanyData pool using the Mirror resiliency setting and fixed provisioning, and then formats the volume with the NTFS file system and assigns drive letter M.
  summary: ""
- title: 'Example 2: Create a volume on a new tiered storage space'
  code: |-
    PS C:\>New-Volume -StoragePoolFriendlyName "CompanyData" -FriendlyName "UserData" -AccessPath "M:" -ResiliencySettingName "Mirror" -ProvisioningType "Fixed" -StorageTiers (Get-StorageTier -FriendlyName "*SSD*"), (Get-StorageTier -FriendlyName "*HDD*") -StorageTierSizes 20GB, 80GB -FileSystem NTFS
  description: |-
    This command creates new storage space in the CompanyData pool using the Mirror resiliency setting, fixed provisioning, a 20 GB SSD storage tier, and an 80 GB HDD storage tier, and then formats the volume with the NTFS file system and assigns drive letter M.
  summary: ""
parameters:
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: AccessPath
  description: |+
    Specifies a drive letter or a mount point to assign to the volume.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    ps_cimcommon_asjob

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a New-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227967 or Get-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227966 cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="FileSystem" data-throw-if-not-resolved="False" />
  name: FileSystem
  isRequired: true
  description: |+
    Specifies the file system to use for the volume.
    The cmdlet formats the volume with the file system you specify.
    The acceptable values for this parameter are:

    - NTFS 
    - ReFS 
    - CSVFS_NTFS 
    - CSVFS_ReFS

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: NTFS, ReFS, CSVFS_NTFS, CSVFS_ReFS
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: FriendlyName
  isRequired: true
  description: |+
    Specifies a friendly name.
    The cmdlet creates the volume with this name.

  defaultValue: None
  position: Named
  aliases: VolumeFriendlyName
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InputObject
  isRequired: true
  description: |+
    Specifies the input to this cmdlet.
    You can use this parameter, or you can pipe the input to this cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="UInt16" data-throw-if-not-resolved="False" />
  name: NumberOfColumns
  description: |+
    Specifies the number of columns to create on the virtual disk.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="UInt16" data-throw-if-not-resolved="False" />
  name: PhysicalDiskRedundancy
  description: |+
    Specifies the physical disk redundancy value to use during the creation of the virtual disk.
    This value represents how many failed physical disks the virtual disk can tolerate without data loss for two-way mirror spaces (1), three-way mirror spaces (2), single-parity spaces (1), and dual parity spaces (2)..

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ProvisioningType" data-throw-if-not-resolved="False" />
  name: ProvisioningType
  description: |+
    Specifies the type of provisioning. 
    The acceptable values for this parameter are: Fixed, or Thin.
    Storage spaces that use storage tiers or dual parity must use Fixed provisioning.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Unknown, Thin, Fixed
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ResiliencySettingName
  description: |+
    Specifies the name of the desired resiliency setting, for example, Simple, Mirror, or Parity.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="UInt64" data-throw-if-not-resolved="False" />
  name: Size
  description: |+
    Specifies the size of the volume to create.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: StoragePoolFriendlyName
  isRequired: true
  description: |+
    Specifies an array of storage pool friendly names.
    The cmdlet creates the volume in the storage pools you specify.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: StoragePoolName
  isRequired: true
  description: |+
    Specifies an array of storage pool names.
    The cmdlet creates the volume in the storage pools you specify.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: StoragePoolUniqueId
  isRequired: true
  description: |+
    Specifies an array of unique IDs, as strings.
    The cmdlet creates the volume in the storage pools you specify.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: StoragePoolId
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: StorageTiers
  description: |+
    Specifies an array of storage tiers.
    The cmdlet creates the virtual disk for the volume with the storage tiers you specify.
    To obtain a storage tier object, use the New-StorageTier cmdlet.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="UInt64" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: StorageTierSizes
  description: |+
    Specifies an array of storage tier sizes.
    The cmdlet creates the virtual disk for the volume with the storage tier sizes you specify.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShellÂ® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: Storage.New-Volume
name: New-Volume
description: |-
  The **New-Volume** cmdlet creates a volume with the specified file system.
  The cmdlet manages the creation of the virtual disk with the specified size and resiliency setting, initializes the disk, creates a partition on it and formats the volume with the specified file system, including Cluster Shared Volumes (CSVs).
metadata:
  external help file: StoragePool.cdxml-help.xml
  Module Name: Storage
  ms.date: 10/29/2017
  online version: https://docs.microsoft.com/powershell/module/storage/new-volume?view=windowsserver2012r2-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: New-Volume
