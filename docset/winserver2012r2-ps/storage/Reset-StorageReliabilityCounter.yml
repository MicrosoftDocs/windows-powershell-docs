### YamlMime:PowershellCmdlet
summary: |-
  Resets storage reliability counters for a disk.
module: Storage
notes: ""
inputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/Microsoft/Windows/Storage/MSFT_StorageReliabilityCounter" data-throw-if-not-resolved="False" />
  description: |-
    You can use the pipeline operator to pass an arrary of MSFT_StorageReliabilityCounter objects to the **InputObject** parameter.
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/Microsoft/Windows/Storage/MSFT_StorageReliabilityCounter" data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet outputs an array of objects that represent storage reliability counter data.
links:
- text: Get-StorageReliabilityCounter
  href: ./Get-StorageReliabilityCounter.yml
- text: Get-PhysicalDisk
  href: ./Get-PhysicalDisk.yml
syntaxes:
- >-
  Reset-StorageReliabilityCounter -PhysicalDisk <CimInstance> [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [-PassThru] [<CommonParameters>]
- >-
  Reset-StorageReliabilityCounter -Disk <CimInstance> [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>]

   [-AsJob] [-PassThru] [<CommonParameters>]
- >-
  Reset-StorageReliabilityCounter -InputObject <CimInstance[]> [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [-PassThru] [<CommonParameters>]
examples:
- title: 'Example 1: Reset the reliability counters for two physical disks'
  code: |-
    PS C:\> $Counter1 = Get-StorageReliabilityCounter -PhysicalDisk (Get-PhysicalDisk "PhysicalDisk01")
    PS C:\> $Counter2 = Get-StorageReliabilityCounter -PhysicalDisk (Get-PhysicalDisk "PhysicalDisk02")
    PS C:\> Reset-StorageReliabilityCounter -InputObject $Counter1, $Counter2
  description: |-
    The first command gets the storage reliability counters for the physical disk named PhysicalDisk01, and stores the counters in the **$Counter1** variable.

    The second command gets the storage reliability counters for the physical disk named PhysicalDisk02, and stores the counters in the **$Counter2** variable.

    The last command resets the storage reliability counters for the physical disks stored in **$Counter1** and **$Counter2**.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    ps_cimcommon_asjob

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a New-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227967 or Get-CimSessionhttp://go.microsoft.com/fwlink/p/?LinkId=227966 cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: Disk
  isRequired: true
  description: |+
    Specifies a disk as a **CIMInstance** object.
    The cmdlet resets the storage reliability counter for the disk that you specify.
    To obtain a disk, use the Get-Disk cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InputObject
  isRequired: true
  description: |+
    Specifies the input to this cmdlet.
    You can use this parameter, or you can pipe the input to this cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns an object representing the item with which you are working.
    By default, this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: PhysicalDisk
  isRequired: true
  description: |+
    Specifies a physical disk as a **CIMInstance** object.
    The cmdlet resets the storage reliability counter for the physical disk that you specify.
    To obtain a physical disk object, use the Get-PhysicalDisk cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShellÂ® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: Storage.Reset-StorageReliabilityCounter
name: Reset-StorageReliabilityCounter
description: |-
  The **Reset-StorageReliabilityCounter** cmdlet resets the storage reliability counters to zero for a virtual disk or physical disk.
  The cmdlet resets the following storage reliability counters for I/O operations: read latency, write latency, and flush latency.
  If an unexpected issue with a disk or driver causes high latency, use this cmdlet to discount the sharp rise in latencies when you monitor I/O performance.
metadata:
  external help file: StorageReliabilityCounter.cdxml-help.xml
  Module Name: Storage
  ms.date: 10/29/2017
  online version: https://docs.microsoft.com/powershell/module/storage/reset-storagereliabilitycounter?view=windowsserver2012r2-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Reset-StorageReliabilityCounter
