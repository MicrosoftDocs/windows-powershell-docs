### YamlMime:PowershellCmdlet
summary: |-
  Gets the current status of a job instance.
module: WasPSExt
notes: ""
links:
- text: Windows Assessment Services Technical Reference
  href: https://go.microsoft.com/fwlink/?LinkId=215628
- text: Get-WASJob
  href: ./Get-WASJob.yml
- text: Get-WASJobInstance
  href: ./Get-WASJobInstance.yml
syntaxes:
- Get-WASJobInstanceStatus [-JobInstance] <WASJobInstance[]> [<CommonParameters>]
examples:
- title: 'Example 1: Get detailed status of a running job'
  code: |-
    The first command gets the job and saves it as a variable.
    PS C:\> $job = Get-WASJob -JobName *Automated*

    The second command gets the job instances that are running, and saves it as a variable.
    PS C:\> $instance = Get-WASJobInstance -Job $job | where {$_.IsComplete -eq $false}

    The third command displays the status of the job instances.
    PS C:\> Get-WASJobInstanceStatus -JobInstance $instance
  description: ""
  summary: ""
- title: 'Example 2: Get a list of computers still running within a specified job instance'
  code: |-
    The first command gets the job and saves it as a variable.
    PS C:\> $job = Get-WASJob -JobName *Automated*

    The second command gets the job instances that are running, and saves it as a variable.
    PS C:\> $instance = Get-WASJobInstance -Job $job | where {$_.IsComplete -eq $false}

    The third command gets the computers that are running for that job instance.
    PS C:\> $runningComps = foreach ($status in Get-WASJobInstanceStatus -JobInstance $instance) { foreach ($comp in $status.computers) { if ($comp.Status -eq "Running") { $comp.Computer} }}

    The fourth command formats the output data as a table.
    PS C:\> format-table -property ComputerName,Location,RebootRequired -inputobject $runningComps
  description: ""
  summary: ""
parameters:
- type: <xref href="WASJobInstance" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: JobInstance
  isRequired: true
  description: |+
    Specifies the job instance that you want to get status for.
    Use the **Get-WASJobInstance** cmdlet to get the job instance object to use with this parameter.
    This is a required parameter.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
uid: WasPSExt.Get-WASJobInstanceStatus
name: Get-WASJobInstanceStatus
description: |-
  The **Get-WASJobInstanceStatus** cmdlet gets the current status of the specified job instance, including the computers and the tasks running on the computers.
  The **JobInstance** parameter is required.
metadata:
  external help file: Microsoft.Assessments.WAS.PowerShell.dll-Help.xml
  Module Name: WasPSExt
  ms.date: 12/05/2017
  online version: https://docs.microsoft.com/powershell/module/waspsext/get-wasjobinstancestatus?view=windowsserver2012r2-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Get-WASJobInstanceStatus
