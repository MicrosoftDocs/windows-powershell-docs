### YamlMime:PowershellCmdlet
summary: |-
  Sets permission settings for a sp_online_2 securable object.
module: WSSCmdlets
notes: ""
inputs:
- name: <xref href="Microsoft.WindowsServerSolutions.O365Integration.SharePointLibrary,Microsoft.WindowsServerSolutions.O365Integration.SharePointSite" data-throw-if-not-resolved="False" />
  description: |-
    Library -- Type: Microsoft.WindowsServerSolutions.O365Integration.SharePointLibrary -- Description: SharePoint library

    Site -- Type: Microsoft.WindowsServerSolutions.O365Integration.SharePointSite -- Description: SharePoint site
links:
- text: Get-WssMsoSharePointPermission
  href: ./Get-WssMsoSharePointPermission.yml
- text: Remove-WssMsoSharePointPermission
  href: ./Remove-WssMsoSharePointPermission.yml
syntaxes:
- >-
  Set-WssMsoSharePointPermission [-Library] <SharePointLibrary> [-User] <SharePointUser>

   [-Permission] <WssMsoSharePointPermissionType> [<CommonParameters>]
- >-
  Set-WssMsoSharePointPermission [-Site] <SharePointSite> [-User] <SharePointUser>

   [-Permission] <WssMsoSharePointPermissionType> [<CommonParameters>]
examples:
- title: 'Example 1: Set SharePoint permissions'
  code: |-
    PS C:\> $Library= Get-WssMSOSharePointLibrary | Select-Object -First 1
    PS C:\> $Principal= Get-WssMSOSharePointPrincipal | Select-Object -First 1
    PS C:\> Set-WssMSOSharePointObjectPermission -Object $Library -Principal $Principal -Permission FullControl
  description: |-
    The first command uses the Get-WssMsoSharePointLibrary cmdlet to get a library, and stores the result in the $Library variable.

    The second command uses the Get-WssMsoSharePointPrincipal cmdlet to get a SharePoint principal, and stores the result in the $Principal variable.

    The last command sets the SharePoint permissions for the library named $Library and the principal named $Principal.
  summary: ""
parameters:
- type: <xref href="SharePointLibrary" data-throw-if-not-resolved="False" />
  name: Library
  isRequired: true
  description: |+
    Specifies a sp_2013_1 library.
    The cmdlet sets permissions for the library that you specify.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="WssMsoSharePointPermissionType" data-throw-if-not-resolved="False" />
  name: Permission
  isRequired: true
  description: |+
    Specifies the permission for a sp_2013_2 principal to modify. 
    The acceptable values for this parameter are:


         -- NoAccess

         -- Read

         -- Edit

         -- FullControl

  defaultValue: None
  pipelineInput: true
  position: "2"
  aliases: ""
  parameterValueGroup: NoAccess, Read, Edit, FullControl
- type: <xref href="SharePointSite" data-throw-if-not-resolved="False" />
  name: Site
  isRequired: true
  description: |+
    Specifies a sp_2013_2 site.
    The cmdlet sets permissions for the site that you specify.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SharePointUser" data-throw-if-not-resolved="False" />
  name: User
  isRequired: true
  description: |+
    Specifies a name for a user account.
    The cmdlet sets permissions for the sp_2013_2 name that you specify.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
uid: WSSCmdlets.Set-WssMsoSharePointPermission
name: Set-WssMsoSharePointPermission
description: |-
  The **Set-WssMsoSharePointPermission** cmdlet sets permission settings for a sp_online_1 securable object, such as a library or a site.
  An office_365_1 site stores the  sp_online_2library.
metadata:
  external help file: WssCmdlets.dll-Help.xml
  Module Name: WSSCmdlets
  ms.date: 12/05/2017
  online version: https://docs.microsoft.com/powershell/module/wsscmdlets/set-wssmsosharepointpermission?view=windowsserver2012r2-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Set-WssMsoSharePointPermission
