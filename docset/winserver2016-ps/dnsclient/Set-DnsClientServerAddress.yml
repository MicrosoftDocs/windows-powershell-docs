### YamlMime:PowershellCmdlet
summary: |-
  Sets DNS server addresses associated with the TCP/IP properties on an interface.
module: DnsClient
notes: ""
inputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_DNSClient" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_DNSClientServerAddresses" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetAdapter" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetIPInterface" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_DNSClientServerAddress" data-throw-if-not-resolved="False" />
  description: "The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.\r\nThe path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.\r\n                         \r\nThe **MSFT_DNSClientServerAddress** class has the various DNS server IP addresses configured on a given interface.\r\nIf no interface is specified, then all interfaces are configured."
links:
- text: Get-DnsClientServerAddress
  href: ./Get-DnsClientServerAddress.yml
syntaxes:
- >-
  Set-DnsClientServerAddress [-InterfaceAlias] <String[]> [-ServerAddresses <String[]>] [-Validate]

   [-ResetServerAddresses] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [-PassThru] [-WhatIf]

   [-Confirm] [<CommonParameters>]
- >-
  Set-DnsClientServerAddress -InterfaceIndex <UInt32[]> [-ServerAddresses <String[]>] [-Validate]

   [-ResetServerAddresses] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [-PassThru] [-WhatIf]

   [-Confirm] [<CommonParameters>]
- >-
  Set-DnsClientServerAddress -InputObject <CimInstance[]> [-ServerAddresses <String[]>] [-Validate]

   [-ResetServerAddresses] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [-PassThru] [-WhatIf]

   [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Set the DNS server addresses on an interface with a specified index value'
  code: |-
    PS C:\> Set-DnsClientServerAddress -InterfaceIndex 12 -ServerAddresses ("10.0.0.1","10.0.0.2")
  description: |-
    This example sets the DNS server addresses on a specified interface with the index value of 12.
  summary: ""
- title: 'Example 2: Reset a DNS client to use the default DNS server addresses'
  code: |-
    PS C:\> Set-DnsClientServerAddress -InterfaceIndex 12 -ResetServerAddresses
  description: |-
    This example resets the DNS client to use the default DNS server addresses specified by DHCP on the interface with an index value of 12.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    Runs the cmdlet as a background job. Use this parameter to run commands that take a long time to complete. 

    The cmdlet immediately returns an object that represents the job and then displays the command prompt. 
    You can continue to work in the session while the job completes. 
    To manage the job, use the `*-Job` cmdlets. 
    To get the job results, use the [Receive-Job](https://go.microsoft.com/fwlink/?LinkID=113372) cmdlet. 

    For more information about Windows PowerShell background jobs, see [about_Jobs](https://go.microsoft.com/fwlink/?LinkID=113251).

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a [New-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227967) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966) cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InputObject
  isRequired: true
  description: |+
    Specifies the input to this cmdlet. 
    You can use this parameter or you can pipe the input to this cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InterfaceAlias
  isRequired: true
  description: |+
    Specifies the friendly name of the interface.

  defaultValue: None
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="UInt32" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InterfaceIndex
  isRequired: true
  description: |+
    Specifies the index number of the interface.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns an object representing the item with which you are working.
    By default, this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: ResetServerAddresses
  description: |+
    Resets the DNS server IP addresses to the default value.

  defaultValue: None
  position: Named
  aliases: ResetAddresses
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: ServerAddresses
  description: |+
    Specifies a list of DNS server IP addresses to set for the interface.

  defaultValue: None
  position: Named
  aliases: Addresses
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If you omit this parameter or enter a value of `0`, then Windows PowerShellÂ® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Validate
  description: |+
    Validates that one or more IP addresses are responsive DNS servers before the IP addresses are set to the interface.
    This parameter must be used with the *ServerAddress* parameter.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: DnsClient.Set-DnsClientServerAddress
name: Set-DnsClientServerAddress
description: |-
  The **Set-DnsClientServerAddress** cmdlet sets one or more IP addresses for DNS servers associated with an interface.
  This cmdlet adds static DNS server addresses to the interface.
  If you use this cmdlet to add DNS servers to the interface, then the DNS servers you specify override any DHCP configuration for that interface.
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: MSFT_DnsClientServerAddress.cdxml-help.xml
  Module Name: DnsClient
  ms.date: 12/20/2016
  online version: https://docs.microsoft.com/powershell/module/dnsclient/set-dnsclientserveraddress?view=windowsserver2016-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Set-DnsClientServerAddress
