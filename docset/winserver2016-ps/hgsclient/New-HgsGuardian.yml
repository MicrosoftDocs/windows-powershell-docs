### YamlMime:PowershellCmdlet
summary: |-
  Creates a Host Guardian Service guardian.
module: HgsClient
notes: ""
outputs:
- name: <xref href="CimInstance#MSFT_HgsGuardian" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
links:
- text: Export-HgsGuardian
  href: ./Export-HgsGuardian.yml
- text: Get-HgsGuardian
  href: ./Get-HgsGuardian.yml
- text: Import-HgsGuardian
  href: ./Import-HgsGuardian.yml
- text: Remove-HgsGuardian
  href: ./Remove-HgsGuardian.yml
syntaxes:
- >-
  New-HgsGuardian [-Name] <String> -SigningCertificate <String> [-SigningCertificatePassword <SecureString>]

   -EncryptionCertificate <String> [-EncryptionCertificatePassword <SecureString>] [-AllowExpired]

   [-AllowUntrustedRoot] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-HgsGuardian [-Name] <String> [-AllowExpired] [-AllowUntrustedRoot] -SigningCertificateThumbprint <String>

   -EncryptionCertificateThumbprint <String> [-WhatIf] [-Confirm] [<CommonParameters>]
- New-HgsGuardian [-Name] <String> [-GenerateCertificates] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Create a guardian'
  code: |-
    PS C:\> New-HgsGuardian -Name "Guardian11" -GenerateCertificates
  description: |-
    This command creates a Host Guardian Service guardian named Guardian11.
    This guardian can act as owner for a key protector.
    Because this command specifies the **GenerateCertificates** parameter, it generates signing and encryption certificates.
  summary: ""
- title: 'Example 2: Create a guardian by using existing certificates'
  code: |-
    PS C:\> $SecureStringPassword01 = ConvertTo-SecureString "<Password01>" -AsPlainText -Force
    PS C:\> $SecureStringPassword02 = ConvertTo-SecureString "<Password02>" -AsPlainText -Force
    PS C:\> New-HgsGuardian -Name "Guardian21" -SigningCertificate "C:\Keys\SigningCertificate.pfx" -SigningCertificatePassword $SecureStringPassword01 -EncryptionCertificate "C:\Keys\EncryptionCertificate.pfx" -EncryptionCertificatePassword $SecureStringPassword02
  description: |-
    The first two commands create passwords, as secure strings, by using the **ConvertTo-SecureString** cmdlet.
    For more information, type `Get-Help ConvertTo-SecureString`.
    The commands store the passwords in two variables.

    The final command creates a guardian named Guardian21.
    The command specifies the necessary signing and encryption certificates as password protected .pfx files.
    The passwords stored in the **$SecureStringPassword01** and **$SecureStringPassword02** must match the passwords used to generate the .pfx files.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AllowExpired
  description: |+
    Indicates that this cmdlet can create a guardian by using certificates that are expired.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AllowUntrustedRoot
  description: |+
    Indicates that this cmdlet can create a guardian by using self-signed certificates.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: EncryptionCertificate
  isRequired: true
  description: |+
    Specifies the path of a .pfx file that contains a password protected encryption certificate for the guardian.
    This .pfx file contains the public and private keys.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SecureString" data-throw-if-not-resolved="False" />
  name: EncryptionCertificatePassword
  description: |+
    Specifies the password to decrypt the .pfx file that contains the encryption certificate.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: EncryptionCertificateThumbprint
  isRequired: true
  description: |+
    Specifies the encryption certificate thumbprint.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: GenerateCertificates
  isRequired: true
  description: |+
    Indicates that this cmdlet generates self-signed signing and encryption certificates for the guardian.
    The certificates contain the public and private keys.

    If you specify this parameter, the new guardian does not have a trusted root.
    Therefore, you must also specify the **AllowUntrustedRoot** parameter.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    Specifies a name for the new guardian.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: SigningCertificate
  isRequired: true
  description: |+
    Specifies the path of a .pfx file that contains a password protected signing certificate for the guardian.
    This .pfx file contains the public and private keys.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SecureString" data-throw-if-not-resolved="False" />
  name: SigningCertificatePassword
  description: |+
    Specifies the password necessary to decrypt the signing certificate .pfx file.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: SigningCertificateThumbprint
  isRequired: true
  description: |+
    Specifies the thumbprint of a signing certificate located in the local computer certificate store. 

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: HgsClient.New-HgsGuardian
name: New-HgsGuardian
description: |-
  The **New-HgsGuardian** cmdlet creates a cryptographic entity called a Host Guardian Service guardian.
  A guardian is a principal that you can grant access to the key that is contained in a key protector.
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: HgsClient-help.xml
  Module Name: HgsClient
  ms.date: 12/20/2016
  online version: https://docs.microsoft.com/powershell/module/hgsclient/new-hgsguardian?view=windowsserver2016-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: New-HgsGuardian
