### YamlMime:PowershellCmdlet
summary: |-
  Gets a configuration element object from an IIS configuration collection.
module: IISAdministration
notes: ""
inputs:
- name: <xref href="Microsoft.Web.Administration.ConfigurationElementCollection, System.Collections.Hashtable" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Web.Administration.ConfigurationElement" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: New-IISConfigCollectionElement
  href: ./New-IISConfigCollectionElement.yml
- text: Remove-IISConfigCollectionElement
  href: ./Remove-IISConfigCollectionElement.yml
- text: IIS Administration Cmdlets for Windows PowerShell
  href: ./index.yml
syntaxes:
- >-
  Get-IISConfigCollectionElement [-ConfigCollection] <ConfigurationElementCollection>

   [[-ConfigAttribute] <Hashtable>] [<CommonParameters>]
examples:
- title: 'Example 1: Get a configuration element for the default web site by passing the collection through a pipeline'
  code: |-
    PS C:\> Get-IISConfigSection -SectionPath "system.applicationHost/sites" | Get-IISConfigCollection | Get-IISConfigCollectionElement -ConfigAttribute @{"name"="Default Web Site"}
  description: |-
    This command gets a configuration element for the default web site by passing the collection through a pipeline.
  summary: ""
- title: 'Example 2: Get a configuration element using a configuration collection as a parameter'
  code: |-
    PS C:\> $SiteCollection = Get-IISConfigSection -SectionPath "system.applicationHost/sites" | Get-IISConfigCollection
    Get-IISConfigCollectionElement -ConfigCollection $SiteCollection -ConfigAttribute @{"name"="Default Web Site"}
  description: |-
    This command gets a configuration element for the default web site and then stores the element into variable $SiteCollection.
  summary: ""
parameters:
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: ConfigAttribute
  description: |+
    Specifies a hashtable of the attributes for the configuration element to be inserted.
    The cmdlet will fail if any required attributes are omitted from this table.

  defaultValue: None
  pipelineInput: true
  position: "3"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ConfigurationElementCollection" data-throw-if-not-resolved="False" />
  name: ConfigCollection
  isRequired: true
  description: |+
    Specifies the **ConfigurationCollection** object for which the collection elements will be returned.
    If a ConfigurationCollection is previously obtained and assigned to a variable, you cannot pass it to this cmdlet through the pipeline because the pipeline engine will try to enumerate, passing ConfigurationElement objects instead.
    Try either passing the whole Get-IISConfigCollection cmdlet into the pipeline or use it as a parameter for correct results.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
uid: IISAdministration.Get-IISConfigCollectionElement
name: Get-IISConfigCollectionElement
description: |-
  The **Get-IISConfigCollectionElement** cmdlet gets a **ConfigurationElement** object that is part of a given ConfigurationCollection.
  The returned element then can be used in further cmdlets that expect a **ConfigurationElement**.
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: Microsoft.IIS.Powershell.Commands.dll-Help.xml
  Module Name: IISAdministration
  ms.date: 12/20/2016
  online version: https://docs.microsoft.com/powershell/module/iisadministration/get-iisconfigcollectionelement?view=windowsserver2016-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Get-IISConfigCollectionElement
