### YamlMime:PowershellCmdlet
summary: |-
  Gets a set of IP address ranges from an IPAM server.
module: IpamServer
notes: ""
outputs:
- name: <xref href="CimInstance#ROOT/microsoft/ipam/MSFT_IPAM_Range" data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet returns an array of IP address ranges that are present in IPAM datastore.
links:
- text: Add-IpamRange
  href: ./Add-IpamRange.yml
- text: Export-IpamRange
  href: ./Export-IpamRange.yml
- text: Import-IpamRange
  href: ./Import-IpamRange.yml
- text: Remove-IpamRange
  href: ./Remove-IpamRange.yml
- text: Set-IpamRange
  href: ./Set-IpamRange.yml
- text: Get-IpamSubnet
  href: ./Get-IpamSubnet.yml
syntaxes:
- >-
  Get-IpamRange -StartIPAddress <IPAddress[]> -EndIPAddress <IPAddress[]> [-ManagedByService <String[]>]

   [-ServiceInstance <String[]>] [-NetworkType <VirtualizationType[]>] [-AddressSpace <String[]>]

   [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [<CommonParameters>]
- >-
  Get-IpamRange -AddressFamily <AddressFamily[]> [-AddressCategory <AddressCategory[]>]

   [-ManagedByService <String[]>] [-ServiceInstance <String[]>] [-NetworkType <VirtualizationType[]>]

   [-AddressSpace <String[]>] [-Unmapped] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob]

   [<CommonParameters>]
- >-
  Get-IpamRange -MappingToBlock <CimInstance> [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob]

   [<CommonParameters>]
- >-
  Get-IpamRange -MappingToSubnet <CimInstance> [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob]

   [<CommonParameters>]
examples:
- title: 'Example 1: Get all IPv4 address ranges'
  code: |-
    PS C:\> Get-IpamRange -AddressFamily IPv4 -AddressCategory Private -AddressSpace "Default"
  description: |-
    This command gets all private physical IPv4 address ranges, either provider or non virtualized.
  summary: ""
- title: 'Example 2: Get all IPv4 ranges for a network type'
  code: |-
    PS C:\> Get-IpamRange -AddressFamily IPv4 -AddressCategory Private -NetworkType Provider
  description: |-
    This command gets all private IPv4 ranges of network type provider that belong to any provider address space.
  summary: ""
- title: 'Example 3: Get all IPv4 ranges in the default address space for a provider network type'
  code: |-
    PS C:\> Get-IpamRange -AddressFamily IPv4 -AddressCategory Private -NetworkType Provider -AddressSpace "Default"
  description: |-
    This command gets all private IPv4 ranges of network type provider that belong to the default address space.
  summary: ""
- title: 'Example 4: Get all IPv4 ranges for a customer network type'
  code: |-
    PS C:\> $PrivateCustomerRanges = Get-IpamRange -AddressFamily IPv4 -AddressCategory Private -NetworkType Customer
  description: |-
    This command gets all private IPv4 ranges of network type customer, and stores the result in the variable named $PrivateCustomerRanges.
  summary: ""
- title: 'Example 5: Get all IPv4 ranges for a network type and address space'
  code: |-
    PS C:\> $PrivateCustomerRanges = Get-IpamRange -AddressFamily IPv4 -AddressCategory Private -NetworkType Customer -AddressSpace Contoso
  description: |-
    This command gets all private IPv4 addresses that are of network type Customer that belong to the Contoso customer address space.
    The command stores the result in the variable named $PrivateCustomerRanges.
  summary: ""
- title: 'Example 6: Get all IPv4 ranges between two addresses'
  code: |-
    PS C:\> $Range= Get-IpamRange -StartIPAddress 10.12.1.1 -EndIPAddress 10.12.1.254 -ManagedByService IPAM -ServiceInstance "localhost"
  description: |-
    This command gets the details of a given IP address range, and stores the result in the variable named $Range.
  summary: ""
- title: 'Example 7: Get all overlapping ranges'
  code: |-
    PS C:\> Get-IpamRange -AddressFamily IPv4 -AddressCategory Private -AddressSpace "Default" | where {$Overlapping -eq $True}
    Overlapping      : True

    NetworkID        : 172.16.19.0/24

    StartAddress     : 172.16.19.10

    EndAddress       : 172.16.19.110

    ManagedByService : VMM

    ServiceInstance  : vmm1.contoso.com

    NetworkType      : Provider

    Owner            :
    Overlapping      : True

    NetworkID        : 172.16.19.0/24

    StartAddress     : 172.16.19.50

    EndAddress       : 172.16.19.150

    ManagedByService : IPAM

    ServiceInstance  : Localhost

    NetworkType      : NonVirtualized

    Owner            :
  description: |-
    This command gets all overlapping ranges from the default address space.
    Both Provider and NonVirtualized ranges can exist in the default address space.
    In IPAM, IP ranges are marked overlapping if they belong to same address space and their start and end IP addresses overlap.
  summary: ""
- title: 'Example 8: Get all IPv4 ranges for a subnet'
  code: |-
    PS C:\> $ContosoPhysicalSubnet = Get-IpamSubnet -NetworkId 10.12.0.0/16
    PS C:\> $AddressMappingToSubnet = Get-IpamRange -MappingToSubnet $ContosoPhysicalSubnet
  description: |-
    This example gets all IP ranges which map to a given subnet.
    Since the network type of the subnet here is non-virtualized, the results contain only the physical addresses and the fabric addresses from the default address space that maps to this subnet.

    The first command uses the **Get-IpamSubnet** cmdlet to get a subnet, and stores the result in the variable named $ContosoPhysicalSubnet.

    The second command gets the IP address ranges and stores the result in the $AddressMappingToSubnet variable.
  summary: ""
parameters:
- type: <xref href="AddressCategory" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: AddressCategory
  description: |+
    Specifies an array of address families of IP addresses.
    The acceptable values for this parameter are:

    - IPv4
    - IPv6

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: Public, Private, Global
- type: <xref href="AddressFamily" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: AddressFamily
  isRequired: true
  description: |+
    Specifies an array of address families of IP address range objects that this cmdlet gets.
    The acceptable values for this parameter are:

    - IPv4
    - IPv6

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: IPv4, IPv6
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: AddressSpace
  description: |+
    Specifies an array of address spaces of the IP address ranges to query.
    If you do not specify a value, the cmdlet gets data for all address spaces in IPAM.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    Runs the cmdlet as a background job. Use this parameter to run commands that take a long time to complete. 

    The cmdlet immediately returns an object that represents the job and then displays the command prompt. 
    You can continue to work in the session while the job completes. 
    To manage the job, use the `*-Job` cmdlets. 
    To get the job results, use the [Receive-Job](https://go.microsoft.com/fwlink/?LinkID=113372) cmdlet. 

    For more information about Windows PowerShell background jobs, see [about_Jobs](https://go.microsoft.com/fwlink/?LinkID=113251).

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a [New-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227967) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966) cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="IPAddress" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: EndIPAddress
  isRequired: true
  description: |+
    Specifies an array of IP addresses.
    For this parameter, the addresses represent the high end of the ranges to get.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: ManagedByService
  description: |+
    Specifies an array of services that manage the range to get.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: MB
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: MappingToBlock
  isRequired: true
  description: |+
    Specifies the ranges that map to an address block.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: MappingToSubnet
  isRequired: true
  description: |+
    Specifies an IP range that maps to a subnet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="VirtualizationType" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: NetworkType
  description: |+
    Specifies an array of network types for the addresses that this cmdlet gets.

    The acceptable values for this parameter are:

    - Provider
     --  Customer
     --  NonVirtualized

    If the value of the  parameter is Default, then this parameter can take the value Provider or NonVirtualized.
    If the value of the parameter is Provider, then the value of this parameter, if specified, must be Provider.
    Specifying any other value for this parameter will result in an error.
    Similarly, if the value of the parameter is Customer, then the value of this parameter, if specified, must be Customer.
    Specifying any other value for this parameter will result in an error.

    If you specify the *NetworkType* parameter but do not specify the *AddressType* parameter, the cmdlet returns all IP address ranges of the given network type.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: NonVirtualized, Provider, Customer
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: ServiceInstance
  description: |+
    Specifies an array of service instances that manage the address ranges to get.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: SI
  parameterValueGroup: ""
- type: <xref href="IPAddress" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: StartIPAddress
  isRequired: true
  description: |+
    Specifies an array of IP addresses.
    For this parameter, the addresses represent the high end of the ranges to get.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Unmapped
  description: |+
    Indicates that the cmdlet gets the unmapped ranges.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: IpamServer.Get-IpamRange
name: Get-IpamRange
description: |-
  The **Get-IpamRange** cmdlet gets a set of IP address ranges from IP Address Management (IPAM).
  Use this cmdlet to get IP address ranges of a particular address family or to get a particular range based on starting and ending IP addresses.
  The cmdlet includes parameter sets to get all ranges that map to a given IP address block or a subnet.
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: IpamRange.cdxml-help.xml
  Module Name: IpamServer
  ms.date: 12/20/2016
  online version: https://docs.microsoft.com/powershell/module/ipamserver/get-ipamrange?view=windowsserver2016-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Get-IpamRange
