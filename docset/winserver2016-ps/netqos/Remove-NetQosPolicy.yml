### YamlMime:PowershellCmdlet
summary: |-
  Removes a network Quality of Service (QoS) policy.
module: NetQoS
notes: ""
inputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/MSFT_NetQosPolicySettingData" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
    The **MSFT_NetQosPolicySettingData** object contains a QoS policy.
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/MSFT_NetQosPolicySettingData" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
    The **MSFT_NetQosPolicySettingData** object contains a QoS policy.
    Only if the *PassThru* parameter is specified does this cmdlet return the **MSFT_NetQosPolicySettingData** object.
links:
- text: Get-NetQosPolicy
  href: ./Get-NetQosPolicy.yml
- text: New-NetQosPolicy
  href: ./New-NetQosPolicy.yml
- text: Set-NetQosPolicy
  href: ./Set-NetQosPolicy.yml
syntaxes:
- >-
  Remove-NetQosPolicy [[-Name] <String[]>] [-PolicyStore <String>] [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [-PassThru] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Remove-NetQosPolicy -InputObject <CimInstance[]> [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob]

   [-PassThru] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Remove a QoS policy'
  code: |-
    PS C:\> Remove-NetQosPolicy -Name "Backup"
  description: |-
    This example removes a policy named as Backup.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    Runs the cmdlet as a background job. Use this parameter to run commands that take a long time to complete.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a [New-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227967) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966) cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InputObject
  isRequired: true
  description: |+
    Specifies the input object that is used in a pipeline command.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Name
  description: |+
    Specifies the QoS policy name.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns an object representing the item with which you are working.
    By default, this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: PolicyStore
  description: |+
    Specifies the location of the policy that is stored.
    The acceptable values for this parameter are:

    - ActiveStore 
    - COMPUTERNAME
    - GPO:COMPUTERNAME
    - GPO:DOMAIN\GPONAME
    - LDAP://LDAP-URL

  defaultValue: None
  position: Named
  aliases: store
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShellÂ® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: NetQoS.Remove-NetQosPolicy
name: Remove-NetQosPolicy
description: |-
  The **Remove-NetQosPolicy** cmdlet removes the network Quality of Service (QoS) policies.
  All the policies, in a policy store, are removed unless a specific policy is named.
  If the *PolicyStore* parameter is not specified, then this cmdlet removes policies from local computer (localhost).
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: MSFT_NetQosPolicy.cdxml-help.xml
  Module Name: NetQoS
  ms.date: 12/20/2016
  online version: https://docs.microsoft.com/powershell/module/netqos/remove-netqospolicy?view=windowsserver2016-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Remove-NetQosPolicy
