### YamlMime:PowershellCmdlet
summary: |-
  Adds a route to a network subnet in the Network Controller
module: NetworkController
notes: ""
links:
- text: Get-NetworkControllerFabricRoute
  href: ./Get-NetworkControllerFabricRoute.yml
- text: Install-NetworkController
  href: ./Install-NetworkController.yml
- text: Set-NetworkController
  href: ./Set-NetworkController.yml
- text: Remove-NetworkControllerFabricRoute
  href: ./Remove-NetworkControllerFabricRoute.yml
syntaxes:
- >-
  New-NetworkControllerFabricRoute [-LogicalNetworkId] <String> [-SubnetId] <String> [-ResourceId] <String>

   [-Properties] <FabricRouteProperties> [[-ResourceMetadata] <ResourceMetadata>] [[-Etag] <String>] [-Force]

   -ConnectionUri <Uri> [-CertificateThumbprint <String>] [-Credential <PSCredential>] [-PassInnerException]

   [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Add a route'
  code: |-
    PS C:\> $Route = New-Object Microsoft.Windows.NetworkController.FabricRouteProperties
    PS C:\> $Route.Destination = "10.0.0.1/24"
    PS C:\> $Route.nextHop = "10.0.0.1"
    PS C:\> New-NetworkControllerFabricRoute -ConnectionUri "https://networkcontroller" -LogicalNetworkId "Network13" -SubnetId "Subnet01" -ResourceId "Route21" -Properties $Route
  description: |-
    The first command creates a **FabricRouteProperties** object by using the **New-Object** cmdlet.
    The command stores the object in the $Route variable.

    The next two commands assign values to the **Destination** and **nextHop** properties of $Route.

    The final command adds a route to the logical network that has the ID Network13 in the subnet that has the ID Subnet01.
    The route has the properties specified in $Route.
  summary: ""
parameters:
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: CertificateThumbprint
  description: |+
    Specifies the certificate thumbprint of a digital public key X.509 certificate of a user account that has permission to perform this action.
    In order for Network Controller to authorize the account, specify this thumbprint by using the *ClientCertificateThumbprint* parameter of the **Install-NetworkController** or **Set-NetworkController** cmdlet.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="Uri" data-throw-if-not-resolved="False" />
  name: ConnectionUri
  isRequired: true
  description: |+
    Specifies the Uniform Resource Identifier (URI) of the Network Controller.
    All Representational State Transfer (REST) clients use this URI to connect to Network Controller.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="PSCredential" data-throw-if-not-resolved="False" />
  name: Credential
  description: |+
    Specifies a user credential that has permission to perform this action.
    The default value is the current user.
    This user must be present in the security group specified in the *ClientSecurityGroup* parameter in **Install-NetworkController**.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Etag
  description: |+
    Specifies the entity tag (ETag) parameter of the resource.
    An ETag is an HTTP response header returned by an HTTP-compliant web server.
    An ETag is used to determine change in the content of a resource.
    The value of the header is an opaque string that represents the state of the resource when the response was generated.

  defaultValue: None
  position: "7"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    Forces the command to run without asking for user confirmation.

  defaultValue: None
  position: "8"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: LogicalNetworkId
  isRequired: true
  description: |+
    Specifies the ID of the logical network to which this cmdlet adds a route.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassInnerException
  description: ""
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="FabricRouteProperties" data-throw-if-not-resolved="False" />
  name: Properties
  isRequired: true
  description: |+
    Specifies the properties of the route that this cmdlet adds.
    You must specify destination subnet and next hop address properties.

  defaultValue: None
  pipelineInput: true
  position: "4"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ResourceId
  isRequired: true
  description: |+
    Specifies the resource ID of the route that this cmdlet adds.

  defaultValue: None
  pipelineInput: true
  position: "2"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ResourceMetadata" data-throw-if-not-resolved="False" />
  name: ResourceMetadata
  description: |+
    Specifies metadata information for the client, such as the tenant ID, group ID, and resource name.

  defaultValue: None
  position: "5"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: SubnetId
  isRequired: true
  description: |+
    Specifies the ID of the subnet to which this cmdlet adds a route.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: NetworkController.New-NetworkControllerFabricRoute
name: New-NetworkControllerFabricRoute
description: |-
  The **New-NetworkControllerFabricRoute** cmdlet adds a route to a network subnet in the Network Controller.
  To add a route, provide the route destination and the next hop address.
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: Microsoft.NetworkController.Powershell.dll-help.xml
  Module Name: NetworkController
  ms.date: 12/20/2016
  online version: https://docs.microsoft.com/powershell/module/networkcontroller/new-networkcontrollerfabricroute?view=windowsserver2016-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: New-NetworkControllerFabricRoute
