### YamlMime:PowershellCmdlet
summary: |-
  Displays the point in time identity of all software installed on the computer.
module: SoftwareInventoryLogging
notes: ""
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root/inventorylogging/MsftSil_Software" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Start-SilLogging
  href: ./Start-SilLogging.yml
- text: Get-SilUalAccess
  href: ./Get-SilUalAccess.yml
- text: Get-SilComputer
  href: ./Get-SilComputer.yml
- text: Get-SilData
  href: ./Get-SilData.yml
- text: Get-SilLogging
  href: ./Get-SilLogging.yml
- text: Get-SilWindowsUpdate
  href: ./Get-SilWindowsUpdate.yml
syntaxes:
- >-
  Get-SilSoftware [[-ID] <String[]>] [-Name <String[]>] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>]

   [-AsJob] [<CommonParameters>]
examples:
- title: 'Example 1: Display the identity of all installed software'
  code: |-
    PS C:\> Get-SilSoftware


    ID             : {6B6533BD-1680-4368-908E-D50977561A86}
    InstallDate    : 4/1/2013 12:00:00 AM
    Name           : Microsoft Office Professional Plus 2010
    Vendor         : Microsoft Corporation
    Version        : 14.0.6029.1000
  description: |-
    This command displays the point in time identity of all software installed on the host server.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    Runs the cmdlet as a background job.
    Use this parameter to run commands that take a long time to complete. 
     The cmdlet immediately returns an object that represents the job and then displays the command prompt.
    You can continue to work in the session while the job completes.
    To manage the job, use the `*-Job` cmdlets.
    To get the job results, use the [Receive-Job](https://go.microsoft.com/fwlink/?LinkID=113372) cmdlet. 
     For more information about Windows PowerShellÂ® background jobs, see [about_Jobs](https://go.microsoft.com/fwlink/?LinkID=113251).

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a [New-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227967) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966) cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: ID
  description: |+
    Specifies an array of IDs of the software products installed on the server.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Name
  description: |+
    Specifies an array of names of the software products installed on the server.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShellÂ® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: SoftwareInventoryLogging.Get-SilSoftware
name: Get-SilSoftware
description: |-
  The **Get-SilSoftware** cmdlet displays a list of all software products installed on computer.
  Software Inventory Logging collects the data at the point in time that you run the cmdlet.
  You can specify the *ID* parameter and *Name* parameter to filter the installed software products that the cmdlet displays.
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: MsftSil_Software.cdxml-help.xml
  Module Name: SoftwareInventoryLogging
  ms.date: 01/24/2017
  online version: https://docs.microsoft.com/powershell/module/softwareinventorylogging/get-silsoftware?view=windowsserver2016-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Get-SilSoftware
