### YamlMime:PowershellCmdlet
summary: |-
  Connects a disconnected virtual disk to the specified computer when using the Windows Storage subsystem.
module: Storage
notes: |-
  * When used in Failover Cluster, cmdlets from the Storage module operate on cluster level (all servers in the cluster).
inputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/Microsoft/Windows/Storage/MSFT_VirtualDisk" data-throw-if-not-resolved="False" />
  description: |-
    You can pipe VirtualDisk objects to the *InputObject* parameter to specify one or more virtual disks to connect to the local computer.
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/Microsoft/Windows/Storage/MSFT_VirtualDisk" data-throw-if-not-resolved="False" />
  description: |-
    The Connect-VirtualDisk cmdlet does not output objects unless you use the *Passthru* parameter, in which case it outputs objects that represent the virtual disks that you connected.
links:
- text: Invoke-Command
  href: https://go.microsoft.com/fwlink/p/?LinkID=135225
- text: Disconnect-VirtualDisk
  href: ./Disconnect-VirtualDisk.yml
- text: Get-VirtualDisk
  href: ./Get-VirtualDisk.yml
- text: Hide-VirtualDisk
  href: ./Hide-VirtualDisk.yml
- text: New-VirtualDisk
  href: ./New-VirtualDisk.yml
- text: Remove-VirtualDisk
  href: ./Remove-VirtualDisk.yml
- text: Repair-VirtualDisk
  href: ./Repair-VirtualDisk.yml
- text: Resize-VirtualDisk
  href: ./Resize-VirtualDisk.yml
- text: Set-VirtualDisk
  href: ./Set-VirtualDisk.yml
- text: Show-VirtualDisk
  href: ./Show-VirtualDisk.yml
syntaxes:
- >-
  Connect-VirtualDisk [-FriendlyName] <String[]> [-StorageNodeName <String>] [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [-PassThru] [<CommonParameters>]
- >-
  Connect-VirtualDisk -UniqueId <String[]> [-StorageNodeName <String>] [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [-PassThru] [<CommonParameters>]
- >-
  Connect-VirtualDisk -Name <String[]> [-StorageNodeName <String>] [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [-PassThru] [<CommonParameters>]
- >-
  Connect-VirtualDisk -InputObject <CimInstance[]> [-StorageNodeName <String>] [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [-PassThru] [<CommonParameters>]
examples:
- title: 'Example 1: Connect a virtual disk to the local computer'
  code: |-
    PS C:\>Connect-VirtualDisk -FriendlyName "VirtualDisk1"
  description: |-
    This example connects the virtual disk named VirtualDisk1 to the local computer.
  summary: ""
- title: 'Example 2: Connect all disconnected virtual disks on a remote server'
  code: |-
    PS C:\>Get-VirtualDisk -CimSession Srv2 | Where-Object -Filter { $_.OperationalStatus -eq "Detached" } | Connect-VirtualDisk
  description: |-
    This example uses the **Get-VirtualDisk** cmdlet to get all virtual disk objects on the computer Srv2 (by using the *CimSession* parameter).
    It then pipes the objects to the Where-Object cmdlet to filter out all virtual disks except those with the "Detached" operational status.
    Finally, it pipes these objects to the **Connect-VirtualDisk** cmdlet.
  summary: ""
- title: 'Example 3: Connect all disconnected virtual disks on two remote computers by using Invoke-Command'
  code: |-
    PS C:\>Invoke-Command -ComputerName Srv1, Srv2 -ScriptBlock { Get-VirtualDisk | Where-Object -Filter { $_.OperationalStatus -eq "Detached" } | Connect-VirtualDisk }
  description: |-
    This example uses the Invoke-Command cmdlet to run the cmdlets specified in Example 2 (now specified in the *ScriptBlock* parameter) on multiple remote computers simultaneously, with all processing done in parallel on each computer and only the results being sent back to the local PowerShell session.
  summary: ""
- title: 'Example 4: Connect a virtual disk to a remote computer from a management node'
  code: |-
    PS C:\>Get-StorageSubSystem -FriendlyName "Clustered Storage Spaces on Cluster01" | Get-VirtualDisk -FriendlyName "VDisk01" | Connect-VirtualDisk -StorageNodeName "ClustNode1"
  description: |-
    This example connects a virtual disk to a remote computer from a management node in a subsystem that is registered on the management node.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    Runs the cmdlet as a background job. Use this parameter to run commands that take a long time to complete.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a [New-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227967) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966) cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: FriendlyName
  isRequired: true
  description: |+
    Specifies the friendly name of the virtual disk that you want to connect.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InputObject
  isRequired: true
  description: |+
    Specifies the input object that is used in a pipeline command.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Name
  isRequired: true
  description: |+
    Specifies the name of the virtual disk that you want to connect.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Specifies that the cmdlet should output an object representing a virtual disk.
    By default, this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: StorageNodeName
  description: |+
    Specifies the name of a computer on which to run the cmdlet.

    Use this parameter only when you run the cmdlet from a management node to connect a virtual disk to a remote cluster subsystem for the purpose of setting the virtual disk to manual-attach.
    To set a virtual disk to manual-attach, use the Set-VirtualDisk cmdlet and specify the *IsManualAttach* parameter.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShellÂ® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: UniqueId
  isRequired: true
  description: |+
    Specifies the UniqueID of the virtual disk to connect.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: Id
  parameterValueGroup: ""
uid: Storage.Connect-VirtualDisk
name: Connect-VirtualDisk
description: |-
  The **Connect-VirtualDisk** cmdlet connects a disconnected virtual disk to the specified computer when using the Windows Storage subsystem.

  To connect a virtual disk to a remote computer, from a management node in a subsystem that is registered on the management node, specify the *StorageNodeName* parameter.

  To connect to a virtual disk to a remote computer, use the *CimSession* parameter, or use the Enter-PSSession or Invoke-Command cmdlets in conjunction with **Connect-VirtualDisk**.
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: VirtualDisk.cdxml-help.xml
  Module Name: Storage
  ms.date: 12/20/2016
  online version: https://docs.microsoft.com/powershell/module/storage/connect-virtualdisk?view=windowsserver2016-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Connect-VirtualDisk
