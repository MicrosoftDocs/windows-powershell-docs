### YamlMime:PowershellCmdlet
summary: |-
  Creates a volume with the specified file system.
module: Storage
notes: |-
  * To create a volume on a new storage space with enclosure-awareness enabled (providing resiliency for an entire JBOD enclosure failure), use the **Set-StoragePool** cmdlet with the *-EnclosureAwareDefault $true* parameter to set the storage pool to create storage spaces with enclosure awareness enabled by default.
  * When used in Failover Cluster, cmdlets from the Storage module operate on cluster level (all servers in the cluster).
inputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/Microsoft/Windows/Storage/MSFT_StoragePool" data-throw-if-not-resolved="False" />
  description: |-
    You can use the pipeline operator to pass an MSFT_StoragePool object to the *InputObject* parameter.
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#root/Microsoft/Windows/Storage/MSFT_Volume" data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet outputs an object that represents the newly created volume.
links:
- text: Debug-Volume
  href: ./Debug-Volume.yml
- text: Format-Volume
  href: ./Format-Volume.yml
- text: Get-Disk
  href: ./Get-Disk.yml
- text: Get-StoragePool
  href: ./Get-StoragePool.yml
- text: Get-Volume
  href: ./Get-Volume.yml
- text: Optimize-Volume
  href: ./Optimize-Volume.yml
- text: Repair-Volume
  href: ./Repair-Volume.yml
- text: Set-Volume
  href: ./Set-Volume.yml
syntaxes:
- >-
  New-Volume [-StoragePool] <CimInstance> -FriendlyName <String> [-FileSystem <FileSystemType>]

   [-AccessPath <String>] [-DriveLetter <Char>] [-AllocationUnitSize <UInt32>] [-Size <UInt64>]

   [-ResiliencySettingName <String>] [-ProvisioningType <ProvisioningType>] [-MediaType <MediaType>]

   [-PhysicalDiskRedundancy <UInt16>] [-NumberOfColumns <UInt16>] [-NumberOfGroups <UInt16>]

   [-StorageTiers <CimInstance[]>] [-StorageTierFriendlyNames <String[]>] [-StorageTierSizes <UInt64[]>]

   [-WriteCacheSize <UInt64>] [-ReadCacheSize <UInt64>] [-UseMaximumSize] [-CimSession <CimSession>]

   [-ThrottleLimit <Int32>] [-AsJob] [<CommonParameters>]
- >-
  New-Volume -StoragePoolFriendlyName <String> -FriendlyName <String> [-FileSystem <FileSystemType>]

   [-AccessPath <String>] [-DriveLetter <Char>] [-AllocationUnitSize <UInt32>] [-Size <UInt64>]

   [-ResiliencySettingName <String>] [-ProvisioningType <ProvisioningType>] [-MediaType <MediaType>]

   [-PhysicalDiskRedundancy <UInt16>] [-NumberOfColumns <UInt16>] [-NumberOfGroups <UInt16>]

   [-StorageTiers <CimInstance[]>] [-StorageTierFriendlyNames <String[]>] [-StorageTierSizes <UInt64[]>]

   [-WriteCacheSize <UInt64>] [-ReadCacheSize <UInt64>] [-UseMaximumSize] [-CimSession <CimSession>]

   [-ThrottleLimit <Int32>] [-AsJob] [<CommonParameters>]
- >-
  New-Volume -StoragePoolName <String> -FriendlyName <String> [-FileSystem <FileSystemType>]

   [-AccessPath <String>] [-DriveLetter <Char>] [-AllocationUnitSize <UInt32>] [-Size <UInt64>]

   [-ResiliencySettingName <String>] [-ProvisioningType <ProvisioningType>] [-MediaType <MediaType>]

   [-PhysicalDiskRedundancy <UInt16>] [-NumberOfColumns <UInt16>] [-NumberOfGroups <UInt16>]

   [-StorageTiers <CimInstance[]>] [-StorageTierFriendlyNames <String[]>] [-StorageTierSizes <UInt64[]>]

   [-WriteCacheSize <UInt64>] [-ReadCacheSize <UInt64>] [-UseMaximumSize] [-CimSession <CimSession>]

   [-ThrottleLimit <Int32>] [-AsJob] [<CommonParameters>]
- >-
  New-Volume -StoragePoolUniqueId <String> -FriendlyName <String> [-FileSystem <FileSystemType>]

   [-AccessPath <String>] [-DriveLetter <Char>] [-AllocationUnitSize <UInt32>] [-Size <UInt64>]

   [-ResiliencySettingName <String>] [-ProvisioningType <ProvisioningType>] [-MediaType <MediaType>]

   [-PhysicalDiskRedundancy <UInt16>] [-NumberOfColumns <UInt16>] [-NumberOfGroups <UInt16>]

   [-StorageTiers <CimInstance[]>] [-StorageTierFriendlyNames <String[]>] [-StorageTierSizes <UInt64[]>]

   [-WriteCacheSize <UInt64>] [-ReadCacheSize <UInt64>] [-UseMaximumSize] [-CimSession <CimSession>]

   [-ThrottleLimit <Int32>] [-AsJob] [<CommonParameters>]
- >-
  New-Volume [-Disk] <CimInstance> -FriendlyName <String> [-FileSystem <FileSystemType>] [-AccessPath <String>]

   [-DriveLetter <Char>] [-AllocationUnitSize <UInt32>] [-CimSession <CimSession>] [-ThrottleLimit <Int32>]

   [-AsJob] [<CommonParameters>]
- >-
  New-Volume [-DiskNumber] <UInt32> -FriendlyName <String> [-FileSystem <FileSystemType>] [-AccessPath <String>]

   [-DriveLetter <Char>] [-AllocationUnitSize <UInt32>] [-CimSession <CimSession>] [-ThrottleLimit <Int32>]

   [-AsJob] [<CommonParameters>]
- >-
  New-Volume -DiskPath <String> -FriendlyName <String> [-FileSystem <FileSystemType>] [-AccessPath <String>]

   [-DriveLetter <Char>] [-AllocationUnitSize <UInt32>] [-CimSession <CimSession>] [-ThrottleLimit <Int32>]

   [-AsJob] [<CommonParameters>]
- >-
  New-Volume -DiskUniqueId <String> -FriendlyName <String> [-FileSystem <FileSystemType>] [-AccessPath <String>]

   [-DriveLetter <Char>] [-AllocationUnitSize <UInt32>] [-CimSession <CimSession>] [-ThrottleLimit <Int32>]

   [-AsJob] [<CommonParameters>]
examples:
- title: 'Example 1: Create a volume on a mirror space'
  code: |-
    PS C:\> New-Volume -StoragePoolName "CompanyData" -FriendlyName "TestVolume" -Size 10GB -ResiliencySettingName "Mirror" -FileSystem NTFS -AccessPath "M: "-ProvisioningType Fixed
  description: |-
    This command creates a new storage space in the CompanyData pool using the Mirror resiliency setting and fixed provisioning, and then formats the volume with the NTFS file system and assigns drive letter M.
  summary: ""
- title: 'Example 2: Create a volume on a new tiered storage space'
  code: |-
    PS C:\>New-Volume -StoragePoolFriendlyName "CompanyData" -FriendlyName "UserData" -AccessPath "M:" -ResiliencySettingName "Mirror" -ProvisioningType "Fixed" -StorageTiers (Get-StorageTier -FriendlyName "*SSD*"), (Get-StorageTier -FriendlyName "*HDD*") -StorageTierSizes 20GB, 80GB -FileSystem NTFS
  description: |-
    This command creates new storage space in the CompanyData pool using the Mirror resiliency setting, fixed provisioning, a 20 GB SSD storage tier, and an 80 GB HDD storage tier, and then formats the volume with the NTFS file system and assigns drive letter M.
  summary: ""
- title: 'Example 3: Create a volume on disk'
  code: |-
    PS C:\>Get-Disk | Where-Object OperationalStatus -eq 'Offline'|
             Initialize-Disk -PartitionStyle GPT -PassThru |
                New-Volume -FileSystem NTFS -DriveLetter F -FriendlyName 'New-Volume'
  description: |-
    `
    This command initializes a new disk added to a host then creates a new volume on each new disk.
  summary: ""
parameters:
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: AccessPath
  description: |+
    Specifies a drive letter, or a mount point.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="UInt32" data-throw-if-not-resolved="False" />
  name: AllocationUnitSize
  description: |+
    Specifies the allocation unit size to use when creating the volume.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    Runs the cmdlet as a background job. Use this parameter to run commands that take a long time to complete.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" />
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a [New-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227967) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966) cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: Disk
  isRequired: true
  description: |+
    Specifies a **Disk** object.
    To obtain a **Disk** object, use the Get-Disk cmdlet.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="UInt32" data-throw-if-not-resolved="False" />
  name: DiskNumber
  isRequired: true
  description: |+
    Specifies the disk number of the disk on which to create a volume.

  defaultValue: None
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: DiskPath
  isRequired: true
  description: |+
    Specifies the path of the disk on which to create a volume.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: DiskUniqueId
  isRequired: true
  description: |+
    Specifies the ID of the disk on which to create a volume.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Char" data-throw-if-not-resolved="False" />
  name: DriveLetter
  description: |+
    Specifies the drive letter of the disk on which to create a volume.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="FileSystemType" data-throw-if-not-resolved="False" />
  name: FileSystem
  description: |+
    Specified the file system to use on the volume.
    The acceptable values for this parameter are: NTFS, and ReFS, as well as the cluster shared volume versions of these file systems for use on a scale-out file server: CSVFS_NTFS, and CSVFS_ReFS,

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: NTFS, ReFS, CSVFS_NTFS, CSVFS_ReFS
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: FriendlyName
  isRequired: true
  description: |+
    Specifies the friendly name to use for the volume.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="MediaType" data-throw-if-not-resolved="False" />
  name: MediaType
  description: |+
    Specifies the media type of the storage tier.
    The cmdlet creates the storage tier for the media type that you specify.
    The acceptable values for this parameter are:

    - SSD
    - SCM
    - HDD

    Use SCM for storage-class memory such as NVDIMMs.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: HDD, SSD, SCM
- type: <xref href="UInt16" data-throw-if-not-resolved="False" />
  name: NumberOfColumns
  description: |+
    Specifies the number of columns to use when creating the volume on a Windows Storage subsystem.
    Columns represent the number of underlying physical disks across which one stripe of data for a volume is written.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="UInt16" data-throw-if-not-resolved="False" />
  name: NumberOfGroups
  description: |+
    Specifies the number of groups used by Local Reconstruction Coding (LRC) with a dual parity virtual disk.
    We recommend omitting this parameter and using the defaults.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="UInt16" data-throw-if-not-resolved="False" />
  name: PhysicalDiskRedundancy
  description: |+
    Specifies the physical disk redundancy value to use during the creation of a volume on a Windows Storage subsystem.
    This value represents how many failed physical disks the volume can tolerate without data loss.
    Redundancy values are as follows:

    - For two-way mirror spaces, the virtual disk can tolerate 1 failed physical disk without data loss.
    - For three-way mirror spaces, the virtual disk can tolerate 2 failed physical disks without data loss.
    - For single-parity spaces, the virtual disk can tolerate 1 failed physical disk without data loss.
    - For dual-parity spaces the virtual disk can tolerate 2 failed physical disks without data loss.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ProvisioningType" data-throw-if-not-resolved="False" />
  name: ProvisioningType
  description: |+
    Specifies the type of provisioning.
    The acceptable values for this parameter are: Fixed and Thin.
    Specify Fixed for storage spaces that use storage tiers or a clustered storage pool

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Unknown, Thin, Fixed
- type: <xref href="UInt64" data-throw-if-not-resolved="False" />
  name: ReadCacheSize
  description: |+
    This parameter is no longer supported.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ResiliencySettingName
  description: |+
    Specifies the resiliency setting (storage layout) to use for the volume.
    Acceptable values vary by storage subsystem.

    Allowed values for the Windows Storage subsystem are: Simple, Mirror, or Parity.
    By default, when you specify Mirror, Storage Spaces creates a two-way mirror, and when you specify Parity, Storage Spaces creates a single-parity space.

    To create a three-way mirror space, specify 3 for the *NumberofDataCopies* parameter or 2 for the *PhysicalDiskRedundancy* parameter.

    To create a dual-parity space, specify 2 for the *PhysicalDiskRedundancy* parameter and Fixed provisioning for the *ProvisioningType* parameter.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="UInt64" data-throw-if-not-resolved="False" />
  name: Size
  description: |+
    Specifies the size of the volume to create.
    The default unit is bytes.
    To specify a different unit, enter the size followed by one of the following unit values, with no spaces: Bytes, KB, MB, GB, or TB.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: StoragePool
  isRequired: true
  description: |+
    Specifies the storage pool object in which you want to create a volume.
    To obtain a storage pool object, use the Get-StoragePool cmdlet.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: StoragePoolFriendlyName
  isRequired: true
  description: |+
    Specifies the friendly name of the storage pool in which to create a volume.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: StoragePoolName
  isRequired: true
  description: |+
    Specifies the name of the storage pool in which to create a volume.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: StoragePoolUniqueId
  isRequired: true
  description: |+
    Specifies the unique ID of the storage pool in which to create a volume.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: StorageTierFriendlyNames
  description: |+
    Specifies the names of storage tiers to use when creating the volume.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: StorageTiers
  description: |+
    Specifies the storage tier objects to use when creating the volume.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="UInt64" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: StorageTierSizes
  description: |+
    Specifies how big to make each storage tier on this volume.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: UseMaximumSize
  description: |+
    Indicates that this cmdlet creates the largest volumn possible.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="UInt64" data-throw-if-not-resolved="False" />
  name: WriteCacheSize
  description: |+
    Specifies the size of the write-back cache.
    The cmdlet creates the write-back cache of the size that you specify when the cmdlet creates the virtual disk space.

    The following describes the behavior of this parameter based on the value that you specify:

    1. If you do not specify this parameter, the cmdlet sets the value of the **WriteCacheSizeDefault** property from the storage pool.
    1. The default setting of **WriteCacheSizeDefault** for a storage pool is Auto, which specifies that Windows Server automatically selects the optimal write-back cache size for your configuration.
    You can change the value of **WriteCacheSizeDefault** to a concrete value at any time.
    1. The Auto setting for *WriteCacheSize* operates as follows:
        1. If any of the following is true, Auto is set to 1 GB:
            1. The storage pool contains at least N drives with enough capacity and you set the Usage parameter to Journal.
            N = 1 for simple spaces, N = 2 for two-way mirror and single parity, N = 3 for three-way mirror and dual parity.
            1. The storage pool contains at least N drives with enough capacity and the media type of the virtual disk is set to SSD.
            N = 1 for simple spaces, N = 2 for two-way mirror and single parity, N = 3 for three-way mirror and dual parity.
        1. Otherwise, Auto is set to 0 (no log) for simple and mirror spaces, and 32 MB for parity spaces.
    1. If you specify Auto or 0 (zero) for this parameter and the storage space is not a parity space, the cmdlet verifies that either 3.a.i or 3.a.ii is true.
    If either 3.a.i or 3.a.ii is not true, you cannot set *WriteCacheSize* to Auto or 0.
        1. The objective of these conditions is to help you avoid scenarios in which you force the creation of a write-back cache in situations that result in slower performance.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: Storage.New-Volume
name: New-Volume
description: |-
  The **New-Volume** cmdlet creates a volume with the specified file system.
  The cmdlet manages the creation of the virtual disk with the specified size and resiliency setting, initializes the disk, creates a partition on it and formats the volume with the specified file system, including Cluster Shared Volumes (CSVs).
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: StorageScripts-help.xml
  Module Name: Storage
  ms.date: 12/20/2016
  online version: https://docs.microsoft.com/powershell/module/storage/new-volume?view=windowsserver2016-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: New-Volume
