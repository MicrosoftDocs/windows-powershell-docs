### YamlMime:PowershellCmdlet
summary: |-
  Resets the status of a physical disk.
module: Storage
notes: |-
  * When used in Failover Cluster, cmdlets from the Storage module operate on cluster level (all servers in the cluster).
inputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/Microsoft/Windows/Storage/MSFT_PhysicalDisk" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/Microsoft/Windows/Storage/MSFT_PhysicalDisk" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
links:
- text: Where-Object
  href: https://go.microsoft.com/fwlink/?LinkID=113423
- text: Add-PhysicalDisk
  href: ./Add-PhysicalDisk.yml
- text: Get-PhysicalDisk
  href: ./Get-PhysicalDisk.yml
- text: Remove-PhysicalDisk
  href: ./Remove-PhysicalDisk.yml
- text: Set-PhysicalDisk
  href: ./Set-PhysicalDisk.yml
syntaxes:
- >-
  Reset-PhysicalDisk [-FriendlyName] <String> [-CimSession <CimSession>] [-ThrottleLimit <Int32>] [-AsJob]

   [<CommonParameters>]
- >-
  Reset-PhysicalDisk -UniqueId <String> [-CimSession <CimSession>] [-ThrottleLimit <Int32>] [-AsJob]

   [<CommonParameters>]
- >-
  Reset-PhysicalDisk -InputObject <CimInstance[]> [-CimSession <CimSession>] [-ThrottleLimit <Int32>] [-AsJob]

   [<CommonParameters>]
examples:
- title: EXAMPLE 1
  code: |-
    PS C:\> Reset-PhysicalDisk -FriendlyName "PhysicalDisk5"
  description: |-
    This example resets the state of a specific physical disk.
  summary: ""
- title: EXAMPLE 2
  code: |-
    $BadDisks = Get-Physicaldisk | Where-Object -FilterScript {$_.HealthStatus -Eq "Unhealthy"}
    Foreach ($BadDisk in $BadDisks)
    {
      Reset-PhysicalDisk -UniqueId $BadDisk.UniqueId
    }
  description: |-
    This example resets all of the unhealthy physical disks.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    Runs the cmdlet as a background job. Use this parameter to run commands that take a long time to complete.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" />
  name: CimSession
  description: ""
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: FriendlyName
  isRequired: true
  description: |+
    Specifies a friendly name for a disk.
    The friendly name may be defined by a user and is not guaranteed to be unique.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InputObject
  isRequired: true
  description: |+
    Specifies the input object that is used in a pipeline command.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: ""
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: UniqueId
  isRequired: true
  description: |+
    Specifies an ID used to uniquely identify a Disk object in the system.
    The ID persists through restarts.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: Id
  parameterValueGroup: ""
uid: Storage.Reset-PhysicalDisk
name: Reset-PhysicalDisk
description: |-
  The **Reset-PhysicalDisk** cmdlet resets the status of a physical disk.
  For Storage spaces, this is a destructive operation that removes the Storage pool configuration and pool data from the specified physical disk.

  If you run **Reset-PhysicalDisk** on a physical disk that appears as lost communication or split, this cmdlet attempts to re-integrate the disk into the Storage pool if the disk is discoverable.
  After you reset a physical disk, use Repair-VirtualDisk to restore its resiliency.

  If you run **Reset-PhysicalDisk** on a disk that is not a part of a Storage pool, the operation clears any lingering Storage spaces data and metadata.
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: StorageScripts-help.xml
  Module Name: Storage
  ms.date: 12/20/2016
  online version: https://docs.microsoft.com/powershell/module/storage/reset-physicaldisk?view=windowsserver2016-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Reset-PhysicalDisk
