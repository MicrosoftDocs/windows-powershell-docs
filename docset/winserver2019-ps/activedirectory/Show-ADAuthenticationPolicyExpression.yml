### YamlMime:PowershellCmdlet
summary: |-
  Displays the Edit Access Control Conditions window update or create security descriptor definition language (SDDL) security descriptors.
module: ActiveDirectory
notes: ""
inputs:
- name: <xref href="None or System.String" data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet accepts a SDDL security descriptor.
outputs:
- name: <xref href="System.Object" data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet outputs a SDDL security descriptor.
links:
- text: New-ADAuthenticationPolicy
  href: ./New-ADAuthenticationPolicy.yml
- text: AD DS Administration Cmdlets in Windows PowerShell
  href: ./index.yml
syntaxes:
- >-
  Show-ADAuthenticationPolicyExpression [-WhatIf] [-Confirm] [-AllowedToAuthenticateFrom]

   [-AuthType <ADAuthType>] [-Credential <PSCredential>] [[-SDDL] <String>] [-Server <String>]

   [[-Title] <String>] [<CommonParameters>]
- >-
  Show-ADAuthenticationPolicyExpression [-WhatIf] [-Confirm] [-AllowedToAuthenticateTo] [-AuthType <ADAuthType>]

   [-Credential <PSCredential>] [[-SDDL] <String>] [-Server <String>] [[-Title] <String>] [<CommonParameters>]
examples:
- title: 'Example 1: Retrieve the AllowedToAuthenticateFrom settings and store in a file'
  code: |-
    PS C:\> Show-ADAuthenticationPolicyExpression -AllowedToAuthenticateFrom > someFile.txt 
    PS C:\> New-ADAuthenticationPolicy -Name "TestAuthenticationPolicy" -UserAllowedToAuthenticateFrom (Get-Acl .\AuthSettings.txt).sddl
  description: |-
    This command retrieves the AllowedToAuthenticateFrom access control list (ACL) by opening the **Edit Access Control Conditions** window and stores the ACL in a file named AuthSettings.txt.
    The file is then used to apply a new authentication policy to the retrieved ACL.
  summary: ""
- title: 'Example 2: Set the UserAllowedToAuthenticateFrom property'
  code: |-
    PS C:\> New-ADAuthenticationPolicy -Name "testAuthenticationPolicy" -UserAllowedToAuthenticateFrom (Show-ADAuthenticationPolicyExpression -AllowedToAuthenticateFrom)
  description: |-
    This example uses the New-ADAuthenticationPolicy cmdlet to create an authentication policy, and then sets the **UserAllowedToAuthenticateFrom** property by specifying the **Show-ADAuthenticationPolicyExpression** cmdlet as the value for the parameter.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AllowedToAuthenticateFrom
  isRequired: true
  description: |+
    Indicates that the AllowedToAuthenticateFrom listings for an object are displayed in the **Edit Access Control Conditions** window.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AllowedToAuthenticateTo
  isRequired: true
  description: |+
    Indicates that the **AllowedToAuthenticateTo** listings for an object are displayed in the **Edit Access Control Conditions** window.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ADAuthType" data-throw-if-not-resolved="False" />
  name: AuthType
  description: |+
    Specifies the authentication method to use.
    The acceptable values for this parameter are:

    - Negotiate or 0
    - Basic or 1

    The default authentication method is Negotiate.
    A Secure Sockets Layer (SSL) connection is required for the Basic authentication method.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Negotiate, Basic
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="PSCredential" data-throw-if-not-resolved="False" />
  name: Credential
  description: |+
    Specifies a user account that has permission to perform the task.
    The default is the current user.
    Type a user name, such as User01 or Domain01\User01, or enter a **PSCredential** object, such as one generated by the [Get-Credential](https://go.microsoft.com/fwlink/?LinkID=293936) cmdlet.

    By default, the cmdlet uses the credentials of the currently logged on user unless the cmdlet is run from an Active Directory Domain Services Windows PowerShell provider drive.
    If you run the cmdlet in an Active Directory provider drive, the account associated with the drive is the default.

    If you specify credentials that do not have permission to perform the task, the cmdlet returns an error.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: SDDL
  description: |+
    Specifies the SDDL of the security descriptor.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Server
  description: |+
    Specifies the Active Directory Domain Services instance to which to connect, by providing one of the following values for a corresponding domain name or directory server.
    The service may be any of the following:  Active Directory Lightweight Domain Services, Active Directory Domain Services or Active Directory snapshot instance.

    Specify the Active Directory Domain Services instance in one of the following ways:  

    Domain name values:

    - A fully qualified domain name
    - A NetBIOS name

    Directory server values:  

    - A fully qualified directory server name
    - A NetBIOS name
    - A fully qualified directory server name and port

    The default value for this parameter is determined by one of the following methods in the order that they are listed:

    - By using the **Server** value from objects passed through the pipeline
    - By using the server information associated with the Active Directory Domain Services Windows PowerShell provider drive, when the cmdlet runs in that drive
    - By using the domain of the computer running Windows PowerShell

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Title
  description: |+
    Specifies a title for the SDDL security descriptor.

  defaultValue: None
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: ActiveDirectory.Show-ADAuthenticationPolicyExpression
name: Show-ADAuthenticationPolicyExpression
description: |-
  The **Show-ADAuthenticationPolicyExpression** cmdlet creates or modifies an SDDL security descriptor using the **Edit Access Control Conditions** window.
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: Microsoft.ActiveDirectory.Management.dll-Help.xml
  Module Name: ActiveDirectory
  ms.date: 12/27/2016
  online version: https://docs.microsoft.com/powershell/module/activedirectory/show-adauthenticationpolicyexpression?view=windowsserver2019-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Show-ADAuthenticationPolicyExpression
