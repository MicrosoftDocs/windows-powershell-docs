### YamlMime:PowershellCmdlet
summary: |-
  Returns deduplication volumes that have data deduplication metadata.
module: Deduplication
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: ""
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/Microsoft/Windows/Deduplication/MSFT_DedupVolume" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
links:
- text: Disable-DedupVolume
  href: ./Disable-DedupVolume.yml
- text: Enable-DedupVolume
  href: ./Enable-DedupVolume.yml
- text: Set-DedupVolume
  href: ./Set-DedupVolume.yml
syntaxes:
- >-
  Get-DedupVolume [-VolumeId <String[]>] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob]

   [<CommonParameters>]
- >-
  Get-DedupVolume [[-Volume] <String[]>] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob]

   [<CommonParameters>]
examples:
- title: 'Example 1: Get settings for a volume identified by letter'
  code: |-
    PS C:\> Get-DedupVolume -Volume "E:"
  description: |-
    This command returns the data deduplication settings for volume E:.
  summary: ""
- title: 'Example 2: Get settings for a volume specified by ID'
  code: |-
    PS C:\> Get-DedupVolume -Volume "\\?\Volume{26a21bda-a627-11d7-9931-806e6f6e6963}\"
  description: |-
    This command returns the data deduplication settings for the volume that has the specified GUID.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    Runs the cmdlet as a background job. Use this parameter to run commands that take a long time to complete. 

    The cmdlet immediately returns an object that represents the job and then displays the command prompt. 
    You can continue to work in the session while the job completes. 
    To manage the job, use the `*-Job` cmdlets. 
    To get the job results, use the [Receive-Job](https://go.microsoft.com/fwlink/?LinkID=113372) cmdlet. 

    For more information about Windows PowerShell background jobs, see [about_Jobs](https://go.microsoft.com/fwlink/?LinkID=113251).

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a [New-CimSession](https://docs.microsoft.com/powershell/module/cimcmdlets/new-cimsession) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966) cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Volume
  description: |+
    Specifies one or more file system volumes for which to return data deduplication metadata, or in the case of a cluster, volumes with data deduplication metadata currently mounted by the managed node.
    Enter one or more volume IDs, drive letters, or volume GUID paths.
    For drive letters, use the format D:.
    For volume GUID paths, use the format \\\\?\Volume{{GUID}}\.
    Separate multiple volumes with a comma.

  defaultValue: None
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: VolumeId
  description: |+
    Specifies a string that uniquely identifies the volume on which to return data deduplication metadata.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: DeviceId, Path, Id
  parameterValueGroup: ""
uid: Deduplication.Get-DedupVolume
name: Get-DedupVolume
description: |-
  The **Get-DedupVolume** cmdlet returns a **DeduplicationVolume** object for each volume that has data deduplication metadata, in either the enabled or disabled state.
  In a cluster, this cmdlet returns a **DeduplicationVolume** object only for volumes currently mounted by the managed node, whether the volumes are local or clustered volumes.

  To run this cmdlet, you must start Windows PowerShell® with the **Run as administrator** option.
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: DedupVolume.cdxml-help.xml
  Module Name: Deduplication
  ms.date: 12/20/2016
  online version: https://docs.microsoft.com/powershell/module/deduplication/get-dedupvolume?view=windowsserver2019-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Get-DedupVolume
