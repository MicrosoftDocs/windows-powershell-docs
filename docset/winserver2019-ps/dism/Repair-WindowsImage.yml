### YamlMime:PowershellCmdlet
summary: |-
  Repairs a Windows image in a WIM or VHD file.
module: DISM
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: ""
- name: <xref href="Microsoft.Dism.Commands.ImageObject" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Dism.Commands.ImageInfoObject" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Dism.Commands.MountedImageInfoObject" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Dism.Commands.ImageObjectWithState" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Mount-WindowsImage
  href: ./Mount-WindowsImage.yml
- text: Dismount-WindowsImage
  href: ./Dismount-WindowsImage.yml
- text: Get-WindowsImage
  href: ./Get-WindowsImage.yml
- text: Save-WindowsImage
  href: ./Save-WindowsImage.yml
syntaxes:
- >-
  Repair-WindowsImage [-CheckHealth] [-ScanHealth] [-RestoreHealth] [-LimitAccess] [-Source <String[]>]

   [-NoRestart] -Path <String> [-WindowsDirectory <String>] [-SystemDrive <String>] [-LogPath <String>]

   [-ScratchDirectory <String>] [-LogLevel <LogLevel>] [<CommonParameters>]
- >-
  Repair-WindowsImage [-CheckHealth] [-ScanHealth] [-RestoreHealth] [-LimitAccess] [-Source <String[]>]

   [-NoRestart] [-Online] [-WindowsDirectory <String>] [-SystemDrive <String>] [-LogPath <String>]

   [-ScratchDirectory <String>] [-LogLevel <LogLevel>] [<CommonParameters>]
examples:
- title: 'Example 1: Scan an image for corruption'
  code: |-
    PS C:\> Repair-WindowsImage -Path "C:\offline\Mount" -ScanHealth
  description: |-
    This command scans the specified image for component store corruption.
  summary: ""
- title: 'Example 2: Check an image for corruption and whether to repair the image'
  code: |-
    PS C:\> Repair-WindowsImage -Path "C:\offline\Mount" -CheckHealth
  description: |-
    This command checks whether the specified image has been flagged as corrupted by a failed process and whether the corruption can be repaired.
  summary: ""
- title: 'Example 3: Check an image for corruption and repairs the image'
  code: |-
    PS C:\> Repair-WindowsImage -Online -RestoreHealth -Source "C:\Mounted\VHD\Windows\WinSxS", "C:\Windows\TEMP" -LimitAccess
  description: |-
    This command scans the specified image for component store corruption, and then performs repair operations automatically.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: CheckHealth
  description: |+
    Checks whether the image has been flagged as corrupted by a failed process and whether the corruption can be repaired.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: LimitAccess
  description: |+
    Prevents DISM from contacting Windows Update (WU) when searching for the source files to repair an online image.

    *LimitAccess* can only be used when servicing images that are running at least Windows® 8, Windows Server® 2012, or Windows® Preinstallation Environment (Windows PE) 4.0.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="LogLevel" data-throw-if-not-resolved="False" />
  name: LogLevel
  description: |+
    Specifies the maximum output level shown in the logs.
    The default log level is 3.
    The accepted values are as follows:
    - 1 = Errors only
    - 2 = Errors and warnings
    - 3 = Errors, warnings, and information
    - 4 = All of the information listed previously, plus debug output

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: LL
  parameterValueGroup: Errors, Warnings, WarningsInfo
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: LogPath
  description: |+
    Specifies the full path and file name to log to.
    If not set, the default is `%WINDIR%\Logs\Dism\dism.log`.
    In Windows PE, the default directory is the RAMDISK scratch space which can be as low as 32 MB.
    The log file will automatically be archived.
    The archived log file will be saved with .bak appended to the file name and a new log file will be generated.
    Each time the log file is archived the .bak file will be overwritten. 
    When using a network share that is not joined to a domain, use the net use command together with domain credentials to set access permissions before you set the log path for the DISM log.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: LP
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: NoRestart
  description: |+
    Suppresses reboot.
    If a reboot is not required, this command does nothing.
    This option will keep the application from prompting for a restart or keep it from restarting automatically.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Online
  isRequired: true
  description: |+
    Specifies that the action is to be taken on the operating system that is currently running on the local computer.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Path
  isRequired: true
  description: |+
    Specifies the full path to the root directory of the offline Windows image that you will service.
    If the directory named Windows is not a subdirectory of the root directory, *WindowsDirectory* must be specified.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: RestoreHealth
  description: |+
    Scans the image for component store corruption, and then performs repair operations automatically.
    This operation will take several minutes.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: ScanHealth
  description: |+
    Scans the image for component store corruption.
    This operation will take several minutes.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ScratchDirectory
  description: |+
    Specifies a temporary directory that will be used when extracting files for use during servicing.
    The directory must exist locally.
    If not specified, the `\Windows\%Temp%` directory will be used, with a subdirectory name of a randomly generated hexadecimal value for each run of DISM.
    Items in the scratch directory are deleted after each operation. 
    You should not use a network share location as a scratch directory to expand a package (.cab or .msu file) for installation.
    The directory used for extracting files for temporary usage during servicing should be a local directory.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Source
  description: |+
    Specifies the location of the files that are required to repair an image.
    You can specify the Windows directory of a mounted image or a running Windows installation that is shared on the network.

    If you specify multiple *Source* arguments, the files are gathered from the first location where they are found and the rest of the locations are ignored.
    Separate source locations with a comma.

    If you do not specify a *Source*, the default location set by Group Policy is used.
    Windows Update (WU) is also used for online images.

    *Source* can only be used when servicing images that are running at least Windows® 8 or Windows Server® 2012.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: SystemDrive
  description: |+
    Specifies the path to the location of the BootMgr files.
    This is necessary only when the BootMgr files are located on a partition other than the one that you are running the command from.
    Use -SystemDrive to service an installed Windows image from a Windows PE environment.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: WindowsDirectory
  description: |+
    Specifies the path to the Windows directory relative to the image path.
    This cannot be the full path to the Windows directory; it should be a relative path.
    If not specified, the default is the Windows directory in the root of the offline image directory.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: DISM.Repair-WindowsImage
name: Repair-WindowsImage
description: |-
  The **Repair-WindowsImage** cmdlet repairs a Windows image in a WIM or VHD file.

  Use the *Online* parameter to specify the running operating system on your local computer, or use the *Path* parameter to specify the location of a mounted Windows image.

  The *LimitAccess* parameter prevents access to Windows Update (WU) as a *Source* for repairing online images.

  The *CheckHealth* parameter checks whether the image has been flagged as corrupted by a failed process and whether the corruption can be repaired.

  The *ScanHealth* parameter scans the image for component store corruption.
  This operation will take several minutes.

  The *RestoreHealth* parameter scans the image for component store corruption, and then performs repair operations automatically.
  This operation will take several minutes.

  The *Source* parameter specifies the location of known good versions of files that can be used for the repair, such as a path to the root directory of a mounted image.

  *CheckHealth*, *ScanHealth*, *RestoreHealth*, *Source*, and *LimitAccess* can only be used when servicing images that are running at least Windows® 8 or Windows Server® 2012.
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: Microsoft.Dism.PowerShell.dll-Help.xml
  Module Name: System.Object[]
  ms.date: 12/21/2016
  online version: https://docs.microsoft.com/powershell/module/dism/repair-windowsimage?view=windowsserver2019-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Repair-WindowsImage
