### YamlMime:PowershellCmdlet
summary: |-
  Creates a hardware ID with a vendor ID and product ID combination in the MSDSM supported hardware list.
module: MPIO
notes: ""
inputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Clear-MSDSMSupportedHW
  href: ./Clear-MSDSMSupportedHW.yml
- text: Get-MSDSMSupportedHW
  href: ./Get-MSDSMSupportedHW.yml
- text: Remove-MSDSMSupportedHW
  href: ./Remove-MSDSMSupportedHW.yml
- text: Update-MPIOClaimedHW
  href: ./Update-MPIOClaimedHW.yml
syntaxes:
- >-
  New-MSDSMSupportedHW [-VendorId] <String> [-ProductId] <String> [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [<CommonParameters>]
- >-
  New-MSDSMSupportedHW [-AllApplicable] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob]

   [<CommonParameters>]
examples:
- title: 'Example 1: Add a hardware ID'
  code: |-
    PS C:\> New-MSDSMSupportedHW -ProductID "VendorX" -VendorID "ProductY"
  description: |-
    This example adds a hardware identifier with vendor ID of VendorX and product ID of ProductY combination in the MSDSM supported hardware list.
  summary: ""
- title: 'Example 2: Add all applicable hardware IDs'
  code: |-
    PS C:\> New-MSDSMSupportedHW -AllApplicable
  description: |-
    This example finds all applicable devices and then adds corresponding hardware identifiers to the MSDSM supported hardware list.
    Applicable devices are those that are connected to the system by using Fibre Channel, iSCSI, or SAS.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AllApplicable
  isRequired: true
  description: |+
    Specifies that all applicable devices that are connected to system by using Fibre Channel, iSCSI, or SAS, are added to the MSDSM supported hardware list.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: All
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    Runs the cmdlet as a background job.
    Use this parameter to run commands that take a long time to complete. 
     The cmdlet immediately returns an object that represents the job and then displays the command prompt.
    You can continue to work in the session while the job completes.
    To manage the job, use the `*-Job` cmdlets.
    To get the job results, use the [Receive-Job](https://go.microsoft.com/fwlink/?LinkID=113372) cmdlet. 
     For more information about Windows PowerShell® background jobs, see [about_Jobs](https://go.microsoft.com/fwlink/?LinkID=113251).

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a [New-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227967) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966) cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ProductId
  isRequired: true
  description: |+
    Specifies the product ID.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: VendorId
  isRequired: true
  description: |+
    Specifies the vendor ID.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
uid: MPIO.New-MSDSMSupportedHW
name: New-MSDSMSupportedHW
description: |-
  The **New-MSDSMSupportedHW** cmdlet creates a new hardware identifier (ID) with a specific vendor ID and product ID combination in the Microsoft Device Specific Module (MSDSM) supported hardware list.

  Unlike MPCLAIM.exe, when you specify the vendor ID and product ID, do not pad the fields with spaces.

  The **Update-MPIOClaimedHW** cmdlet must be run to have the Multipath I/O (MPIO) claiming process take effect.
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: MSDSMSupportedHW.cdxml-help.xml
  Module Name: MPIO
  ms.date: 12/27/2016
  online version: https://docs.microsoft.com/powershell/module/mpio/new-msdsmsupportedhw?view=windowsserver2019-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: New-MSDSMSupportedHW
