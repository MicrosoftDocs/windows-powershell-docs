### YamlMime:PowershellCmdlet
summary: |-
  Gets the LSO properties of the network adapter.
module: NetAdapter
notes: ""
inputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/MSFT_NetAdapter LsoSettingData" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
links:
- text: Disable-NetAdapterLso
  href: ./Disable-NetAdapterLso.yml
- text: Enable-NetAdapterLso
  href: ./Enable-NetAdapterLso.yml
- text: Set-NetAdapterLso
  href: ./Set-NetAdapterLso.yml
syntaxes:
- >-
  Get-NetAdapterLso [[-Name] <String[]>] [-IncludeHidden] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>]

   [-AsJob] [<CommonParameters>]
- >-
  Get-NetAdapterLso -InterfaceDescription <String[]> [-IncludeHidden] [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [<CommonParameters>]
examples:
- title: 'Example 1: Get the LSO properties for the specified network adapter'
  code: |-
    PS C:\> Get-NetAdapterLso -Name "MyAdapter"
  description: |-
    This command gets the LSO properties of the network adapter named MyAdapter.
  summary: ""
- title: 'Example 2: Display all the LSO properties for the specified network adapter'
  code: |-
    PS C:\> Get-NetAdapterLso -Name "MyAdapter" | Format-List -Property "*"
  description: |-
    This command displays all of the LSO properties of the network adapter named MyAdapter.
  summary: ""
- title: 'Example 3: Get all network adapters that have LSO enabled'
  code: |-
    PS C:\> Get-NetAdapterLso -Name "*" | Where-Object -FilterScript { $_.Enabled }
  description: |-
    This command gets all network adapters with LSO enabled.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    Runs the cmdlet as a background job.
    Use this parameter to run commands that take a long time to complete. 
     The cmdlet immediately returns an object that represents the job and then displays the command prompt.
    You can continue to work in the session while the job completes.
    To manage the job, use the `*-Job` cmdlets.
    To get the job results, use the [Receive-Job](https://go.microsoft.com/fwlink/?LinkID=113372) cmdlet. 
     For more information about Windows PowerShell® background jobs, see [about_Jobs](https://go.microsoft.com/fwlink/?LinkID=113251).

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a [New-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227967) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966) cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: IncludeHidden
  description: |+
    Indicates that the cmdlet includes both visible and hidden network adapters in the operation.
    By default only visible network adapters are included.
    If a wildcard character is used in identifying a network adapter and this parameter has been specified, then the wildcard string is matched against both hidden and visible network adapters.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InterfaceDescription
  isRequired: true
  description: |+
    Specifies an array of network adapter interface descriptions.
    For a physical network adapter this is typically the vendor name of the network adapter followed by a part number and description, such as `Contoso 12345 Gigabit Network Device`.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ifDesc, InstanceID
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Name
  description: |+
    Specifies an array of network adapter names.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ifAlias, InterfaceAlias
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: NetAdapter.Get-NetAdapterLso
name: Get-NetAdapterLso
description: |-
  The **Get-NetAdapterLso** cmdlet gets the state of large send offload (LSO) settings on the network adapter.
  LSO is a technology where the work of segmenting data into network frames is performed by the network adapter instead of by the TCP/IP stack.
  With LSO, TCP/IP sends very large data packets down to the network adapter driver and the network adapter hardware.
  The network adapter breaks up the data into smaller network-sized frames.
  This increases the speed of high-end send operations and decreases the processor usage of the computer, because the work is performed on the network adapter.
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: MSFT_NetAdapterLso.cdxml-help.xml
  Module Name: NetAdapter
  ms.date: 12/20/2016
  online version: https://docs.microsoft.com/powershell/module/netadapter/get-netadapterlso?view=windowsserver2019-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Get-NetAdapterLso
