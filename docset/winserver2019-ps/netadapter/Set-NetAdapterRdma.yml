### YamlMime:PowershellCmdlet
summary: |-
  Sets the RDMA properties on the network adapter.
module: NetAdapter
notes: ""
inputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/MSFT_NetAdapterRdmaSettingData" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/MSFT_NetAdapterRdmaSettingData" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
links:
- text: Disable-NetAdapterRdma
  href: ./Disable-NetAdapterRdma.yml
- text: Enable-NetAdapterRdma
  href: ./Enable-NetAdapterRdma.yml
- text: Get-NetAdapterRdma
  href: ./Get-NetAdapterRdma.yml
syntaxes:
- >-
  Set-NetAdapterRdma [[-Name] <String[]>] [-IncludeHidden] [-Enabled <Boolean>] [-NoRestart]

   [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [-PassThru] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  Set-NetAdapterRdma -InterfaceDescription <String[]> [-IncludeHidden] [-Enabled <Boolean>] [-NoRestart]

   [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [-PassThru] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  Set-NetAdapterRdma -InputObject <CimInstance[]> [-Enabled <Boolean>] [-NoRestart] [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [-PassThru] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Enable RDMA on the specified network adapter'
  code: |-
    PS C:\> Set-NetAdapterRdma -Name "MyAdapter" -Enabled $True
  description: |-
    This command enables RDMA on the network adapter named MyAdapter.
    The **Enable-NetAdapterRdma** cmdlet is the preferred cmdlet to perform this operation.
  summary: ""
- title: 'Example 2: Disable RDMA on the specified network adapter'
  code: |-
    PS C:\> Set-NetAdapterRdma -Name "MyAdapter" -Enabled $False
  description: |-
    This command disables RDMA on the network adapter named MyAdapter.
    The **Disable-NetAdapterRdma** cmdlet is the preferred cmdlet to perform this operation.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    Runs the cmdlet as a background job.
    Use this parameter to run commands that take a long time to complete. 
     The cmdlet immediately returns an object that represents the job and then displays the command prompt.
    You can continue to work in the session while the job completes.
    To manage the job, use the `*-Job` cmdlets.
    To get the job results, use the [Receive-Job](https://go.microsoft.com/fwlink/?LinkID=113372) cmdlet. 
     For more information about Windows PowerShell® background jobs, see [about_Jobs](https://go.microsoft.com/fwlink/?LinkID=113251).

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a [New-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227967) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966) cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: Enabled
  description: |+
    Indicates whether RDMA is enabled on the network adapter.
    The acceptable values for this parameter are: True or False.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: IncludeHidden
  description: |+
    Indicates that the cmdlet includes both visible and hidden network adapters in the operation.
    By default only visible network adapters are included.
    If a wildcard character is used in identifying a network adapter and this parameter has been specified, then the wildcard string is matched against both hidden and visible network adapters.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InputObject
  isRequired: true
  description: |+
    Specifies the input to this cmdlet.
    You can use this parameter, or you can pipe the input to this cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InterfaceDescription
  isRequired: true
  description: |+
    Specifies an array of network adapter interface descriptions.
    For a physical network adapter this is typically the name of the vendor of the network adapter followed by a part number and description, such as `Contoso 12345 Gigabit Network Device`.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ifDesc, InstanceID
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Name
  description: |+
    Specifies an array of network adapter names.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ifAlias, InterfaceAlias
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: NoRestart
  description: |+
    Indicates that the cmdlet does not restart the network adapter after completing the operation.
    Many advanced properties require restarting the network adapter before the new settings take effect.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns an object representing the item with which you are working.
    By default, this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: NetAdapter.Set-NetAdapterRdma
name: Set-NetAdapterRdma
description: |-
  The **Set-NetAdapterRdma** cmdlet sets the remote direct memory access (RDMA) properties on the network adapter.
  RDMA is a feature that enables network adapters to transfer data directly between each other without requiring the main processor of the computer to be part of that transfer.
  This results in lower latency and lower processor utilization.
  The Enable-NetAdapterRdma and DisableNetAdapterRdma cmdlets can also be used to manage RDMA.
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: MSFT_NetAdapterRdma.cdxml-help.xml
  Module Name: NetAdapter
  ms.date: 12/20/2016
  online version: https://docs.microsoft.com/powershell/module/netadapter/set-netadapterrdma?view=windowsserver2019-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Set-NetAdapterRdma
