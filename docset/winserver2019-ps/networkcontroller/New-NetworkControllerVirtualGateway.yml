### YamlMime:PowershellCmdlet
summary: |-
  Creates a virtual gateway.
module: NetworkController
notes: ""
outputs:
- name: <xref href=" " data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet outputs the following information: 

    - Resource reference URI.
    - Created time of the resource.
    - Instance ID of the resource.
    - Resource metadata.
    - Resource ID.
    - Properties of the resource:

    "{

             ""GatewaySubnets"" : @(@{ ""ResourceRef"": ""\<string\>"" } ), 
                   ""NetworkConnections"": @(

                         @{ \<NetworkControllerVirtualGatewayNetworkConnection\>}

                  ), 

             ""RoutingType"": """",

             ""BgpRouters"": @(

                      @{\<NetworkControllerVirtualGatewayBgpRouter\>}

             ), 

             ""PolicyMaps"": @(

                      @{\<NetworkControllerVirtualGatewayPolicyMap\>}

              ), 

              ""GatewayPools"": @(@{ ""ResourceRef"": ""\<string\>"" } ) 

    }"
links:
- text: Get-NetworkControllerVirtualGateway
  href: ./Get-NetworkControllerVirtualGateway.yml
- text: Remove-NetworkControllerVirtualGateway
  href: ./Remove-NetworkControllerVirtualGateway.yml
syntaxes:
- >-
  New-NetworkControllerVirtualGateway [-ResourceId] <String> [[-Tags] <PSObject>]

   [-Properties] <VirtualGatewayProperties> [[-Etag] <String>] [[-ResourceMetadata] <ResourceMetadata>] [-Force]

   -ConnectionUri <Uri> [-CertificateThumbprint <String>] [-Credential <PSCredential>] [-PassInnerException]

   [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Add a new virtual gateway configuration to the Network Controller'
  code: |-
    PS C:\> $uri = "https://networkcontroller"

    # Create a new object for tenant virtual gateway
    PS C:\> $VirtualGWProperties = New-Object Microsoft.Windows.NetworkController.VirtualGatewayProperties 

    # Update gateway pool reference
    PS C:\> $VirtualGWProperties.GatewayPools = @() 
    PS C:\> $VirtualGWProperties.GatewayPools += $gwPool 

    # Specify the Virtual Subnet to use for routing between the gateway and virtual network 
    PS C:\> $VirtualGWProperties.GatewaySubnets = @() 
    PS C:\> $VirtualGWProperties.GatewaySubnets += $RoutingSubnet 

    # Update the rest of the virtual gateway object properties
    PS C:\> $VirtualGWProperties.RoutingType = "Dynamic" 
    PS C:\> $VirtualGWProperties.NetworkConnections = @() 
    PS C:\> $VirtualGWProperties.BgpRouters = @() 

    # Add the new virtual gateway for tenant 
    PS C:\> New-NetworkControllerVirtualGateway -ConnectionUri $uri -ResourceId "Woodgrove_VirtualGW" -Properties $VirtualGWProperties 

    Confirm
    Performing the operation 'New-NetworkControllerVirtualGateway' on entities of type 'Microsoft.Windows.NetworkController.VirtualGateway' via
    'https://networkcontroller/networking/v1/virtualgateways/Woodgrove_VirtualGW'. Are you sure you want to continue? 
     [Y] Yes  [N] No  [S] Suspend  [?] Help (default is "Y"): yes

    Tags             : 
    ResourceRef      : /VirtualGateways/Woodgrove_VirtualGW
    InstanceId       : 49931c9d-8d5e-47a0-8c2c-7b5d597e9bc1
    Etag             : W/"b2e94f9d-c589-4c11-84dc-fc2241135352"
    ResourceMetadata : 
    ResourceId       : Woodgrove_VirtualGW
    Properties       : Microsoft.Windows.NetworkController.VirtualGatewayProperties
  description: |-
    This set of cmdlets adds a new tenant virtual gateway configuration to Network Controller.
  summary: ""
parameters:
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: CertificateThumbprint
  description: |+
    Specifies the digital public key X.509 certificate of a user account that has permission to perform this action.
    This is the certificate thumbprint of the certificate.
    This thumbprint must also be provided in the *ClientCertificateThumbprint* parameter in the **Install-NetworkController** or **Set-NetworkController** cmdlet so that Network Controller can authorize this user.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="Uri" data-throw-if-not-resolved="False" />
  name: ConnectionUri
  isRequired: true
  description: |+
    Specifies the Uniform Resource Identifier (URI) of the Network Controller, used by all Representational State Transfer (REST) clients to connect to Network Controller.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="PSCredential" data-throw-if-not-resolved="False" />
  name: Credential
  description: |+
    Specifies a user credential that has permission to perform this action.
    The default value is the current user.
    This user must be present in the security group provided in the *ClientSecurityGroup* parameter in the **Install-NetworkController** cmdlet.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Etag
  description: |+
    Specifies the entity tag (ETag) of the resource.
    An ETag is an HTTP response header returned by an HTTP-compliant web server.
    An ETag is used to determine change in the content of a resource at a given URL.
    The value of the header is an opaque string representing the state of the resource at the time the response was generated.

  defaultValue: None
  position: "5"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    Forces the command to run without asking for user confirmation.

  defaultValue: None
  position: "7"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassInnerException
  description: ""
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="VirtualGatewayProperties" data-throw-if-not-resolved="False" />
  name: Properties
  isRequired: true
  description: |+
    Specifies the properties of a virtual gateway that this cmdlet adds or updates.

  defaultValue: None
  pipelineInput: true
  position: "3"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ResourceId
  isRequired: true
  description: |+
    Specifies an array of resource IDs of virtual gateways.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ResourceMetadata" data-throw-if-not-resolved="False" />
  name: ResourceMetadata
  description: |+
    Specifies metadata information for the client, such as the tenant ID, group ID, and resource name.

  defaultValue: None
  position: "6"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="PSObject" data-throw-if-not-resolved="False" />
  name: Tags
  description: ""
  defaultValue: None
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: NetworkController.New-NetworkControllerVirtualGateway
name: New-NetworkControllerVirtualGateway
description: |-
  The **New-NetworkControllerVirtualGateway** cmdlet adds a new virtual gateway configuration for the specified tenant to the Network Controller.
  If the virtual gateway configuration already exists with Network Controller, this cmdlet overwrites and replaces the older configuration.
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: Microsoft.NetworkController.Powershell.dll-help.xml
  Module Name: NetworkController
  ms.date: 12/20/2016
  online version: https://docs.microsoft.com/powershell/module/networkcontroller/new-networkcontrollervirtualgateway?view=windowsserver2019-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: New-NetworkControllerVirtualGateway
