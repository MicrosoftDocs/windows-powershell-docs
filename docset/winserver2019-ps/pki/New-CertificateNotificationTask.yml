### YamlMime:PowershellCmdlet
summary: |-
  Creates a new task in the Task Scheduler that will be triggered when a certificate is replaced, expired, or about to expired.
module: pki
notes: ""
inputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.CertificateServices.Command.CertificateNotificationTask" data-throw-if-not-resolved="False" />
  description: |-
    A **CertificateNotificationTask** object that contains details about a newly created task.
links:
- text: Get-CertificateNotificationTask
  href: ./Get-CertificateNotificationTask.yml
- text: Remove-CertificateNotificationTask
  href: ./Remove-CertificateNotificationTask.yml
- text: Switch-Certificate
  href: ./Switch-Certificate.yml
syntaxes:
- >-
  New-CertificateNotificationTask -Type <CertificateNotificationType> [-RunTaskForExistingCertificates]

   -PSScript <String> -Name <String> -Channel <NotificationChannel> [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: EXAMPLE 1
  code: |-
    PS C:\>New-CertificateNotificationTask -PSScript C:\myscript.ps1 -Channel System -Type Replace -Name "My System Certificate Task"
  description: |-
    This example creates a system notification task for certificate replacement events with the name My System Certificate Task that will launch the myscript.ps1 script located on the C: drive.
    The cmdlet will run on the local system.
  summary: ""
- title: EXAMPLE 2
  code: |-
    PS C:\>New-CertificateNotificationTask -PSScript C:\myscript.ps1 -Channel User -Type Expire -Name "My User Certificate Task"
  description: |-
    This example creates a system notification task for the expiration and close-to-expiration certificate events with the name My User Certificate Task that will launch the myscript.ps1 script located on the C: drive.
    The cmdlet will run for all currently logged on users in the user contexts.
  summary: ""
parameters:
- type: <xref href="NotificationChannel" data-throw-if-not-resolved="False" />
  name: Channel
  isRequired: true
  description: |+
    Sets the channel of the CertificateServicesClient-Notifications log that will be monitored for certificate lifecycle events.
    The acceptable values for this parameter are:

     -- System:  The Operation-System channel will be used.
    This channel should be used to modify system certificate bindings that use computer certificates. 

     -- User: The Operational-User channel will be used.
    This channel should be used to modify user certificate bindings.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: System, User
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    Specifies the unique name for the certificate notification task.
    If a certificate notification task with the same name already exists, then an error is generated.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: PSScript
  isRequired: true
  description: |+
    Identifies the Windows PowerShellÂ® script that will be triggered by the certificate notification task.
    The script will be launched with the **NonInteractive** parameter.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: RunTaskForExistingCertificates
  description: |+
    Generates a replacement notification for any certificate in the My store that has been replaced in the past.
    For the notification to be generated both certificates must be present in the store.
    This parameter can only be used with the Replace type. 
    Note: The following warning will be displayed when this cmdlet is run with this parameter set to False and there are some certificates in MY store that would have resulted in a notification. 

     -- `There are certificates in My store that have been replaced in the past.
    You can use the New-CertificateNotification cmdlet with the RunTaskForExistingCerts parameter to generate notifications for those certificates to correct any configuration problems that you may already have on this machine.`

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CertificateNotificationType" data-throw-if-not-resolved="False" />
  name: Type
  isRequired: true
  description: |+
    Specifies the type of events that will trigger certificate notifications.
    The acceptable values for this parameter are:

     -- Replace: Certificate replacement events will trigger this notification, including certificates that are renewed by auto-enrollment, using the Certificates snap-in, or by using the Switch-Certificate cmdlet. 

     -- Expire: Certificate expiration and close-to-expire events will trigger this notification.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Replace, Expire
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: pki.New-CertificateNotificationTask
name: New-CertificateNotificationTask
description: |-
  The **New-CertificateNotificationTask** cmdlet creates a new task in the Task Scheduler that will be triggered when a certificate is replaced or expires.
  The task will launch the script specified by the **PSScript** parameter.

  If the **RunTaskForExistingCertificates** parameter is specified, then after this cmdlet is registered, the cmdlet will go through all certificates (including archived certificates) in the My store and initiate Replace events for all certificates with a Renewal property.
  The NewCertHash value will always be the one at the end of the renewal chain.
  For example; if certificate A was renewed to certificate B, which was then renewed to certificate C, then the cmdlet fires two events: certificate A to certificate C and certificate B to certificate C.
  This will ensure that applications that are still using old certificates are properly updated to the newest certificates.
  If any certificate has a renewal chain longer than 20, then the certificate is not logged.
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: Microsoft.CertificateServices.PKIClient.Cmdlets.dll-Help.xml
  Module Name: pki
  ms.date: 12/20/2016
  online version: https://docs.microsoft.com/powershell/module/pki/new-certificatenotificationtask?view=windowsserver2019-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: New-CertificateNotificationTask
