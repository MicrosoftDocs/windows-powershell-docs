### YamlMime:PowershellCmdlet
summary: |-
  Registers a scheduled task definition on a local computer.
module: ScheduledTasks
notes: ""
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Disable-ScheduledTask
  href: ./Disable-ScheduledTask.yml
- text: Enable-ScheduledTask
  href: ./Enable-ScheduledTask.yml
- text: Export-ScheduledTask
  href: ./Export-ScheduledTask.yml
- text: Get-ScheduledTask
  href: ./Get-ScheduledTask.yml
- text: New-ScheduledTask
  href: ./New-ScheduledTask.yml
- text: Set-ScheduledTask
  href: ./Set-ScheduledTask.yml
- text: Start-ScheduledTask
  href: ./Start-ScheduledTask.yml
- text: Stop-ScheduledTask
  href: ./Stop-ScheduledTask.yml
- text: Unregister-ScheduledTask
  href: ./Unregister-ScheduledTask.yml
syntaxes:
- >-
  Register-ScheduledTask [-Force] [[-Password] <String>] [[-User] <String>] [-TaskName] <String>

   [[-TaskPath] <String>] [-Action] <CimInstance[]> [[-Description] <String>] [[-Settings] <CimInstance>]

   [[-Trigger] <CimInstance[]>] [[-RunLevel] <RunLevelEnum>] [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [<CommonParameters>]
- >-
  Register-ScheduledTask [-Force] [[-Password] <String>] [[-User] <String>] [-TaskName] <String>

   [[-TaskPath] <String>] [-Xml] <String> [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob]

   [<CommonParameters>]
- >-
  Register-ScheduledTask [-Force] [-TaskName] <String> [[-TaskPath] <String>] [[-Principal] <CimInstance>]

   [-Action] <CimInstance[]> [[-Description] <String>] [[-Settings] <CimInstance>] [[-Trigger] <CimInstance[]>]

   [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [<CommonParameters>]
- >-
  Register-ScheduledTask [-Force] [-InputObject] <CimInstance> [[-Password] <String>] [[-User] <String>]

   [[-TaskName] <String>] [[-TaskPath] <String>] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob]

   [<CommonParameters>]
examples:
- title: 'Example 1: Register a scheduled task'
  code: |-
    PS C:\> $Time = New-ScheduledTaskTrigger -At 12:00 -Once
    PS C:\> $User = "Contoso\Administrator"
    PS C:\> $PS = New-ScheduledTaskAction -Execute "PowerShell.exe"
    PS C:\> Register-ScheduledTask -TaskName "SoftwareScan" -Trigger $Time -User $User -Action $PS
  description: |-
    In this example, the set of commands uses cmdlets and variables to define and register a scheduled task.

    The first command uses the New-ScheduledTaskTrigger cmdlet to assign a time trigger to the $Time variable.

    The second command assigns the $User variable the name of the user account in the context of which
    the task runs (Contoso\Administrator).

    The third command assigns the $PS variable to PowerShell.exe.
    This variable is used to define a task action.

    The fourth command registers a scheduled task that is named SoftwareScan in the root folder.
    The registered task uses the pre-created action and trigger values that are specified by the $Action and $User variables.
  summary: ""
parameters:
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Action
  isRequired: true
  description: |+
    Specifies an array of one or more work items for the task to run.
    If you specify multiple actions, the computer runs them in order.
    You can specify up to 32 actions.

  defaultValue: None
  position: "2"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    Runs the cmdlet as a background job. Use this parameter to run commands that take a long time to complete.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a [New-CimSession](https://docs.microsoft.com/en-us/powershell/module/cimcmdlets/new-cimsession) or [Get-CimSession](https://docs.microsoft.com/en-us/powershell/module/cimcmdlets/get-cimsession) cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Description
  description: |+
    Briefly describes the task.

  defaultValue: None
  position: "8"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    Instructs the cmdlet to perform the operation without prompting for confirmation.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Specifies the input object that is used in a pipeline command.

  defaultValue: None
  pipelineInput: true
  position: "2"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Password
  description: |+
    Specifies a password for the user account in the context of which the task runs.
    The password is ignored for the well-known system accounts.

    Well-known accounts are: NT AUTHORITY\SYSTEM, NT AUTHORITY\LOCALSERVICE, NT AUTHORITY\NETWORKSERVICE, and the well-known security identifiers (SIDs) for all three accounts.

  defaultValue: None
  position: "4"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: Principal
  description: |+
    Specifies the security context in which a task is run.

  defaultValue: None
  position: "5"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="RunLevelEnum" data-throw-if-not-resolved="False" />
  name: RunLevel
  description: |+
    Specifies the required privilege level to run tasks that are associated with the principal.

  defaultValue: None
  position: "7"
  aliases: ""
  parameterValueGroup: Limited, Highest
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" />
  name: Settings
  description: |+
    Specifies a configuration that the Task Scheduler service uses to determine how to run a task.

  defaultValue: None
  position: "4"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: TaskName
  isRequired: true
  description: |+
    Specifies the name of a scheduled task.

  defaultValue: None
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: TaskPath
  description: |+
    Specifies an array of one or more paths for scheduled tasks in Task Scheduler namespace. You can use **"*"** for a wildcard character query.
    You can use **\\*** for the root folder. To specify a full TaskPath you need to include the leading and trailing **\\**.
    If you do not specify a path, the cmdlet uses the root folder.

  defaultValue: None
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShellÂ® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Trigger
  description: |+
    Specifies an array of one or more trigger objects that start a scheduled task.
    A task can have a maximum of 48 triggers.

  defaultValue: None
  position: "3"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: User
  description: |+
    Specifies the name of the user account in the context of which Windows runs the task.

  defaultValue: None
  position: "3"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Xml
  isRequired: true
  description: |+
    Specifies the XML string that contains a task definition.

  defaultValue: None
  pipelineInput: true
  position: "2"
  aliases: ""
  parameterValueGroup: ""
uid: ScheduledTasks.Register-ScheduledTask
name: Register-ScheduledTask
description: |-
  The **Register-ScheduledTask** cmdlet registers a scheduled task definition on a local computer.

  You can register a task to run executable files (`.exe` and `.com`), batch files (`.bat` and `.cmd`),
  or any registered file type. However, this cmdlet does not check whether the file you intend it to
  run is compatible with your version, edition, or platform specialization of Windows.
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: PS_ScheduledTask_v1.0.cdxml-help.xml
  Module Name: ScheduledTasks
  ms.date: 12/20/2016
  online version: https://docs.microsoft.com/powershell/module/scheduledtasks/register-scheduledtask?view=windowsserver2019-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Register-ScheduledTask
