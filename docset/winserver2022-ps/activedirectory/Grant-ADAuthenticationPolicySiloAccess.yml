### YamlMime:PowershellCmdlet
summary: |-
  Grants permission to join an authentication policy silo.
module: ActiveDirectory
notes: ""
inputs:
- name: <xref href="Microsoft.ActiveDirectory.Management.ADAccount, Microsoft.ActiveDirectory.Management.ADAuthenticationPolicySilo" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="System.Object" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Revoke-ADAuthenticationPolicySiloAccess
  href: ./Revoke-ADAuthenticationPolicySiloAccess.yml
- text: AD DS Administration Cmdlets in Windows PowerShell
  href: ./index.yml
syntaxes:
- >-
  Grant-ADAuthenticationPolicySiloAccess [-WhatIf] [-Confirm] [-Account] <ADAccount> [-AuthType <ADAuthType>]

   [-Credential <PSCredential>] [-Identity] <ADAuthenticationPolicySilo> [-PassThru] [-Server <String>]

   [<CommonParameters>]
examples:
- title: 'Example 1: Grant access to an authentication policy silo to a user account'
  code: |-
    PS C:\> Grant-ADAuthenticationPolicySiloAccess -Identity AuthenticationPolicySilo01 -Account User01
  description: |-
    This command grants access to the authentication policy silo named AuthenticationPolicySilo01 to the user account named User01.
  summary: ""
- title: 'Example 2: grant access to an authentication policy silo for filter matches'
  code: |-
    PS C:\> Get-ADComputer -Filter 'Name -like "NewComputer*"' | Grant-ADAuthenticationPolicySiloAccess -Identity AuthenticationPolicySilo01
  description: |-
    This example first uses the **Get-ADComputer** cmdlet to get a list of computers that match the filter specified by the Filter parameter.
    The output is then passed to the **Grant-ADAuthenticationPolicySiloAccess** cmdlet to grant access to the authentication policy silo named AuthenticationPolicySilo02.
  summary: ""
parameters:
- type: <xref href="ADAccount" data-throw-if-not-resolved="False" />
  name: Account
  isRequired: true
  description: |+
    Specifies the account to which to grant access to the authentication policy silo.
    Specify the account in one of the following formats: 

    - A distinguished name
    - A GUID 
    - A security identifier 
    - A SAM account name

    The cmdlet searches the default naming context or partition to find the object.
    If two or more objects are found, the cmdlet returns a non-terminating error.

    You can also use this parameter to specify a variable that contains user, computer, and service account objects.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ADAuthType" data-throw-if-not-resolved="False" />
  name: AuthType
  description: |+
    Specifies the authentication method to use.
    The acceptable values for this parameter are:

    - Negotiate or 0
    - Basic or 1

    The default authentication method is Negotiate.
    A Secure Sockets Layer (SSL) connection is required for the Basic authentication method.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Negotiate, Basic
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="PSCredential" data-throw-if-not-resolved="False" />
  name: Credential
  description: |+
    Specifies a user account that has permission to perform the task.
    The default is the current user.
    Type a user name, such as User01 or Domain01\User01, or enter a **PSCredential** object, such as one generated by the **Get-Credential** cmdlet.

    By default, the cmdlet uses the credentials of the currently logged on user unless the cmdlet is run from an Active Directory Domain Services Windows PowerShell provider drive.
    If you run the cmdlet in a provider drive, the account associated with the drive is the default.

    If you specify credentials that do not have permission to perform the task, the cmdlet returns an error.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ADAuthenticationPolicySilo" data-throw-if-not-resolved="False" />
  name: Identity
  isRequired: true
  description: |+
    Specifies an **ADAuthenticationPolicySilo** object.
    Specify the authentication policy silo object in one of the following formats: 

    - A distinguished name
    - A GUID
    - A name

    This parameter can also get this object through the pipeline or you can set this parameter to an object instance.

    The cmdlet searches the default naming context or partition to find the object.
    If the cmdlet finds two or more objects, the cmdlet returns a non-terminating error.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns an object representing the item with which you are working.
    By default, this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Server
  description: |+
    Specifies the Active Directory Domain Services instance to which to connect, by providing one of the following values for a corresponding domain name or directory server.
    The service may be any of the following:  Active Directory Lightweight Domain Services, Active Directory Domain Services or Active Directory snapshot instance.

    Specify the Active Directory Domain Services instance in one of the following ways:  

    Domain name values: 
    - A Fully qualified domain name
    - A NetBIOS name

    Directory server values:  
    - A Fully qualified directory server name
    - A NetBIOS name
    - A Fully qualified directory server name and port

    The default value for this parameter is determined by one of the following methods in the order that they are listed:

    - By using the *Server* value from objects passed through the pipeline
    - By using the server information associated with the Active Directory Domain Services Windows PowerShell provider drive, when the cmdlet runs in that drive
    - By using the domain of the computer running Windows PowerShell

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: ActiveDirectory.Grant-ADAuthenticationPolicySiloAccess
name: Grant-ADAuthenticationPolicySiloAccess
description: |-
  The **Grant-ADAuthenticationPolicySiloAccess** cmdlet grants permission to an account to join an authentication policy silo in Active DirectoryÂ® Domain Services.
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: Microsoft.ActiveDirectory.Management.dll-Help.xml
  Module Name: ActiveDirectory
  ms.date: 12/27/2016
  online version: https://docs.microsoft.com/powershell/module/activedirectory/grant-adauthenticationpolicysiloaccess?view=windowsserver2022-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Grant-ADAuthenticationPolicySiloAccess
