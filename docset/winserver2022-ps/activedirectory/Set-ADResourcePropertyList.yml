### YamlMime:PowershellCmdlet
summary: |-
  Modifies a resource property list in Active Directory.
module: ActiveDirectory
notes: |-
  * This cmdlet does not work with an Active Directory snapshot.
  * This cmdlet does not work with a read-only domain controller.
inputs:
- name: <xref href="None or Microsoft.ActiveDirectory.Management.ADClaimTypeList" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="None or Microsoft.ActiveDirectory.Management.ADClaimTypeList" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-ADResourcePropertyList
  href: ./Get-ADResourcePropertyList.yml
- text: New-ADResourcePropertyList
  href: ./New-ADResourcePropertyList.yml
- text: Remove-ADResourcePropertyList
  href: ./Remove-ADResourcePropertyList.yml
syntaxes:
- >-
  Set-ADResourcePropertyList [-WhatIf] [-Confirm] [-Add <Hashtable>] [-AuthType <ADAuthType>] [-Clear <String[]>]

   [-Credential <PSCredential>] [-Description <String>] [-Identity] <ADResourcePropertyList> [-PassThru]

   [-ProtectedFromAccidentalDeletion <Boolean>] [-Remove <Hashtable>] [-Replace <Hashtable>] [-Server <String>]

   [<CommonParameters>]
- >-
  Set-ADResourcePropertyList [-WhatIf] [-Confirm] [-AuthType <ADAuthType>] [-Credential <PSCredential>]

   -Instance <ADResourcePropertyList> [-PassThru] [-Server <String>] [<CommonParameters>]
examples:
- title: 'Example 1: Modify a resource property list'
  code: |-
    PS C:\> Set-ADResourcePropertyList -Identity "Corporate Resource Property List" -Description "For corporate documents."
  description: |-
    This command sets the resource property list named Corporate Resource Property List with the description For corporate documents.
  summary: ""
- title: 'Example 2: Get a resource property list and modify it'
  code: |-
    PS C:\> Get-ADResourcePropertyList -Name "Corporate Resource Property List" | Set-ADResourcePropertyList -Description "For corporate documents."
  description: |-
    This command gets the resource property list named Corporate Resource Property List and then sets its description.
  summary: ""
parameters:
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: Add
  description: |+
    Specifies values to add to an object property.
    Use this parameter to add one or more values to a property that cannot be modified using a cmdlet parameter.
    To modify an object property, you must use the Lightweight Directory Access Protocol (LDAP) display name.
    You can specify multiple values to a property by specifying a comma-separated list of values and more than one property by separating them using a semicolon.
    The format for this parameter is:

    `-Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}`

    When you use the *Add*, *Remove*, *Replace*, and *Clear* parameters together, the operations will be performed in the following order:

    - **Remove**
    - **Add**
    - **Replace**
    - **Clear**

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ADAuthType" data-throw-if-not-resolved="False" />
  name: AuthType
  description: |+
    Specifies the authentication method to use.
    The acceptable values for this parameter are:

    - Negotiate or 0
    - Basic or 1

    The default authentication method is Negotiate.

    A Secure Sockets Layer (SSL) connection is required for the Basic authentication method.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Negotiate, Basic
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Clear
  description: |+
    Specifies an array of object properties that will be cleared in the directory.
    Use this parameter to clear one or more values of a property that cannot be modified using a cmdlet parameter.
    To modify an object property, you must use the LDAP display name.
    You can modify more than one property by specifying a comma-separated list.
    The format for this parameter is:

    `-Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName`

    When you use the *Add*, *Remove*, *Replace*, and *Clear* parameters together, the operations will be performed in the following order:

    - **Remove**
    - **Add**
    - **Replace**
    - **Clear**

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="PSCredential" data-throw-if-not-resolved="False" />
  name: Credential
  description: |+
    Specifies the user account credentials to use to perform this task.
    The default credentials are the credentials of the currently logged on user unless the cmdlet is run from an Active Directory module for Windows PowerShell provider drive.
    If the cmdlet is run from such a provider drive, the account associated with the drive is the default.

    To specify this parameter, you can type a user name, such as User1 or Domain01\User01 or you can specify a **PSCredential** object.
    If you specify a user name for this parameter, the cmdlet prompts for a password.

    You can also create a **PSCredential** object by using a script or by using the **Get-Credential** cmdlet.
    You can then set the *Credential* parameter to the **PSCredential** object.

    If the acting credentials do not have directory-level permission to perform the task, Active Directory module for Windows PowerShell returns a terminating error.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Description
  description: |+
    Specifies a description of the object.
    This parameter sets the value of the **Description** property for the object.
    The LDAP Display Name (**ldapDisplayName**) for this property is description.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ADResourcePropertyList" data-throw-if-not-resolved="False" />
  name: Identity
  isRequired: true
  description: |+
    Specifies an Active Directory object by providing one of the following property values.
    The identifier in parentheses is the LDAP display name for the attribute.
    The acceptable values for this parameter are:

    - A distinguished name
    - A GUID (objectGUID)

    This parameter can also get this object through the pipeline or you can set this parameter to an object instance.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ADResourcePropertyList" data-throw-if-not-resolved="False" />
  name: Instance
  isRequired: true
  description: |+
    Specifies an instance of a resource property list object to use as a template for a new resource property list object.

    You can use an instance of an existing resource property list object as a template or you can construct a resource property list object by using the Windows PowerShell command line or by using a script.

    Method 1: Use an existing resource property list object as a template for a new object.
    To retrieve an instance of an existing resource property list object, use a cmdlet such as **Get-ADResourcePropertyList**.
    Then provide this object to the Instance parameter of the **New-ADResourcePropertyList** cmdlet to create a new resource property list object.
    You can override property values of the new object by setting the appropriate parameters.

    Method 2: Create a new **ADResourcePropertyList** and set the property values by using the Windows PowerShell command line interface.
    Then pass this object to the Instance parameter of the **New-ADResourcePropertyList** cmdlet to create the new resource property list object.

    Note: Specified attributes are not validated, so attempting to set attributes that do not exist or cannot be set will raise an error.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns an object representing the item with which you are working.
    By default, this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: ProtectedFromAccidentalDeletion
  description: |+
    Specifies whether to prevent the object from being deleted.
    When this property is set to true, you cannot delete the corresponding object without changing the value of the property.
    The acceptable values for this parameter are:

    - $False or 0
    - $True or 1

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: Remove
  description: |+
    Specifies that the cmdlet remove values of an object property.
    Use this parameter to remove one or more values of a property that cannot be modified using a cmdlet parameter.
    To remove an object property, you must use the LDAP display name.
    You can remove more than one property by specifying a semicolon-separated list.
    The format for this parameter is:

    `-Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}`

    When you use the *Add*, *Remove*, *Replace*, and *Clear* parameters together, the parameters will be applied in the following sequence:

    - **Remove**
    - **Add**
    - **Replace**
    - **Clear**

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: Replace
  description: |+
    Specifies values for an object property that will replace the current values.
    Use this parameter to replace one or more values of a property that cannot be modified using a cmdlet parameter.
    To modify an object property, you must use the LDAP display name.
    You can modify more than one property by specifying a comma-separated list.
    The format for this parameter is:

    `-Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}`

    When you use the *Add*, *Remove*, *Replace*, and *Clear* parameters together, the operations will be performed in the following order:

    - **Remove**
    - **Add**
    - **Replace**
    - **Clear**

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Server
  description: |+
    `-Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}`

    When you use the *Add*, *Remove*, *Replace*, and *Clear* parameters together, the operations will be performed in the following order:

    - **Remove**
    - **Add**
    - **Replace**
    - **Clear**

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: ActiveDirectory.Set-ADResourcePropertyList
name: Set-ADResourcePropertyList
description: |-
  The **Set-ADResourcePropertyList** cmdlet can be used to modify a resource property list in Active Directory.
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: Microsoft.ActiveDirectory.Management.dll-Help.xml
  Module Name: ActiveDirectory
  ms.date: 12/27/2016
  online version: https://docs.microsoft.com/powershell/module/activedirectory/set-adresourcepropertylist?view=windowsserver2022-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Set-ADResourcePropertyList
