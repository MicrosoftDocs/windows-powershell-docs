### YamlMime:PowershellCmdlet
summary: |-
  Gets the priority-based flow control settings.
module: DcbQoS
notes: ""
inputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/MSFT_NetQosFlowControlSettingData" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
    This cmdlet returns a **MSFT_NetQosFlowControlSettingData** object that contains the flow control settings per priority.
links:
- text: Enable-NetQosFlowControl
  href: ./Enable-NetQosFlowControl.yml
- text: Disable-NetQosFlowControl
  href: ./Disable-NetQosFlowControl.yml
- text: Set-NetQosDcbxSetting
  href: ./Set-NetQosDcbxSetting.yml
- text: Set-NetQosFlowControl
  href: ./Set-NetQosFlowControl.yml
syntaxes:
- >-
  Get-NetQosFlowControl [[-Priority] <Byte[]>] [[-InterfaceAlias] <String>] [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [<CommonParameters>]
- >-
  Get-NetQosFlowControl [[-Priority] <Byte[]>] [[-InterfaceIndex] <UInt32>] [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [<CommonParameters>]
examples:
- title: 'Example 1: Display flow control settings'
  code: |-
    PS C:\> Get-NetQosFlowControl

    Priority   Enabled 
    --------   ------- 
    0          False 
    1          False 
    2          False 
    3          True 
    4          False 
    5          False 
    6          False 
    7          False
  description: |-
    This command displays flow control settings.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    Runs the cmdlet as a background job. Use this parameter to run commands that take a long time to complete. 

    The cmdlet immediately returns an object that represents the job and then displays the command prompt. 
    You can continue to work in the session while the job completes. 
    To manage the job, use the `*-Job` cmdlets. 
    To get the job results, use the [Receive-Job](https://go.microsoft.com/fwlink/?LinkID=113372) cmdlet. 

    For more information about Windows PowerShell background jobs, see [about_Jobs](https://go.microsoft.com/fwlink/?LinkID=113251).

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer. 
    Enter a computer name or a session object, such as the output of a [New-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227967) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966) cmdlet. 
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: InterfaceAlias
  description: ""
  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: IfAlias
  parameterValueGroup: ""
- type: <xref href="UInt32" data-throw-if-not-resolved="False" />
  name: InterfaceIndex
  description: ""
  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: IfIndex
  parameterValueGroup: ""
- type: <xref href="Byte" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Priority
  description: ""
  defaultValue: None
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: ""
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: DcbQoS.Get-NetQosFlowControl
name: Get-NetQosFlowControl
description: |-
  The **Get-NetQosFlowControl** cmdlet gets the priority-based flow control (PFC) settings programmed in Windows ServerÂ® 2012 and later.

  For more information about PFC, see the **Enable-NetQosFlowControl** cmdlet.

  PFC is part of the IEEE data center bridging (DCB) standard.
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: MSFT_NetQosFlowControl.cdxml-help.xml
  Module Name: DcbQoS
  ms.date: 12/27/2016
  online version: https://docs.microsoft.com/powershell/module/dcbqos/get-netqosflowcontrol?view=windowsserver2022-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Get-NetQosFlowControl
