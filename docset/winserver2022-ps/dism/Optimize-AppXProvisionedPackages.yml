### YamlMime:PowershellCmdlet
summary: |-
  Optimizes the total file size of provisioned packages on the image by replacing identical files with
  hard links.
module: DISM
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Dism.Commands.LogLevel" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Dism.Commands.ImageObject" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: https://go.microsoft.com/fwlink/?LinkId=293633
  href: https://go.microsoft.com/fwlink/?LinkId=293633
syntaxes:
- >-
  Optimize-AppXProvisionedPackages -Path <String> [-WindowsDirectory <String>] [-SystemDrive <String>]

   [-LogPath <String>] [-ScratchDirectory <String>] [-LogLevel <LogLevel>] [<CommonParameters>]
examples:
- title: 'Example 1: Optimize provisioned packages in an offline Windows image'
  code: |-
    PS> Optimize-AppXProvisionedPackages -Path ".\wim\image.wim"
  description: |-
    This command optimizes the total file size of provisioned packages in the image named
    *image.wim*.
  summary: ""
parameters:
- type: <xref href="LogLevel" data-throw-if-not-resolved="False" />
  name: LogLevel
  description: |+
    Specifies the maximum output level shown in the logs.
    The default log level is 3.
    The accepted values are as follows:
    - 1 = Errors only
    - 2 = Errors and warnings
    - 3 = Errors, warnings, and information
    - 4 = All of the information listed previously, plus debug output

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: LL
  parameterValueGroup: Errors, Warnings, WarningsInfo, Debug
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: LogPath
  description: |+
    Specifies the full path and file name to log to. If not set, the default is
    `%WINDIR%\Logs\Dism\dism.log`. In Windows PE, the default directory is the RAMDISK scratch space
    which can be as low as 32 MB. The log file will automatically be archived. The archived log file
    will be saved with .bak appended to the file name and a new log file will be generated. Each time
    the log file is archived the .bak file will be overwritten. When using a network share that is not
    joined to a domain, use the net use command together with domain credentials to set access
    permissions before you set the log path for the DISM log.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: LP
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Online
  isRequired: true
  description: |+
    Do not use. **Optimize-AppXProvisionedPackages** can't optimize provisioned AppX packages if the
    image is online. 

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Path
  isRequired: true
  description: |+
    Specifies the full path to the root directory of the offline Windows image that you will service. If
    the directory named Windows is not a subdirectory of the root directory, *WindowsDirectory* must be
    specified.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ScratchDirectory
  description: |+
    Specifies a temporary directory that will be used when extracting files for use during servicing.
    The directory must exist locally. If not specified, the `\Windows\%Temp%` directory will be used,
    with a subdirectory name of a randomly generated hexadecimal value for each run of DISM. Items in
    the scratch directory are deleted after each operation. You should not use a network share location
    as a scratch directory to expand a package (.cab or .msu file) for installation. The directory used
    for extracting files for temporary usage during servicing should be a local directory.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: SystemDrive
  description: |+
    Specifies the path to the location of the BootMgr files. This is necessary only when the BootMgr
    files are located on a partition other than the one that you are running the command from. Use
    -SystemDrive to service an installed Windows image from a Windows PE environment.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: WindowsDirectory
  description: |+
    Specifies the path to the Windows directory relative to the image path. This cannot be the full path
    to the Windows directory; it should be a relative path. If not specified, the default is the Windows
    directory in the root of the offline image directory.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: DISM.Optimize-AppXProvisionedPackages
name: Optimize-AppXProvisionedPackages
description: |-
  Optimizes the total file size of provisioned packages on the image by replacing identical files with
  hard links. 

  When building an image, mount the disk image, add AppX packages, optimize provisioned packages, then
  dismount the disk image.

  Once an image with provisioned AppX packages is online,
  **Optimize-AppXProvisionedPackages** won't be able to optimize provisioned AppX packages. If you
  take an image offline and add packages, only the packages that are provisioned after the image was
  brought offline are optimized.
metadata:
  description: Optimizes the total file size of provisioned packages on the image by replacing identical files with hard links.
  external help file: Microsoft.Dism.PowerShell.dll-Help.xml
  Module Name: Dism
  ms.date: 10/13/2021
  online version: https://learn.microsoft.com/powershell/module/dism/optimize-appxprovisionedpackages?view=windowsserver2022-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Optimize-AppXProvisionedPackages
