### YamlMime:PowershellCmdlet
summary: |-
  Sets the reserved storage state of the image.
module: DISM
notes: |-
  Supported on Windows 10, version 2004
inputs:
- name: <xref href="Microsoft.Dism.Commands.ReservedStorageState" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Dism.Commands.LogLevel" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Dism.Commands.ReservedStorageStateObject" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-WindowsReservedStorageState
  href: ./Get-WindowsReservedStorageState.yml
syntaxes:
- >-
  Set-WindowsReservedStorageState -State <ReservedStorageState> [-LogPath <String>] [-ScratchDirectory <String>]

   [-LogLevel <LogLevel>] [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    PS C:\> Set-WindowsReservedStorageState -State Enabled -Online
  description: |-
    This command enables Windows reserved storage on the local host.
  summary: ""
parameters:
- type: <xref href="LogLevel" data-throw-if-not-resolved="False" />
  name: LogLevel
  description: |+
    Specifies the maximum output level shown in the logs.
    The default log level is 3.
    The accepted values are as follows:
    - 1 = Errors only
    - 2 = Errors and warnings
    - 3 = Errors, warnings, and information
    - 4 = All of the information listed previously, plus debug output

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: LL
  parameterValueGroup: Errors, Warnings, WarningsInfo
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: LogPath
  description: |+
    Specifies the full path and file name to log to.
    If not set, the default is `%WINDIR%\Logs\Dism\dism.log`.
    In Windows PE, the default directory is the RAMDISK scratch space which can be as low as 32 MB.
    The log file will automatically be archived.
    The archived log file will be saved with .bak appended to the file name and a new log file will be generated.
    Each time the log file is archived the .bak file will be overwritten. 
    When using a network share that is not joined to a domain, use the net use command together with domain credentials to set access permissions before you set the log path for the DISM log.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: LP
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ScratchDirectory
  description: |+
    Specifies a temporary directory that will be used when extracting files for use during servicing.
    The directory must exist locally.
    If not specified, the `\Windows\%Temp%` directory will be used, with a subdirectory name of a randomly generated hexadecimal value for each run of DISM.
    Items in the scratch directory are deleted after each operation. 
    You should not use a network share location as a scratch directory to expand a package (.cab or .msu file) for installation.
    The directory used for extracting files for temporary usage during servicing should be a local directory.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ReservedStorageState" data-throw-if-not-resolved="False" />
  name: State
  isRequired: true
  description: |+
    The reserved storage state of the image, either Disabled or Enabled.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: Disabled, Enabled
uid: DISM.Set-WindowsReservedStorageState
name: Set-WindowsReservedStorageState
description: |-
  Sets the state of reserved storage. This command line option is only supported for online Windows images. If reserved storage is in use, it may not be disabled, and the following error is returned: <i>This operation is not supported when reserved storage is in use. Please wait for any servicing operations to complete and then try again later. </i>Changes to reserved storage state are reflected in Sysprep generalized Windows images. For more information see [Sysprep (Generalize) a Windows installation](https://docs.microsoft.com/windows-hardware/manufacture/desktop/sysprep--system-preparation--overview)
metadata:
  external help file: Microsoft.Dism.PowerShell.dll-Help.xml
  Module Name: System.Object[]
  online version: https://docs.microsoft.com/powershell/module/dism/set-windowsreservedstoragestate?view=windowsserver2022-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
