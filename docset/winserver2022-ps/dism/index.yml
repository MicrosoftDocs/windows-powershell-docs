### YamlMime:PowershellModule
children:
- title: DISM
  cmdlets:
  - DISM.Add-AppxProvisionedPackage
  - DISM.Add-WindowsCapability
  - DISM.Add-WindowsDriver
  - DISM.Add-WindowsImage
  - DISM.Add-WindowsPackage
  - DISM.Clear-WindowsCorruptMountPoint
  - DISM.Disable-WindowsOptionalFeature
  - DISM.Dismount-WindowsImage
  - DISM.Enable-WindowsOptionalFeature
  - DISM.Expand-WindowsCustomDataImage
  - DISM.Expand-WindowsImage
  - DISM.Export-WindowsCapabilitySource
  - DISM.Export-WindowsDriver
  - DISM.Export-WindowsImage
  - DISM.Get-AppxProvisionedPackage
  - DISM.Get-NonRemovableAppsPolicy
  - DISM.Get-WIMBootEntry
  - DISM.Get-WindowsCapability
  - DISM.Get-WindowsDriver
  - DISM.Get-WindowsEdition
  - DISM.Get-WindowsImage
  - DISM.Get-WindowsImageContent
  - DISM.Get-WindowsOptionalFeature
  - DISM.Get-WindowsPackage
  - DISM.Get-WindowsReservedStorageState
  - DISM.Mount-WindowsImage
  - DISM.New-WindowsCustomImage
  - DISM.New-WindowsImage
  - DISM.Optimize-AppXProvisionedPackages
  - DISM.Optimize-WindowsImage
  - DISM.Remove-AppxProvisionedPackage
  - DISM.Remove-WindowsCapability
  - DISM.Remove-WindowsDriver
  - DISM.Remove-WindowsImage
  - DISM.Remove-WindowsPackage
  - DISM.Repair-WindowsImage
  - DISM.Save-WindowsImage
  - DISM.Set-AppXProvisionedDataFile
  - DISM.Set-NonRemovableAppsPolicy
  - DISM.Set-WindowsEdition
  - DISM.Set-WindowsProductKey
  - DISM.Set-WindowsReservedStorageState
  - DISM.Split-WindowsImage
  - DISM.Start-OSUninstall
  - DISM.Update-WIMBootEntry
  - DISM.Use-WindowsUnattend
uid: DISM
name: DISM
description: |-
  The Deployment Image Servicing and Management (DISM) platform is used to mount and service Windows
  images before deployment. A subset of DISM commands can be used on online Windows images. You can
  use DISM tools to mount, and get information about, Windows image (`.wim`) files or virtual hard
  disks (`.vhd` or `.vhdx`). You can also use it to install, uninstall, configure, and update Windows
  features, packages, and drivers in a Windows image or to change the edition of a Windows image.

  The DISM platform also includes a command-line tool, DISM.exe, and the
  [DISM API](https://go.microsoft.com/fwlink/?LinkID=237611). The command-line tool is available in
  the
  [Windows Assessment and Deployment Kit (Windows ADK)](https://go.microsoft.com/fwlink/?LinkId=206587)
  and includes additional functionality that supports servicing commands for international settings.

  You can check for errors when running DISM cmdlets by checking if the `$?`. If set to True the last
  operation succeeded. If False the last operation failed. The `$LASTEXITCODE` contains the exit code
  of the last Win32 executable run. For example, to check that the `Get-WindowsImage` cmdlet fails to
  get information about the Windows image contained in the file, `E:\images\c.wim`, type the
  following:

  ```powershell
  try
  {

      Get-WindowsImage -ImagePath E:\images\c.wim
  }
  catch
  {
      $message = "TRAPPED: {0}: '{1}'" -f ($_.Exception.GetType().FullName), ($_.Exception.Message)
      Write-host $message
  }

  ```

  For more information about error handling, see the
  [about_Try_Catch_Finally](https://go.microsoft.com/fwlink/p/?LinkID=317390).
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  Download Help Link: https://aka.ms/winsvr-2022-pshelp
  Help Version: 5.0.1.1
  Locale: en-US
  Module Guid: 389c464d-8b8d-48e9-aafe-6d8a590d6798
  Module Name: DISM
  ms.date: 10/07/2021
  title: DISM
