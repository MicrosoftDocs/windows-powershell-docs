### YamlMime:PowershellCmdlet
summary: |-
  Runs validation tests for failover cluster hardware and settings.
module: FailoverClusters
notes: ""
inputs:
- name: <xref href="Microsoft.FailoverClusters.PowerShell.Cluster" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="System.IO.FileInfo" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.FailoverClusters.PowerShell.ClusterTestInfo" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-Cluster
  href: ./Get-Cluster.yml
- text: New-Cluster
  href: ./New-Cluster.yml
- text: Remove-Cluster
  href: ./Remove-Cluster.yml
- text: Start-Cluster
  href: ./Start-Cluster.yml
- text: Stop-Cluster
  href: ./Stop-Cluster.yml
syntaxes:
- >-
  Test-Cluster [[-Node] <StringCollection>] [-Disk <Object[]>] [-Pool <Object[]>]

   [-ReportName <String>] [-List] [-Include <StringCollection>] [-Ignore <StringCollection>] [-Force]

   [-InputObject <PSObject>] [-Cluster <String>] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Validate local cluster'
  code: |-
    Test-Cluster
  description: |-
    This example runs all applicable cluster validation tests on the local cluster.
  summary: ""
- title: 'Example 2: Validate specified nodes'
  code: |-
    Test-Cluster -Node "node1", "node2"
  description: |-
    This example runs all cluster validation tests on the nodes named `node1` and `node2`. If either
    `node1` or `node2` is already a member of a cluster, then the tests will include all nodes in that
    cluster.
  summary: ""
- title: 'Example 3: View tests and categories in cluster validation'
  code: |-
    Test-Cluster -List
  description: |-
    This example lists the names of all tests and categories in cluster validation. Specify these test
    names with **Ignore** or **Include** parameters to run specific tests.
  summary: ""
- title: 'Example 4: Validate specified nodes for storage'
  code: |-
    Test-Cluster -Node "node1", "node2" -Include "Storage"
  description: |-
    This example runs the storage validation tests on the nodes named node1 and node2. If either node1
    or node2 is already a member of a cluster, then the tests will include all nodes in that cluster.
  summary: ""
- title: 'Example 5: Validate specified nodes for everything except inventory'
  code: |-
    Test-Cluster -Node "node1", "node2" -Ignore Inventory
  description: |-
    This example runs all validation tests except the Inventory tests on the nodes named node1 and
    node2. If either node1 or node2 is already a member of a cluster, then the tests will include all
    nodes in that cluster.
  summary: ""
- title: 'Example 6: Run a specific test'
  code: |-
    Test-Cluster -Include "List Potential Cluster Disks"
  description: |-
    This example runs the test called List Potential Cluster Disks on the local cluster.
  summary: ""
- title: 'Example 7: Run multiple tests'
  code: |-
    Test-Cluster -Include "List System Drivers","List Unsigned Drivers"
  description: |-
    This example runs the tests called List System Drivers and List Unsigned Drivers on the local
    cluster.
  summary: ""
parameters:
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Cluster
  description: |+
    Specifies the name of the cluster on which to run this cmdlet. If the input for this parameter is
    `.` or it is omitted, then the cmdlet runs on the local cluster.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="Object" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Disk
  description: |+
    Specifies the disk number or disks for which to run the cmdlet. If the specified disk is online and
    is assigned to a clustered role or Cluster Shared Volume, you must also specify the **Force**
    parameter to take the disk offline for the duration of the storage tests. Otherwise, the specified
    disk must be offline before the cmdlet is run. If the **Disk** parameter isn't specified, storage
    tests run on all disks that are available for use in the cluster or that are in the cluster resource
    offline or failed state.

    The acceptable values for this parameter are:

    - **Int32, Int64, Uint32, or Uint64**. A number that represents a master boot record (MBR) signature of
      the disk.
    - **System.String**. A string that represents a master boot record (MBR) signature of the disk,
      hexadecimal format is supported.
    - **System.String**. A string that represents the GUID of a GPT disk.
    - **ClusterResource**. A cluster resource object that represents a clustered disk.
    - **CimInstance#MSFT_Disk**. An object returned from `Get-Disk`, from the Windows PowerShell storage
      module.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    Runs the cmdlet without prompting for confirmation. By default the cmdlet will ask for confirmation
    from the user before proceeding. When combined with the **Disk** or **Pool** parameters, the disks
    or storage pool is taken offline for the duration of the storage tests.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="StringCollection" data-throw-if-not-resolved="False" />
  name: Ignore
  description: |+
    Specifies which tests or category of tests to ignore during the validation test run. All other
    tests or category of tests will run.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="StringCollection" data-throw-if-not-resolved="False" />
  name: Include
  description: |+
    Specifies which tests or category of tests to include during the validation test run. Only the tests
    or category of tests specified here will run.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="PSObject" data-throw-if-not-resolved="False" />
  name: InputObject
  description: |+
    Specifies the cluster on which to run the validation tests.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: List
  description: |+
    Causes the cmdlet to list the tests and test categories. No tests will run on the servers or cluster
    nodes.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="StringCollection" data-throw-if-not-resolved="False" />
  name: Node
  description: |+
    Specifies a comma-separated list of server names on which to run the cluster validation tests.

  defaultValue: None
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Object" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Pool
  description: |+
    Specifies the clustered storage pool or pools for which to run the cmdlet. When the specified
    storage pool is online and a virtual disk in the storage pool is assigned to a clustered role or
    Cluster Shared Volume, you must also specify the **Force** parameter to take the storage pool
    offline for the duration of the storage tests. Otherwise, command will exit with an error. The
    specified storage pool must be taken offline before running the storage tests. If the **Pool**
    parameter isn't specified, storage tests run on all storage pools that are available for use in the
    cluster or that are in the cluster resource offline or failed state.

    The acceptable values for this parameter are:

    - **System.String**: A string that represents the name of the clustered storage pool or pools.
    - **ClusterResource**: A cluster resource object that represents a clustered storage pool.
    - **CimInstance#MSFT_StoragePool**: An object returned from `Get-StoragePool`, from the Windows
      PowerShell storage module.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ReportName
  description: |+
    Specifies the name of the test report to generate.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs. The cmdlet isn't run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: FailoverClusters.Test-Cluster
name: Test-Cluster
description: |-
  The `Test-Cluster` cmdlet runs validation tests for failover cluster hardware and settings. Tests
  can be run both before and after a cluster is set up.

  Test results are captured in a file with the file name that you specify. By running the validation
  tests, you can confirm that your hardware and settings are compatible with Failover Clustering.
  There are multiple types of tests, including Cluster, Inventory, Network, Storage, System, and other
  types of tests. Storage tests will not test online disks or storage pools that are in use by a
  clustered role. To test such disks, first run `Stop-ClusterGroup` to stop the clustered role, and
  then run `Test-Cluster`. After the tests are done, start the clustered roles, also known as resource
  groups, again.

  > [!NOTE]
  > To perform some of the Cluster Shared Volume (CSV) validation tests, the `Test-Cluster` command
  > creates a local user account named CliTest2 on each cluster node. The account is automatically
  > removed from your system after the cluster validation tests are completed.
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: Microsoft.FailoverClusters.PowerShell.dll-Help.xml
  Module Name: FailoverClusters
  ms.date: 11/23/2022
  online version: https://learn.microsoft.com/powershell/module/failoverclusters/test-cluster?view=windowsserver2022-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Test-Cluster
