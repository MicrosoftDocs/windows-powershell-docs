### YamlMime:PowershellCmdlet
summary: |-
  Exports the IIS configuration and machine keys.
module: IISAdministration
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.Security.SecureString" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="System.Object" data-throw-if-not-resolved="False" />
  description: ""
syntaxes:
- >-
  Export-IISConfiguration [-PhysicalPath] <String> [[-UserName] <String>] [[-Password] <SecureString>]

   [[-KeyEncryptionPassword] <SecureString>] [-DontExportKeys] [-Force] [<CommonParameters>]
examples:
- title: 'Example 1: Export a configuration'
  code: |-
    PS C:\> $KeyEncryptionPassword = ConvertTo-SecureString -AsPlainText -String "SecurePa$$w0rd" -Force
    #Automation scenarios
    PS C:\> $KeyEncryptionPassword = Read-Host -AsSecureString
    #UI scenarios
    PS C:\> Export-IISConfiguration -PhysicalPath "C:\export" -KeyEncryptionPassword $keyEncryptionPassword
    PS C:\> Export-IISConfiguration -PhysicalPath "C:\export" -DontExportKeys -Force
  description: |-
    Passwords must be in **SecureString** format.
    The first command uses ConvertTo-SecureString to convert the specified password, and then stores it in the $KeyEncryptionPassword variable.
    Using **ConvertTo-SecureString** is useful in automation scenarios.

    The second command uses Read-Host to read console input for the key encryption password, and then stores it in the $KeyEncryptionPassword variable.
    Using **Read-Host** is a more secure method for UI scenarios.

    The third command exports the keys and configuration to C:\export, and encrypts the key with the specified password.

    The fourth command exports the configuration without the keys.
    Because the *Force* parameter is specified, this command overwrites the previous configuration.
    The exported keys in C:\export are not deleted.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: DontExportKeys
  description: |+
    Indicates that this operation does not export the keys.

    To enable the IIS shared configuration feature with this exported configuration, run the **Enable-IISSharedConfig** cmdlet with the *DontCopyRemoteKeys* switch parameter.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    Forces the command to run without asking for user confirmation.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SecureString" data-throw-if-not-resolved="False" />
  name: KeyEncryptionPassword
  description: |+
    Specifies the key encryption password for the exported keys.

    You can use this value with Enable-IISSharedConfig to enable shared configuration with the configuration that this cmdlet exports.

  defaultValue: None
  pipelineInput: true
  position: "4"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SecureString" data-throw-if-not-resolved="False" />
  name: Password
  description: |+
    Specifies the password of the account for accessing the physical location.

  defaultValue: None
  pipelineInput: true
  position: "3"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: PhysicalPath
  isRequired: true
  description: |+
    Specifies the location to which to export the configuration and  keys.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: UserName
  description: |+
    Specifies the user name of the account to access the physical location.

  defaultValue: None
  pipelineInput: true
  position: "2"
  aliases: ""
  parameterValueGroup: ""
uid: IISAdministration.Export-IISConfiguration
name: Export-IISConfiguration
description: |-
  The **Export-IISConfiguration** cmdlet exports the IIS configuration and machine keys to a specified location.

  The exported configuration is available only to administrators through the access control list (ACL).

  You can encrypt the machine keys with the *KeyEncryptionPassword* parameter.

  You must supply a valid username and password to access the export location.
  If you do not want to export the keys, specify the *DontExportKeys* parameter.
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: Microsoft.IIS.Powershell.Commands.dll-Help.xml
  Module Name: IISAdministration
  ms.date: 12/20/2016
  online version: https://docs.microsoft.com/powershell/module/iisadministration/export-iisconfiguration?view=windowsserver2022-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Export-IISConfiguration
