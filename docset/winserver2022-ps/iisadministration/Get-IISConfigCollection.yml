### YamlMime:PowershellCmdlet
summary: |-
  Gets a configuration collection object from an IIS configuration section or a configuration element.
module: IISAdministration
notes: ""
inputs:
- name: <xref href="Microsoft.Web.Administration.ConfigurationElement,System.String" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Clear-IISConfigCollection
  href: ./Clear-IISConfigCollection.yml
- text: Get-IISConfigElement
  href: ./Get-IISConfigElement.yml
- text: IIS Administration Cmdlets for Windows PowerShell
  href: ./index.yml
syntaxes:
- >-
  Get-IISConfigCollection [-ConfigElement] <ConfigurationElement> [[-CollectionName] <String>]

   [<CommonParameters>]
examples:
- title: 'Example 1: Get a configuration collection from an IIS configuration element'
  code: |-
    PS C:\> Get-IISConfigSection -SectionPath "system.webServer/defaultDocument" | Get-IISConfigCollection -CollectionName "files"

    Attributes      : {value}
    ChildElements   : {}
    ElementTagName  : add
    IsLocallyStored : True
    Methods         : 
    RawAttributes   : {[value, Default.htm]} 
    Schema          : Microsoft.Web.Administration.ConfigurationElementSchema

    Attributes      : {value}
    ChildElements   : {}
    ElementTagName  : add
    IsLocallyStored : True
    Methods         : 
    RawAttributes   : {[value, Default.asp]} 
    Schema          : Microsoft.Web.Administration.ConfigurationElementSchema
  description: |-
    This command gets the Files Collection for the system.webServer/defaultDocument section.
  summary: ""
- title: 'Example 2: Get a configuration element from an IIS configuration section'
  code: |-
    PS C:\> Get-IISConfigSection -SectionPath "system.webServer/defaultDocument" | Get-IISConfigElement -ChildElementName "files" | Get-IISConfigCollection


    Attributes      : {value}
    ChildElements   : {}
    ElementTagName  : add
    IsLocallyStored : True
    Methods         : 
    RawAttributes   : {[value, Default.htm]} 
    Schema          : Microsoft.Web.Administration.ConfigurationElementSchema

    Attributes      : {value}
    ChildElements   : {}
    ElementTagName  : add
    IsLocallyStored : True
    Methods         : 
    RawAttributes   : {[value, Default.asp]} 
    Schema          : Microsoft.Web.Administration.ConfigurationElementSchema
  description: |-
    This command gets the Files Element configuration object from the system.webServer/defaultDocument section then gets its default collection.
    The output of the two formats are the same.
  summary: ""
parameters:
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: CollectionName
  description: |+
    Specifies the name of the collection to be returned.
    If the name of the collection is not used, the Default Collection is returned.
    Alternatively, the named collection can be retrieved by **Get-IISConfigElement** then the default collection inside this element can be retrieved.

  defaultValue: None
  pipelineInput: true
  position: "2"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ConfigurationElement" data-throw-if-not-resolved="False" />
  name: ConfigElement
  isRequired: true
  description: |+
    Specifies the IIS ConfigurationSection or ConfigurationElement for which the ConfigurationCollection is returned.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
uid: IISAdministration.Get-IISConfigCollection
name: Get-IISConfigCollection
description: |-
  The **Get-IISConfigCollection** cmdlet gets a **ConfigurationCollection** object from either a ConfigurationSection or a ConfigurationElement. 

  It is advisable to not to assign this value to a parameter and pass it in the pipeline to the next cmdlet since Windows PowerShell cannot interpret this object.
  This is due to the fact that **ConfigurationCollection** implements IEnumerable and the pipeline processor enumerates each single element when used this way.
  Instead either pass the whole **Get-IISConfigCollection** cmdlet in the pipeline or pass it as a parameter.
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: Microsoft.IIS.Powershell.Commands.dll-Help.xml
  Module Name: IISAdministration
  ms.date: 12/20/2016
  online version: https://docs.microsoft.com/powershell/module/iisadministration/get-iisconfigcollection?view=windowsserver2022-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Get-IISConfigCollection
