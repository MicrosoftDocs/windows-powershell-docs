### YamlMime:PowershellCmdlet
summary: |-
  Gets the properties of managed servers in the IPAM server inventory.
module: IpamServer
notes: ""
outputs:
- name: <xref href="IpamServerInventory" data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet returns an object that represents a managed infrastructure server in IPAM system.
links:
- text: Add-IpamServerInventory
  href: ./Add-IpamServerInventory.yml
- text: Remove-IpamServerInventory
  href: ./Remove-IpamServerInventory.yml
- text: Set-IpamServerInventory
  href: ./Set-IpamServerInventory.yml
syntaxes:
- >-
  Get-IpamServerInventory -Name <String> [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob]

   [<CommonParameters>]
- >-
  Get-IpamServerInventory [-AddressFamily <AddressFamily[]>] [-ServerType <ServerRole[]>]

   [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [<CommonParameters>]
examples:
- title: 'Example 1: Get all IPv4 servers in the IPAM server inventory'
  code: |-
    PS C:\> Get-IpamServerInventory -AddressFamily IPv4 | Format-List Name, ServerType
    Name       : dhcp1.contoso.com

    ServerType : DHCP
    Name       : DC1.contoso.com

    ServerType : DC
  description: |-
    This command gets all IPv4 servers in the IPAM server inventory.
  summary: ""
- title: 'Example 2: Get all IPv4 DHCP servers in the IPAM server inventory'
  code: |-
    PS C:\> Get-IpamServerInventory -AddressFamily IPv4 -ServerType DHCP| Format-List Name, ServerType
    Name       : dhcp1.contoso.com

    ServerType : DHCP
  description: |-
    This command gets all IPv4 DHCP servers in the IPAM server inventory.
  summary: ""
parameters:
- type: <xref href="AddressFamily" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: AddressFamily
  description: |+
    Specifies an array of address families to which the infrastructure server belongs.

    The acceptable values for this parameter are: IPv4 or IPv6.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: IPv4, IPv6
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    Runs the cmdlet as a background job. Use this parameter to run commands that take a long time to complete. 

    The cmdlet immediately returns an object that represents the job and then displays the command prompt. 
    You can continue to work in the session while the job completes. 
    To manage the job, use the `*-Job` cmdlets. 
    To get the job results, use the [Receive-Job](https://go.microsoft.com/fwlink/?LinkID=113372) cmdlet. 

    For more information about Windows PowerShell background jobs, see [about_Jobs](https://go.microsoft.com/fwlink/?LinkID=113251).

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a [New-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227967) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966) cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    Specifies fully qualified domain names of the servers for which to get data.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ServerName
  parameterValueGroup: ""
- type: <xref href="ServerRole" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: ServerType
  description: |+
    Specifies an array of server roles on which to filter the results.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: DC, DNS, DHCP, NPS
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShellÂ® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: IpamServer.Get-IpamServerInventory
name: Get-IpamServerInventory
description: |-
  The **Get-IpamServerInventory** cmdlet gets the list of managed servers in the IP Address Management (IPAM) server inventory.
  Managed servers include the servers that perform domain controller (DC), Dynamic Host Configuration Protocol (DHCP), Domain Name Service (DNS), or Network Policy Server (NPS) roles.
  You can filter the list of servers based on address family, the type of server role, or a list of fully qualified domain names (FQDNs).
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: IpamServerInventory.cdxml-help.xml
  Module Name: IpamServer
  ms.date: 12/20/2016
  online version: https://docs.microsoft.com/powershell/module/ipamserver/get-ipamserverinventory?view=windowsserver2022-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Get-IpamServerInventory
