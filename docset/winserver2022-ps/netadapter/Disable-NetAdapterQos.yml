### YamlMime:PowershellCmdlet
summary: |-
  Disables QoS on a network adapter.
module: NetAdapter
notes: ""
inputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/MSFT_NetAdapterQosSettingData" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
    The input object is a list of network adapter objects, such as output from the **Get-NetAdapter** cmdlet.
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance# ROOT/StandardCimv2/MSFT_NetAdapterQosSettingData" data-throw-if-not-resolved="False" />
  description: |-
    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
    The output object contains QoS capabilities and configurations on a network adapter.
    The output object is returned only when *PassThru* parameter is specified.
links:
- text: Enable-NetAdapterQos
  href: ./Enable-NetAdapterQos.yml
- text: Get-NetAdapter
  href: ./Get-NetAdapter.yml
- text: Get-NetAdapterQos
  href: ./Get-NetAdapterQos.yml
syntaxes:
- >-
  Disable-NetAdapterQos [-Name] <String[]> [-IncludeHidden] [-NoRestart] [-PassThru] [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Disable-NetAdapterQos -InterfaceDescription <String[]> [-IncludeHidden] [-NoRestart] [-PassThru]

   [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Disable-NetAdapterQos -InputObject <CimInstance[]> [-NoRestart] [-PassThru] [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Disable QoS on all network adapters'
  code: |-
    PS C:\> Disable-NetAdapterQos -Name "*"
  description: |-
    This command disables QoS on all network adapters and restarts the network adapters.
  summary: ""
- title: 'Example 2: Disable QoS on a specified network adapter'
  code: |-
    PS C:\> Disable-NetAdapterQos -Name "Ethernet 2"
  description: |-
    This command disables QoS on a network adapter named Ethernet 2 and restarts the network adapter.
  summary: ""
- title: 'Example 3: Get all network adapters that support QoS and disable them'
  code: |-
    PS C:\> $NetAdapterQoS1 = Get-NetAdapterQos -Name "*"
    PS C:\> Disable-NetAdapterQos -InputObject $NetAdapterQoS1
  description: |-
    The first command gets all network adapters that support QoS and stores the result in the variable named $NetAdapterQoS1.

    The second command disables all network adapters that are stored in the $NetAdapterQoS1 and restarts them.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    Runs the cmdlet as a background job.
    Use this parameter to run commands that take a long time to complete. 
     The cmdlet immediately returns an object that represents the job and then displays the command prompt.
    You can continue to work in the session while the job completes.
    To manage the job, use the `*-Job` cmdlets.
    To get the job results, use the [Receive-Job](https://go.microsoft.com/fwlink/?LinkID=113372) cmdlet. 
     For more information about Windows PowerShell® background jobs, see [about_Jobs](https://go.microsoft.com/fwlink/?LinkID=113251).

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a [New-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227967) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966) cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: IncludeHidden
  description: |+
    Indicates that the cmdlet includes both visible and hidden network adapters in the operation.
    By default only visible network adapters are included.
    If a wildcard character is used in identifying a network adapter and this parameter has been specified, then the wildcard string is matched against both hidden and visible network adapters.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InputObject
  isRequired: true
  description: |+
    Specifies the input to this cmdlet.
    You can use this parameter, or you can pipe the input to this cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InterfaceDescription
  isRequired: true
  description: |+
    Specifies an array of network adapter interface descriptions.
    For a physical network adapter this is typically the name of the vendor of the network adapter followed by a part number and description, such as `Contoso 12345 Gigabit Network Device`.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ifDesc, InstanceID
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Name
  isRequired: true
  description: |+
    Specifies an array of network adapter names.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ifAlias, InterfaceAlias
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: NoRestart
  description: |+
    Indicates that the cmdlet does not restart the network adapter after completing the operation.
    Many advanced properties require restarting the network adapter before the new settings take effect.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns an object representing the item with which you are working.
    By default, this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: NetAdapter.Disable-NetAdapterQos
name: Disable-NetAdapterQos
description: |-
  The **Disable-NetAdapterQos** cmdlet disables quality of service (QoS) on a network adapter.
  The QoS features, which include bandwidth allocation and priority based flow control, are specified in the IEEE data center bridging (DCB) standard.
  When QoS is disabled, the computer will not send to the network adapter any configuration for the QoS features.
  This cmdlet does not stop the network adapter from setting up configurations and utilizing the hardware QoS capabilities.

  A network adapter that supports DCB is typically known as a converged network adapter.
  It supports both storage and networking functionalities.
  In some use cases the DCB must be enabled to support the storage functionalities.
  If DCB on a network adapter is disabled from the point of view of a computer, then it may still be functioning on the network adapter.
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: MSFT_NetAdapterQos.cdxml-help.xml
  Module Name: NetAdapter
  ms.date: 12/20/2016
  online version: https://docs.microsoft.com/powershell/module/netadapter/disable-netadapterqos?view=windowsserver2022-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Disable-NetAdapterQos
