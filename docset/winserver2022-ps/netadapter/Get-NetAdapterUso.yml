### YamlMime:PowershellCmdlet
summary: |-
  Gets the USO properties of the network adapter.
module: NetAdapter
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: ""
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/MSFT_NetAdapterUsoSettingData" data-throw-if-not-resolved="False" />
  description: ""
syntaxes:
- >-
  Get-NetAdapterUso [[-Name] <String[]>] [-IncludeHidden] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>]

   [-AsJob] [<CommonParameters>]
- >-
  Get-NetAdapterUso -InterfaceDescription <String[]> [-IncludeHidden] [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [<CommonParameters>]
examples:
- title: 'Example 1: Get the USO properties for the specified network adapter'
  code: |-
    PS> Get-NetAdapterUso -Name "MyAdapter"
  description: |-
    This command gets the USO properties of the network adapter named MyAdapter.
  summary: ""
- title: 'Example 2: Display all the USO properties for the specified network adapter'
  code: |-
    PS> Get-NetAdapterUso -Name "MyAdapter" | Format-List -Property "*"
  description: |-
    This command displays all of the USO properties of the network adapter named MyAdapter.
  summary: ""
- title: 'Example 3: Get all network adapters that have USO enabled'
  code: |-
    PS> Get-NetAdapterUso -Name "*" | Where-Object -FilterScript { $_.Enabled }
  description: |-
    This command gets all network adapters with USO enabled.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    Runs the cmdlet as a background job.
    Use this parameter to run commands that take a long time to complete. 
     The cmdlet immediately returns an object that represents the job and then displays the command prompt.
    You can continue to work in the session while the job completes.
    To manage the job, use the `*-Job` cmdlets.
    To get the job results, use the [Receive-Job](https://go.microsoft.com/fwlink/?LinkID=113372) cmdlet. 
     For more information about Windows PowerShell background jobs, see [about_Jobs](https://go.microsoft.com/fwlink/?LinkID=113251).

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a [New-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227967) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966) cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: IncludeHidden
  description: |+
    Indicates that this cmdlet includes both visible and hidden network adapters. By
    default only visible network adapters are included. If a wildcard character is
    used in identifying a network adapter and this parameter has been specified,
    then the wildcard string is matched against both hidden and visible network
    adapters.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InterfaceDescription
  isRequired: true
  description: |+
    Specifies an array of network adapter interface descriptions. For a physical
    network adapter this is typically the name of the vendor of the network adapter
    followed by a part number and description, such as
    `Contoso 12345 Gigabit Network Device`.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ifDesc, InstanceID
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Name
  description: |+
    Specifies an array of network adapter names.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ifAlias, InterfaceAlias
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to
    run the cmdlet. If this parameter is omitted or a value of `0` is entered, then
    Windows PowerShell calculates an optimum throttle limit for the cmdlet based on
    the number of CIM cmdlets that are running on the computer. The throttle limit
    applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: NetAdapter.Get-NetAdapterUso
name: Get-NetAdapterUso
description: |-
  The **Get-NetAdapterUso** cmdlet gets the UDP Segmentation Offload (USO) that enables network interface cards (NICs) to offload the segmentation of UDP datagrams that are larger than the maximum transmission unit (MTU) of the network medium. By doing so, Windows reduces CPU utilization associated with per-packet TCP/IP processing. For more information, see [UDP Segmentation Offload (USO)](/windows-hardware/drivers/network/udp-segmentation-offload-uso-).
metadata:
  description: Gets the USO properties of the network adapter.
  external help file: MSFT_NetAdapterUso.cdxml-help.xml
  Module Name: NetAdapter
  ms.date: 09/20/2021
  online version: https://learn.microsoft.com/powershell/module/netadapter/get-netadapteruso?view=windowsserver2022-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Get-NetAdapterUso
