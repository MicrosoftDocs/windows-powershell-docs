### YamlMime:PowershellCmdlet
summary: |-
  Adds a network adapter as a filter on a provider.
module: NetEventPacketCapture
notes: ""
links:
- text: Get-NetEventNetworkAdapter
  href: ./Get-NetEventNetworkAdapter.yml
- text: Remove-NetEventNetworkAdapter
  href: ./Remove-NetEventNetworkAdapter.yml
- text: New-NetEventSession
  href: ./New-NetEventSession.yml
- text: Add-NetEventPacketCaptureProvider
  href: ./Add-NetEventPacketCaptureProvider.yml
syntaxes:
- >-
  Add-NetEventNetworkAdapter [-Name] <String> [[-PromiscuousMode] <Boolean>] [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Add a network adapter'
  code: |-
    PS C:\>New-NetEventSession -Name "Session38"
    PS C:\> Add-NetEventPacketCaptureProvider -SessionName "Session38"
    PS C:\> Add-NetEventNetworkAdapter -Name "Ethernet01"
  description: |-
    This example creates a network event session, adds a provider, and then adds a network adapter.

    The first command uses the New-NetEventSession cmdlet to create a network event session named Session38.

    The second command adds a provider to the session named Session38 by using the Add-NetEventPacketCaptureProvider cmdlet.
    A session must have a provider in order to capture packets.

    The third command adds a network adapter.
    After you create and configure the session, use the Start-NetEventSession cmdlet to start capturing packets.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    Runs the cmdlet as a background job. Use this parameter to run commands that take a long time to complete.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a [New-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227967) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966) cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    Specifies the name of a network adapter to add.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: PromiscuousMode
  description: |+
    Specifies whether the network adapter uses promiscuous mode.

  defaultValue: None
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShellÂ® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs. The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: NetEventPacketCapture.Add-NetEventNetworkAdapter
name: Add-NetEventNetworkAdapter
description: |-
  The **Add-NetEventNetworkAdapter** cmdlet adds a network adapter as a filter on a Remote Packet Capture provider.
  The protocol stack uses multiple layers to transmit, receive, and process network traffic, or packets.
  The provider logs network traffic as Event Tracing for Windows (ETW) events.

  Use this cmdlet multiple times to add several adapters.
  To see which adapters currently belong to a provider, use the Get-NetEventNetworkAdapter cmdlet.

  When you add an adapter to provider in a session that is currently running, stop and start the session for your changes to take effect.
  Use the Stop-NetEventSession cmdlet to stop a session and the Start-NetEventSession cmdlet to restart it.
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: MSFT_NetEventNetworkAdapter.cdxml-help.xml
  Module Name: NetEventPacketCapture
  ms.date: 12/20/2016
  online version: https://docs.microsoft.com/powershell/module/neteventpacketcapture/add-neteventnetworkadapter?view=windowsserver2022-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Add-NetEventNetworkAdapter
