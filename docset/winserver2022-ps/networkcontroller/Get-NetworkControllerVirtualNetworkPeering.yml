### YamlMime:PowershellCmdlet
summary: |-
  Gets a virtual network peering.
module: NetworkController
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: ""
outputs:
- name: <xref href="System.Object" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: New-NetworkControllerVirtualNetworkPeering
  href: New-NetworkControllerVirtualNetworkPeering.yml
- text: Remove-NetworkControllerVirtualNetworkPeering
  href: Remove-NetworkControllerVirtualNetworkPeering.yml
syntaxes:
- >-
  Get-NetworkControllerVirtualNetworkPeering [-VirtualNetworkId] <String[]> [[-ResourceId] <String[]>]

   -ConnectionUri <Uri> [-CertificateThumbprint <String>] [-Credential <PSCredential>] [-PassInnerException]

   [<CommonParameters>]
examples:
- title: 'Example 1: Get a virtual network peering object'
  code: |-
    Get-NetworkControllerVirtualNetworkPeering -VirtualNetworkId "Contoso_vnet1" -ConnectionUri https://networkcontroller
  description: |-
    This example gets the virtual network peering object for the specified virtual network.
  summary: ""
parameters:
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: CertificateThumbprint
  description: |+
    Specifies the digital public key X.509 certificate of a user account that has permission to perform this action.
    Specify this parameter only if you run this cmdlet on a computer that is not part of the network controller cluster.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Uri" data-throw-if-not-resolved="False" />
  name: ConnectionUri
  isRequired: true
  description: |+
    Specifies the Uniform Resource Identifier (URI) of a Network Controller.
    The cmdlet gets the virtual network peering for that controller.


  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="PSCredential" data-throw-if-not-resolved="False" />
  name: Credential
  description: |+
    Specifies a user credential that has permission to perform this action.
    The default value is the current user.

    This user must be present in the security group provided in the **ClientSecurityGroup** parameter in the `Install-NetworkController` cmdlet.
    Specify this parameter only if you run this cmdlet on a computer that is not part of the network controller cluster.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassInnerException
  description: |+
    This thumbprint must also be provided in the **ClientCertificateThumbprint** parameter in the **Install-NetworkController** or **Set-NetworkController** cmdlet so that Network Controller can authorize this user.

    The thumbprint must be provided only if the network controller client authentication is X509 certificates.
    **Get-NetworkController** retrieves that client authentication and authorization information.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: ResourceId
  description: |+
    Specifies the resource ID of the virtual network peering to get.

  defaultValue: None
  position: "2"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: VirtualNetworkId
  isRequired: true
  description: |+
    Specified the ID of a virtual network.
    This cmdlet gets a peering for that network.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
uid: NetworkController.Get-NetworkControllerVirtualNetworkPeering
name: Get-NetworkControllerVirtualNetworkPeering
description: |-
  The **Get-NetworkControllerVirtualNetworkPeering** cmdlet gets a virtual network peering.
  A peering enables connectivity between two virtual networks.
metadata:
  description: The Get-NetworkControllerVirtualNetworkPeering cmdlet gets a virtual network peering.
  external help file: Microsoft.NetworkController.Powershell.dll-help.xml
  Module Name: NetworkController
  ms.date: 09/27/2021
  online version: https://docs.microsoft.com/powershell/module/networkcontroller/get-networkcontrollervirtualnetworkpeering?view=windowsserver2022-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Get-NetworkControllerVirtualNetworkPeering
