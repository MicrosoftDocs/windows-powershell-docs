### YamlMime:PowershellCmdlet
summary: |-
  Gets the details of events generated in a Server Manager event log.
module: ServerManagerTasks
notes: ""
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#MSFT_ServerEventDetail" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: ""
syntaxes:
- >-
  Get-SMServerEvent [-Log <String[]>] [-Level <EventLevelFlag[]>] [-StartTime <UInt64[]>] [-EndTime <UInt64[]>]

   [-BatchSize <UInt32>] [-QueryFile <String[]>] [-QueryFileId <Int32[]>] [-CimSession <CimSession[]>]

   [-ThrottleLimit <Int32>] [-AsJob] [<CommonParameters>]
examples:
- title: 'Example 1: Get Server Manager Management Provider events'
  code: |-
    PS C:\>Get-SMServerEvent -Log 'Microsoft-Windows-ServerManager-MgmtProvider/Operational' | Format-Table -Property Description,Source
  description: |-
    This command gets the events in the Server Manager Management Provider Operational event log channel.
    Because no batch size is specified, the command uses the default batch size, 100 result entries.
    To reduce the results to a manageable display size, the command is piped to the Format-Table cmdlet, where the properties Description and Source become the column headings.
  summary: ""
- title: 'Example 2: Get events of a specific severity level'
  code: |-
    PS C:\>Get-SMServerEvent -Log 'Microsoft-Windows-ServerManager-DeploymentProvider/Operational' -Level Warning
  description: |-
    This command returns events with a severity level of Warning from the Server Manager Deployment Provider log.
  summary: ""
- title: 'Example 3: Get events for the File and Storage Services role'
  code: ""
  description: |-
    This command returns events
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    Runs the cmdlet as a background job. Use this parameter to run commands that take a long time to complete.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="UInt32" data-throw-if-not-resolved="False" />
  name: BatchSize
  description: |+
    Specifies the batch size, or number of event records, that you want returned as results.
    The default is 100.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="UInt64" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: EndTime
  description: |+
    Specifies one or more event end times.
    The time value in event records represents the number of seconds that the target server has been online.
    The command omits events that occur after the *EndTime* values.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="EventLevelFlag" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Level
  description: |+
    Specifies one or more event severity levels that determine which events to return.
    Valid values include

    - Informational 
    - Error
    - Warning 
    - Critical

    If this parameter is not specified, the default is all events.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: Critical, Error, Warning, Informational, All
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Log
  description: |+
    Specifies one or more Server Manager log channels.
    For best results, enclose values for this parameter in single quotation marks.
    The following are valid values for this parameter.

    - Microsoft-Windows-ServerManager-ConfigureSMRemoting/Operational
    - Microsoft-Windows-ServerManager-DeploymentProvider/Operational
    - Microsoft-Windows-ServerManager-MgmtProvider/Operational
    - Microsoft-Windows-ServerManager-MultiMachine/Admin
    - Microsoft-Windows-ServerManager-MultiMachine/Operational

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: QueryFile
  description: |+
    Specifies one or more XML query file names, used for filtering events for a specific role or feature.
    To filter events for a specific role or group, first run the Get-SMServerFeature function to get the name of the query file that Server Manager uses to get data associated with a specific, installed role or feature.
    The query file name becomes the value of the *QueryFile* parameter.
    Note that Get-SMServerFeature does not return query file names for, nor can you get events for, roles and features that are not installed on the target server.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: QueryFileId
  description: |+
    Specifies one or more query file IDs.
    You can obtain values for this parameter by running Get-SMServerFeature, as described in the preceding parameter description, *QueryFile*.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="UInt64" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: StartTime
  description: |+
    Specifies one or more event start times.
    The time value in event records represents the number of seconds that the target server has been online.
    The command omits events that occur before the *StartTime* values.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: ServerManagerTasks.Get-SMServerEvent
name: Get-SMServerEvent
description: |-
  The **Get-SMServerEvent** cmdlet gets the details of events from a server that is running Windows Server, in one of the five Server Manager event log channels.
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: ServerManagerTasks.cdxml-help.xml
  Module Name: ServerManagerTasks
  ms.date: 12/20/2016
  online version: https://docs.microsoft.com/powershell/module/servermanagertasks/get-smserverevent?view=windowsserver2022-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Get-SMServerEvent
