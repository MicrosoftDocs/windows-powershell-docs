### YamlMime:PowershellCmdlet
summary: |-
  Enables the identification LED on the specified physical disk.
module: Storage
notes: |-
  * The **Microsoft.Management.Infrastructure.CimInstance** object is a wrapper class that displays Windows Management Instrumentation (WMI) objects. The path after the pound sign (#) provides the namespace and class name for the underlying WMI object.
  * When used in Failover Cluster, cmdlets from the Storage module operate on cluster level (all servers in the cluster).
inputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/Microsoft/Windows/Storage/MSFT_PhysicalDisk" data-throw-if-not-resolved="False" />
  description: |-
    You can pipe a **Disk** object to the *InputObject* parameter.
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#ROOT/Microsoft/Windows/Storage/MSFT_PhysicalDisk" data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet outputs an object that represents the physical disk for which you enabled the identification LED.
links:
- text: Disable-PhysicalDiskIdentification
  href: ./Disable-PhysicalDiskIdentification.yml
syntaxes:
- >-
  Enable-PhysicalDiskIdentification [-FriendlyName] <String> [-CimSession <CimSession>] [-ThrottleLimit <Int32>]

   [-AsJob] [<CommonParameters>]
- >-
  Enable-PhysicalDiskIdentification -UniqueId <String> [-CimSession <CimSession>] [-ThrottleLimit <Int32>]

   [-AsJob] [<CommonParameters>]
- >-
  Enable-PhysicalDiskIdentification -InputObject <CimInstance[]> [-CimSession <CimSession>]

   [-ThrottleLimit <Int32>] [-AsJob] [<CommonParameters>]
examples:
- title: 'Example 1: Enable the identification LED on all physical disks with certain FriendlyName'
  code: |-
    PS C:\> Enable-PhysicalDiskIdentification -FriendlyName ST2000LM015-2E8174
  description: |-
    This example enables the identification LED on all physical disks with *FriendlyName* ST2000LM015-2E8174.
  summary: ""
- title: 'Example 2: Enable the identification LED on physical disk with certain UniqueId'
  code: |-
    sPS C:\> Enable-PhysicalDiskIndication -UniqueId 5000C500B1DA75F6
  description: |-
    This example enables the identification LED physical disk with *UniqueId* 5000C500B1DA75F6.
  summary: ""
- title: 'Example 3: Enable the identification LED on all disks that are not healthy'
  code: |-
    PS C:\>Get-PhysicalDisk | Where-Object -FilterScript { $_.HealthStatus -Ne "healthy" } | Enable-PhysicalDiskIndication
  description: |-
    This example gets all physical disks with a health status that is not Healthy, and pipes the disks to the **Enable-PhysicalDiskIndication** cmdlet, enabling the LEDs on the disks, if supported by the drive enclosure.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    Runs the cmdlet as a background job. Use this parameter to run commands that take a long time to complete.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" />
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a [New-CimSession](https://docs.microsoft.com/powershell/module/cimcmdlets/new-cimsession) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966) cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: FriendlyName
  isRequired: true
  description: |+
    Specifies the friendly name of the disk on which to enable the identification LED.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimInstance" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InputObject
  isRequired: true
  description: |+
    Specifies the input object that is used in a pipeline command.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShell calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: UniqueId
  isRequired: true
  description: |+
    Specifies an ID used to uniquely identify a Disk object in the system.
    The ID persists through restarts.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: Id
  parameterValueGroup: ""
uid: Storage.Enable-PhysicalDiskIdentification
name: Enable-PhysicalDiskIdentification
description: |-
  The **Enable-PhysicalDiskIdentification** cmdlet enables the identification LED on the specified physical disk.
  The LED is typically used for visual identification of the location of a physical disk in an enclosure for removal and replacement operations.
  This cmdlet requires a storage enclosure that supports SCSI Enclosure Services (SES).
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: StorageScripts-help.xml
  Module Name: Storage
  ms.date: 12/20/2016
  online version: https://docs.microsoft.com/powershell/module/storage/enable-physicaldiskidentification?view=windowsserver2022-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Enable-PhysicalDiskIdentification
