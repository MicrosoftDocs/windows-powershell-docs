### YamlMime:PowershellCmdlet
summary: |-
  Retrieves per-volume performance metrics on a volume that is monitored by Storage QoS.
module: StorageQoS
notes: ""
outputs:
- name: <xref href="Microsoft.Management.Infrastructure.CimInstance#MSFT_StorageQoSVolume" data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet outputs a Common Information Model (CIM) object of type MSFT_StorageQoSVolumehttps://msdn.microsoft.com/en-us/library/mt164596(v=vs.85).aspx (https://msdn.microsoft.com/en-us/library/mt164596(v=vs.85).aspx).

    The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects.
    The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.
links:
- text: Get-StorageQoSFlow
  href: ./Get-StorageQoSFlow.yml
- text: Get-StorageQosPolicy
  href: ./Get-StorageQosPolicy.yml
- text: New-StorageQosPolicy
  href: ./New-StorageQosPolicy.yml
- text: Remove-StorageQosPolicy
  href: ./Remove-StorageQosPolicy.yml
- text: Set-StorageQosPolicy
  href: ./Set-StorageQosPolicy.yml
syntaxes:
- >-
  Get-StorageQosVolume [-VolumeId <Guid[]>] [-Mountpoint <String[]>] [-Status <Status[]>]

   [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-AsJob] [<CommonParameters>]
examples:
- title: 'Example 1: Get QoS statistics for volumes at a specified path'
  code: |-
    PS C:\>
    Get-StorageQosVolume -Mountpoint "C:\ClusterStorage\*"

    Mountpoint                 IOPS Latency Status

    ----------                 ---- ------- ------

    C:\ClusterStorage\Volume01\ 110  18.8469 Ok
  description: |-
    This command gets QoS statistics for all volumes mounted under C:\ClusterStorage.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    Runs the cmdlet as a background job. Use this parameter to run commands that take a long time to complete.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a [New-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227967) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966) cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  position: Named
  aliases: Session
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Mountpoint
  description: |+
    Specifies the file system path of a volume.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Status" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Status
  description: |+
    Specifies the status of flows on a volume. 
    - Ok indicates the minimum IOPS are being met. 
    - InsufficientThroughput indicates IOPS are below minimum.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Ok, InsufficientThroughput, LostCommunication
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShellÂ® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Guid" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: VolumeId
  description: |+
    Specifies the ID of a volume that services flows.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: StorageQoS.Get-StorageQosVolume
name: Get-StorageQosVolume
description: |-
  The **Get-StorageQosVolume** cmdlet retrieves per-volume storage performance metrics on a volume that services Storage Quality of Service (Storage QoS) flows.
  The metrics are throughput and latency averages, aggregated over all flows, and computed over a 5-minute rolling time interval.

  Each file handle opened by a server that runs Hyper-V to a VHD or VHDX file is considered a flow.
  If a virtual machine has two virtual hard disks attached, it has 1 flow to the file server cluster per file.
  If a VHDX is shared with multiple virtual machines, it has 1 flow per virtual machine.

  For more information about Storage QoS, see Storage Quality of Servicehttps://technet.microsoft.com/en-us/library/Mt126108 (https://technet.microsoft.com/en-us/library/Mt126108).
metadata:
  description: Use this topic to help manage Windows and Windows Server technologies with Windows PowerShell.
  external help file: QosVolume.cdxml-help.xml
  Module Name: StorageQoS
  ms.date: 12/20/2016
  online version: https://docs.microsoft.com/powershell/module/storageqos/get-storageqosvolume?view=windowsserver2022-ps&wt.mc_id=ps-gethelp
  schema: 2.0.0
  title: Get-StorageQosVolume
